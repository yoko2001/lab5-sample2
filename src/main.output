Nonterminals useless in grammar

   statements


Terminals unused in grammar

   T_STRING
   CHAR
   BOOL
   STRING


Rules useless in grammar

  146 statements: statement
  147           | statements statement


Rules useless in parser due to conflicts

   23 expression-statement: SEMICOLON

   29 block-item: declaration


State 14 conflicts: 8 shift/reduce
State 17 conflicts: 8 shift/reduce
State 20 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce
State 86 conflicts: 30 reduce/reduce
State 96 conflicts: 29 reduce/reduce
State 97 conflicts: 2 shift/reduce
State 229 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation-unit $end

    1 translation-unit: external-declaration
    2                 | translation-unit external-declaration

    3 external-declaration: function-definition
    4                     | declaration

    5 function-definition: declaration-specifiers declarator compound-statement

    6 statement: SEMICOLON
    7          | declaration
    8          | compound-statement
    9          | expression-statement
   10          | selection-statement
   11          | iteration-statement
   12          | jump-statement

   13 jump-statement: KW_BREAK SEMICOLON
   14               | KW_CONTINUE SEMICOLON
   15               | KW_RET SEMICOLON
   16               | KW_RET assignment-expression SEMICOLON

   17 iteration-statement: KW_WHILE L_BRACKET expression R_BRACKET statement
   18                    | KW_DO statement KW_WHILE L_BRACKET expression R_BRACKET
   19                    | KW_FOR L_BRACKET SEMICOLON SEMICOLON R_BRACKET
   20                    | KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET

   21 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement
   22                    | KW_IF L_BRACKET expression R_BRACKET statement KW_ELSE statement

   23 expression-statement: SEMICOLON
   24                     | expression SEMICOLON

   25 compound-statement: L_BRACE block-item-list R_BRACE
   26                   | L_BRACE R_BRACE

   27 block-item-list: block-item
   28                | block-item-list block-item

   29 block-item: declaration
   30           | statement

   31 declaration: declaration-specifiers init-declarator-list SEMICOLON
   32            | declaration-specifiers

   33 declaration-specifiers: type-specifier
   34                       | type-specifier declaration-specifiers
   35                       | type-qualifier
   36                       | type-qualifier declaration-specifiers

   37 init-declarator-list: init-declarator
   38                     | init-declarator-list LO_COMMA init-declarator

   39 init-declarator: declarator
   40                | declarator RO_ASSIGN initializer

   41 initializer: assignment-expression
   42            | L_BRACE initializer-list R_BRACE

   43 initializer-list: initializer
   44                 | initializer-list LO_COMMA initializer

   45 expression: assignment-expression
   46           | expression LO_COMMA assignment-expression

   47 assignment-operator: RO_ASSIGN
   48                    | RO_AS_ADDEQ
   49                    | RO_AS_ANDEQ
   50                    | RO_AS_DIVEQ
   51                    | RO_AS_MULEQ
   52                    | RO_AS_OREQ
   53                    | RO_AS_SFTL_EQ
   54                    | RO_AS_SFTR_EQ
   55                    | RO_AS_SUBEQ

   56 assignment-expression: conditional-expression
   57                      | unary-expression assignment-operator assignment-expression

   58 conditional-expression: logical-OR-expression
   59                       | logical-OR-expression RO_TRI_QUES expression RO_TRI_COLON conditional-expression

   60 logical-OR-expression: logical-AND-expression
   61                      | logical-OR-expression LO_LGC_OR logical-AND-expression

   62 logical-AND-expression: inclusive-OR-expression
   63                       | logical-AND-expression LO_LGC_AND inclusive-OR-expression

   64 inclusive-OR-expression: exclusive-OR-expression
   65                        | inclusive-OR-expression LO_BIT_OR exclusive-OR-expression

   66 exclusive-OR-expression: AND-expression
   67                        | exclusive-OR-expression LO_BIT_XOR AND-expression

   68 AND-expression: equality-expression
   69               | AND-expression LO_BIT_AND equality-expression

   70 equality-expression: relational-expression
   71                    | equality-expression LO_EQ relational-expression
   72                    | equality-expression LO_N_EQ relational-expression

   73 relational-expression: shift-expression
   74                      | relational-expression LO_REL_L shift-expression
   75                      | relational-expression LO_REL_G shift-expression
   76                      | relational-expression LO_REL_LE shift-expression
   77                      | relational-expression LO_REL_GE shift-expression

   78 shift-expression: additive-expression
   79                 | shift-expression LO_SFT_L additive-expression
   80                 | shift-expression LO_SFT_R additive-expression

   81 additive-expression: multiplicative-expression
   82                    | additive-expression LO_ADD multiplicative-expression
   83                    | additive-expression LO_SUB multiplicative-expression

   84 multiplicative-expression: cast-expression
   85                          | multiplicative-expression LO_MUL cast-expression
   86                          | multiplicative-expression LO_DIV cast-expression
   87                          | multiplicative-expression LO_MOD cast-expression

   88 cast-expression: unary-expression
   89                | L_BRACKET type-specifier R_BRACKET cast-expression

   90 unary-operator: LO_BIT_AND
   91               | LO_MUL
   92               | LO_ADD
   93               | LO_SUB
   94               | LO_BIT_NOT
   95               | LO_LGC_NOT

   96 unary-expression: postfix-expression
   97                 | LO_AS_SELFINC unary-expression
   98                 | LO_AS_SELFDEC unary-expression
   99                 | unary-operator cast-expression

  100 postfix-expression: primary-expression
  101                   | postfix-expression L_SQ_BRACKET expression R_SQ_BRACKET
  102                   | postfix-expression LO_MEMBER IDENTIFIER
  103                   | postfix-expression LO_PT_MEMBER IDENTIFIER
  104                   | postfix-expression LO_AS_SELFINC
  105                   | postfix-expression LO_AS_SELFDEC
  106                   | postfix-expression L_BRACKET argument-expression-list R_BRACKET

  107 argument-expression-list: assignment-expression
  108                         | argument-expression-list LO_COMMA assignment-expression

  109 primary-expression: IDENTIFIER
  110                   | constant
  111                   | L_BRACKET expression R_BRACKET

  112 constant: INTEGER

  113 type-specifier: T_INT
  114               | T_CHAR
  115               | T_BOOL
  116               | T_SIGNED
  117               | T_UNSIGNED
  118               | struct-or-union-specifier

  119 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE struct-declaration-list R_BRACE
  120                          | struct-or-union L_BRACE struct-declaration-list R_BRACE
  121                          | struct-or-union IDENTIFIER

  122 struct-or-union: KW_STRUCT
  123                | KW_UNION

  124 struct-declaration-list: struct-declaration
  125                        | struct-declaration-list struct-declaration

  126 struct-declaration: specifier-qualifier-list struct-declarator-list SEMICOLON

  127 specifier-qualifier-list: type-specifier
  128                         | type-specifier specifier-qualifier-list
  129                         | type-qualifier
  130                         | type-qualifier specifier-qualifier-list

  131 struct-declarator-list: struct-declarator
  132                       | struct-declarator-list LO_COMMA struct-declarator

  133 struct-declarator: declarator
  134                  | declarator COLON INTEGER

  135 declarator: pointer declarator
  136           | direct-declarator

  137 direct-declarator: IDENTIFIER
  138                  | direct-declarator L_SQ_BRACKET assignment-expression R_SQ_BRACKET
  139                  | direct-declarator L_BRACKET parameter-type-list R_BRACKET

  140 parameter-type-list: parameter-declaration
  141                    | parameter-type-list LO_COMMA parameter-declaration

  142 parameter-declaration: declaration-specifiers declarator

  143 pointer: LO_MUL
  144        | LO_MUL pointer

  145 type-qualifier: Q_CONST


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 114
T_INT (259) 113
T_STRING (260)
T_BOOL (261) 115
LO_EQ (262) 71
LO_N_EQ (263) 72
RO_AS_ADDEQ (264) 48
RO_AS_SUBEQ (265) 55
RO_AS_MULEQ (266) 51
RO_AS_DIVEQ (267) 50
RO_AS_SFTL_EQ (268) 53
RO_AS_SFTR_EQ (269) 54
RO_AS_ANDEQ (270) 49
RO_AS_OREQ (271) 52
LO_AS_SELFINC (272) 97 104
LO_AS_SELFDEC (273) 98 105
RO_TRI_QUES (274) 59
RO_TRI_COLON (275) 59
LO_MUL (276) 85 91 143 144
LO_DIV (277) 86
LO_ADD (278) 82 92
LO_SUB (279) 83 93
LO_BIT_NOT (280) 94
LO_MOD (281) 87
LO_SFT_L (282) 79
LO_LGC_OR (283) 61
LO_LGC_AND (284) 63
LO_SFT_R (285) 80
LO_LGC_NOT (286) 95
LO_BIT_XOR (287) 67
LO_BIT_AND (288) 69 90
LO_BIT_OR (289) 65
RO_ASSIGN (290) 40 47
LO_COMMA (291) 38 44 46 108 132 141
KW_CONTINUE (292) 14
KW_BREAK (293) 13
KW_IF (294) 21 22
KW_FOR (295) 19 20
KW_RET (296) 15 16
KW_STRUCT (297) 122
KW_WHILE (298) 17 18
KW_DO (299) 18
KW_ELSE (300) 22
T_SIGNED (301) 116
T_UNSIGNED (302) 117
Q_CONST (303) 145
SEMICOLON (304) 6 13 14 15 16 19 20 23 24 31 126
COLON (305) 134
LO_REL_L (306) 74
LO_REL_G (307) 75
LO_REL_LE (308) 76
LO_REL_GE (309) 77
KW_UNION (310) 123
IDENTIFIER (311) 102 103 109 119 121 137
INTEGER (312) 112 134
CHAR (313)
BOOL (314)
STRING (315)
LO_MEMBER (316) 102
LO_PT_MEMBER (317) 103
L_BRACKET (318) 17 18 19 20 21 22 89 106 111 139
R_BRACKET (319) 17 18 19 20 21 22 89 106 111 139
L_SQ_BRACKET (320) 101 138
R_SQ_BRACKET (321) 101 138
L_BRACE (322) 25 26 42 119 120
R_BRACE (323) 25 26 42 119 120


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
translation-unit (70)
    on left: 1 2, on right: 0 2
external-declaration (71)
    on left: 3 4, on right: 1 2
function-definition (72)
    on left: 5, on right: 3
statement (73)
    on left: 6 7 8 9 10 11 12, on right: 17 18 21 22 30
jump-statement (74)
    on left: 13 14 15 16, on right: 12
iteration-statement (75)
    on left: 17 18 19 20, on right: 11
selection-statement (76)
    on left: 21 22, on right: 10
expression-statement (77)
    on left: 23 24, on right: 9
compound-statement (78)
    on left: 25 26, on right: 5 8
block-item-list (79)
    on left: 27 28, on right: 25 28
block-item (80)
    on left: 29 30, on right: 27 28
declaration (81)
    on left: 31 32, on right: 4 7 29
declaration-specifiers (82)
    on left: 33 34 35 36, on right: 5 31 32 34 36 142
init-declarator-list (83)
    on left: 37 38, on right: 31 38
init-declarator (84)
    on left: 39 40, on right: 37 38
initializer (85)
    on left: 41 42, on right: 40 43 44
initializer-list (86)
    on left: 43 44, on right: 42 44
expression (87)
    on left: 45 46, on right: 17 18 20 21 22 24 46 59 101 111
assignment-operator (88)
    on left: 47 48 49 50 51 52 53 54 55, on right: 57
assignment-expression (89)
    on left: 56 57, on right: 16 41 45 46 57 107 108 138
conditional-expression (90)
    on left: 58 59, on right: 56 59
logical-OR-expression (91)
    on left: 60 61, on right: 58 59 61
logical-AND-expression (92)
    on left: 62 63, on right: 60 61 63
inclusive-OR-expression (93)
    on left: 64 65, on right: 62 63 65
exclusive-OR-expression (94)
    on left: 66 67, on right: 64 65 67
AND-expression (95)
    on left: 68 69, on right: 66 67 69
equality-expression (96)
    on left: 70 71 72, on right: 68 69 71 72
relational-expression (97)
    on left: 73 74 75 76 77, on right: 70 71 72 74 75 76 77
shift-expression (98)
    on left: 78 79 80, on right: 73 74 75 76 77 79 80
additive-expression (99)
    on left: 81 82 83, on right: 78 79 80 82 83
multiplicative-expression (100)
    on left: 84 85 86 87, on right: 81 82 83 85 86 87
cast-expression (101)
    on left: 88 89, on right: 84 85 86 87 89 99
unary-operator (102)
    on left: 90 91 92 93 94 95, on right: 99
unary-expression (103)
    on left: 96 97 98 99, on right: 57 88 97 98
postfix-expression (104)
    on left: 100 101 102 103 104 105 106, on right: 96 101 102 103
    104 105 106
argument-expression-list (105)
    on left: 107 108, on right: 106 108
primary-expression (106)
    on left: 109 110 111, on right: 100
constant (107)
    on left: 112, on right: 110
type-specifier (108)
    on left: 113 114 115 116 117 118, on right: 33 34 89 127 128
struct-or-union-specifier (109)
    on left: 119 120 121, on right: 118
struct-or-union (110)
    on left: 122 123, on right: 119 120 121
struct-declaration-list (111)
    on left: 124 125, on right: 119 120 125
struct-declaration (112)
    on left: 126, on right: 124 125
specifier-qualifier-list (113)
    on left: 127 128 129 130, on right: 126 128 130
struct-declarator-list (114)
    on left: 131 132, on right: 126 132
struct-declarator (115)
    on left: 133 134, on right: 131 132
declarator (116)
    on left: 135 136, on right: 5 39 40 133 134 135 142
direct-declarator (117)
    on left: 137 138 139, on right: 136 138 139
parameter-type-list (118)
    on left: 140 141, on right: 139 141
parameter-declaration (119)
    on left: 142, on right: 140 141
pointer (120)
    on left: 143 144, on right: 135 144
type-qualifier (121)
    on left: 145, on right: 35 36 129 130


State 0

    0 $accept: . translation-unit $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    translation-unit           go to state 9
    external-declaration       go to state 10
    function-definition        go to state 11
    declaration                go to state 12
    declaration-specifiers     go to state 13
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 1

  114 type-specifier: T_CHAR .

    $default  reduce using rule 114 (type-specifier)


State 2

  113 type-specifier: T_INT .

    $default  reduce using rule 113 (type-specifier)


State 3

  115 type-specifier: T_BOOL .

    $default  reduce using rule 115 (type-specifier)


State 4

  122 struct-or-union: KW_STRUCT .

    $default  reduce using rule 122 (struct-or-union)


State 5

  116 type-specifier: T_SIGNED .

    $default  reduce using rule 116 (type-specifier)


State 6

  117 type-specifier: T_UNSIGNED .

    $default  reduce using rule 117 (type-specifier)


State 7

  145 type-qualifier: Q_CONST .

    $default  reduce using rule 145 (type-qualifier)


State 8

  123 struct-or-union: KW_UNION .

    $default  reduce using rule 123 (struct-or-union)


State 9

    0 $accept: translation-unit . $end
    2 translation-unit: translation-unit . external-declaration

    $end        shift, and go to state 18
    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    external-declaration       go to state 19
    function-definition        go to state 11
    declaration                go to state 12
    declaration-specifiers     go to state 13
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 10

    1 translation-unit: external-declaration .

    $default  reduce using rule 1 (translation-unit)


State 11

    3 external-declaration: function-definition .

    $default  reduce using rule 3 (external-declaration)


State 12

    4 external-declaration: declaration .

    $default  reduce using rule 4 (external-declaration)


State 13

    5 function-definition: declaration-specifiers . declarator compound-statement
   31 declaration: declaration-specifiers . init-declarator-list SEMICOLON
   32            | declaration-specifiers .

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 32 (declaration)

    init-declarator-list  go to state 22
    init-declarator       go to state 23
    declarator            go to state 24
    direct-declarator     go to state 25
    pointer               go to state 26


State 14

   33 declaration-specifiers: type-specifier .
   34                       | type-specifier . declaration-specifiers

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    T_CHAR      [reduce using rule 33 (declaration-specifiers)]
    T_INT       [reduce using rule 33 (declaration-specifiers)]
    T_BOOL      [reduce using rule 33 (declaration-specifiers)]
    KW_STRUCT   [reduce using rule 33 (declaration-specifiers)]
    T_SIGNED    [reduce using rule 33 (declaration-specifiers)]
    T_UNSIGNED  [reduce using rule 33 (declaration-specifiers)]
    Q_CONST     [reduce using rule 33 (declaration-specifiers)]
    KW_UNION    [reduce using rule 33 (declaration-specifiers)]
    $default    reduce using rule 33 (declaration-specifiers)

    declaration-specifiers     go to state 27
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 15

  118 type-specifier: struct-or-union-specifier .

    $default  reduce using rule 118 (type-specifier)


State 16

  119 struct-or-union-specifier: struct-or-union . IDENTIFIER L_BRACE struct-declaration-list R_BRACE
  120                          | struct-or-union . L_BRACE struct-declaration-list R_BRACE
  121                          | struct-or-union . IDENTIFIER

    IDENTIFIER  shift, and go to state 28
    L_BRACE     shift, and go to state 29


State 17

   35 declaration-specifiers: type-qualifier .
   36                       | type-qualifier . declaration-specifiers

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    T_CHAR      [reduce using rule 35 (declaration-specifiers)]
    T_INT       [reduce using rule 35 (declaration-specifiers)]
    T_BOOL      [reduce using rule 35 (declaration-specifiers)]
    KW_STRUCT   [reduce using rule 35 (declaration-specifiers)]
    T_SIGNED    [reduce using rule 35 (declaration-specifiers)]
    T_UNSIGNED  [reduce using rule 35 (declaration-specifiers)]
    Q_CONST     [reduce using rule 35 (declaration-specifiers)]
    KW_UNION    [reduce using rule 35 (declaration-specifiers)]
    $default    reduce using rule 35 (declaration-specifiers)

    declaration-specifiers     go to state 30
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 18

    0 $accept: translation-unit $end .

    $default  accept


State 19

    2 translation-unit: translation-unit external-declaration .

    $default  reduce using rule 2 (translation-unit)


State 20

  143 pointer: LO_MUL .
  144        | LO_MUL . pointer

    LO_MUL  shift, and go to state 20

    LO_MUL    [reduce using rule 143 (pointer)]
    $default  reduce using rule 143 (pointer)

    pointer  go to state 31


State 21

  137 direct-declarator: IDENTIFIER .

    $default  reduce using rule 137 (direct-declarator)


State 22

   31 declaration: declaration-specifiers init-declarator-list . SEMICOLON
   38 init-declarator-list: init-declarator-list . LO_COMMA init-declarator

    LO_COMMA   shift, and go to state 32
    SEMICOLON  shift, and go to state 33


State 23

   37 init-declarator-list: init-declarator .

    $default  reduce using rule 37 (init-declarator-list)


State 24

    5 function-definition: declaration-specifiers declarator . compound-statement
   39 init-declarator: declarator .
   40                | declarator . RO_ASSIGN initializer

    RO_ASSIGN  shift, and go to state 34
    L_BRACE    shift, and go to state 35

    $default  reduce using rule 39 (init-declarator)

    compound-statement  go to state 36


State 25

  136 declarator: direct-declarator .
  138 direct-declarator: direct-declarator . L_SQ_BRACKET assignment-expression R_SQ_BRACKET
  139                  | direct-declarator . L_BRACKET parameter-type-list R_BRACKET

    L_BRACKET     shift, and go to state 37
    L_SQ_BRACKET  shift, and go to state 38

    $default  reduce using rule 136 (declarator)


State 26

  135 declarator: pointer . declarator

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    declarator         go to state 39
    direct-declarator  go to state 25
    pointer            go to state 26


State 27

   34 declaration-specifiers: type-specifier declaration-specifiers .

    $default  reduce using rule 34 (declaration-specifiers)


State 28

  119 struct-or-union-specifier: struct-or-union IDENTIFIER . L_BRACE struct-declaration-list R_BRACE
  121                          | struct-or-union IDENTIFIER .

    L_BRACE  shift, and go to state 40

    L_BRACE   [reduce using rule 121 (struct-or-union-specifier)]
    $default  reduce using rule 121 (struct-or-union-specifier)


State 29

  120 struct-or-union-specifier: struct-or-union L_BRACE . struct-declaration-list R_BRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    struct-declaration-list    go to state 42
    struct-declaration         go to state 43
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 30

   36 declaration-specifiers: type-qualifier declaration-specifiers .

    $default  reduce using rule 36 (declaration-specifiers)


State 31

  144 pointer: LO_MUL pointer .

    $default  reduce using rule 144 (pointer)


State 32

   38 init-declarator-list: init-declarator-list LO_COMMA . init-declarator

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    init-declarator    go to state 46
    declarator         go to state 47
    direct-declarator  go to state 25
    pointer            go to state 26


State 33

   31 declaration: declaration-specifiers init-declarator-list SEMICOLON .

    $default  reduce using rule 31 (declaration)


State 34

   40 init-declarator: declarator RO_ASSIGN . initializer

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58
    L_BRACE        shift, and go to state 59

    initializer                go to state 60
    assignment-expression      go to state 61
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 35

   25 compound-statement: L_BRACE . block-item-list R_BRACE
   26                   | L_BRACE . R_BRACE

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 79
    KW_BREAK       shift, and go to state 80
    KW_IF          shift, and go to state 81
    KW_FOR         shift, and go to state 82
    KW_RET         shift, and go to state 83
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 84
    KW_DO          shift, and go to state 85
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 86
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58
    L_BRACE        shift, and go to state 35
    R_BRACE        shift, and go to state 87

    statement                  go to state 88
    jump-statement             go to state 89
    iteration-statement        go to state 90
    selection-statement        go to state 91
    expression-statement       go to state 92
    compound-statement         go to state 93
    block-item-list            go to state 94
    block-item                 go to state 95
    declaration                go to state 96
    declaration-specifiers     go to state 97
    expression                 go to state 98
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 36

    5 function-definition: declaration-specifiers declarator compound-statement .

    $default  reduce using rule 5 (function-definition)


State 37

  139 direct-declarator: direct-declarator L_BRACKET . parameter-type-list R_BRACKET

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    declaration-specifiers     go to state 100
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    parameter-type-list        go to state 101
    parameter-declaration      go to state 102
    type-qualifier             go to state 17


State 38

  138 direct-declarator: direct-declarator L_SQ_BRACKET . assignment-expression R_SQ_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    assignment-expression      go to state 103
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 39

  135 declarator: pointer declarator .

    $default  reduce using rule 135 (declarator)


State 40

  119 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE . struct-declaration-list R_BRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    struct-declaration-list    go to state 104
    struct-declaration         go to state 43
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 41

  127 specifier-qualifier-list: type-specifier .
  128                         | type-specifier . specifier-qualifier-list

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    $default  reduce using rule 127 (specifier-qualifier-list)

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    specifier-qualifier-list   go to state 105
    type-qualifier             go to state 45


State 42

  120 struct-or-union-specifier: struct-or-union L_BRACE struct-declaration-list . R_BRACE
  125 struct-declaration-list: struct-declaration-list . struct-declaration

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8
    R_BRACE     shift, and go to state 106

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    struct-declaration         go to state 107
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 43

  124 struct-declaration-list: struct-declaration .

    $default  reduce using rule 124 (struct-declaration-list)


State 44

  126 struct-declaration: specifier-qualifier-list . struct-declarator-list SEMICOLON

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    struct-declarator-list  go to state 108
    struct-declarator       go to state 109
    declarator              go to state 110
    direct-declarator       go to state 25
    pointer                 go to state 26


State 45

  129 specifier-qualifier-list: type-qualifier .
  130                         | type-qualifier . specifier-qualifier-list

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    $default  reduce using rule 129 (specifier-qualifier-list)

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    specifier-qualifier-list   go to state 111
    type-qualifier             go to state 45


State 46

   38 init-declarator-list: init-declarator-list LO_COMMA init-declarator .

    $default  reduce using rule 38 (init-declarator-list)


State 47

   39 init-declarator: declarator .
   40                | declarator . RO_ASSIGN initializer

    RO_ASSIGN  shift, and go to state 34

    $default  reduce using rule 39 (init-declarator)


State 48

   97 unary-expression: LO_AS_SELFINC . unary-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 112

    unary-operator      go to state 74
    unary-expression    go to state 113
    postfix-expression  go to state 76
    primary-expression  go to state 77
    constant            go to state 78


State 49

   98 unary-expression: LO_AS_SELFDEC . unary-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 112

    unary-operator      go to state 74
    unary-expression    go to state 114
    postfix-expression  go to state 76
    primary-expression  go to state 77
    constant            go to state 78


State 50

   91 unary-operator: LO_MUL .

    $default  reduce using rule 91 (unary-operator)


State 51

   92 unary-operator: LO_ADD .

    $default  reduce using rule 92 (unary-operator)


State 52

   93 unary-operator: LO_SUB .

    $default  reduce using rule 93 (unary-operator)


State 53

   94 unary-operator: LO_BIT_NOT .

    $default  reduce using rule 94 (unary-operator)


State 54

   95 unary-operator: LO_LGC_NOT .

    $default  reduce using rule 95 (unary-operator)


State 55

   90 unary-operator: LO_BIT_AND .

    $default  reduce using rule 90 (unary-operator)


State 56

  109 primary-expression: IDENTIFIER .

    $default  reduce using rule 109 (primary-expression)


State 57

  112 constant: INTEGER .

    $default  reduce using rule 112 (constant)


State 58

   89 cast-expression: L_BRACKET . type-specifier R_BRACKET cast-expression
  111 primary-expression: L_BRACKET . expression R_BRACKET

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_STRUCT      shift, and go to state 4
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 115
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78
    type-specifier             go to state 116
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16


State 59

   42 initializer: L_BRACE . initializer-list R_BRACE

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58
    L_BRACE        shift, and go to state 59

    initializer                go to state 117
    initializer-list           go to state 118
    assignment-expression      go to state 61
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 60

   40 init-declarator: declarator RO_ASSIGN initializer .

    $default  reduce using rule 40 (init-declarator)


State 61

   41 initializer: assignment-expression .

    $default  reduce using rule 41 (initializer)


State 62

   56 assignment-expression: conditional-expression .

    $default  reduce using rule 56 (assignment-expression)


State 63

   58 conditional-expression: logical-OR-expression .
   59                       | logical-OR-expression . RO_TRI_QUES expression RO_TRI_COLON conditional-expression
   61 logical-OR-expression: logical-OR-expression . LO_LGC_OR logical-AND-expression

    RO_TRI_QUES  shift, and go to state 119
    LO_LGC_OR    shift, and go to state 120

    $default  reduce using rule 58 (conditional-expression)


State 64

   60 logical-OR-expression: logical-AND-expression .
   63 logical-AND-expression: logical-AND-expression . LO_LGC_AND inclusive-OR-expression

    LO_LGC_AND  shift, and go to state 121

    $default  reduce using rule 60 (logical-OR-expression)


State 65

   62 logical-AND-expression: inclusive-OR-expression .
   65 inclusive-OR-expression: inclusive-OR-expression . LO_BIT_OR exclusive-OR-expression

    LO_BIT_OR  shift, and go to state 122

    $default  reduce using rule 62 (logical-AND-expression)


State 66

   64 inclusive-OR-expression: exclusive-OR-expression .
   67 exclusive-OR-expression: exclusive-OR-expression . LO_BIT_XOR AND-expression

    LO_BIT_XOR  shift, and go to state 123

    $default  reduce using rule 64 (inclusive-OR-expression)


State 67

   66 exclusive-OR-expression: AND-expression .
   69 AND-expression: AND-expression . LO_BIT_AND equality-expression

    LO_BIT_AND  shift, and go to state 124

    $default  reduce using rule 66 (exclusive-OR-expression)


State 68

   68 AND-expression: equality-expression .
   71 equality-expression: equality-expression . LO_EQ relational-expression
   72                    | equality-expression . LO_N_EQ relational-expression

    LO_EQ    shift, and go to state 125
    LO_N_EQ  shift, and go to state 126

    $default  reduce using rule 68 (AND-expression)


State 69

   70 equality-expression: relational-expression .
   74 relational-expression: relational-expression . LO_REL_L shift-expression
   75                      | relational-expression . LO_REL_G shift-expression
   76                      | relational-expression . LO_REL_LE shift-expression
   77                      | relational-expression . LO_REL_GE shift-expression

    LO_REL_L   shift, and go to state 127
    LO_REL_G   shift, and go to state 128
    LO_REL_LE  shift, and go to state 129
    LO_REL_GE  shift, and go to state 130

    $default  reduce using rule 70 (equality-expression)


State 70

   73 relational-expression: shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 131
    LO_SFT_R  shift, and go to state 132

    $default  reduce using rule 73 (relational-expression)


State 71

   78 shift-expression: additive-expression .
   82 additive-expression: additive-expression . LO_ADD multiplicative-expression
   83                    | additive-expression . LO_SUB multiplicative-expression

    LO_ADD  shift, and go to state 133
    LO_SUB  shift, and go to state 134

    $default  reduce using rule 78 (shift-expression)


State 72

   81 additive-expression: multiplicative-expression .
   85 multiplicative-expression: multiplicative-expression . LO_MUL cast-expression
   86                          | multiplicative-expression . LO_DIV cast-expression
   87                          | multiplicative-expression . LO_MOD cast-expression

    LO_MUL  shift, and go to state 135
    LO_DIV  shift, and go to state 136
    LO_MOD  shift, and go to state 137

    $default  reduce using rule 81 (additive-expression)


State 73

   84 multiplicative-expression: cast-expression .

    $default  reduce using rule 84 (multiplicative-expression)


State 74

   99 unary-expression: unary-operator . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    cast-expression     go to state 138
    unary-operator      go to state 74
    unary-expression    go to state 139
    postfix-expression  go to state 76
    primary-expression  go to state 77
    constant            go to state 78


State 75

   57 assignment-expression: unary-expression . assignment-operator assignment-expression
   88 cast-expression: unary-expression .

    RO_AS_ADDEQ    shift, and go to state 140
    RO_AS_SUBEQ    shift, and go to state 141
    RO_AS_MULEQ    shift, and go to state 142
    RO_AS_DIVEQ    shift, and go to state 143
    RO_AS_SFTL_EQ  shift, and go to state 144
    RO_AS_SFTR_EQ  shift, and go to state 145
    RO_AS_ANDEQ    shift, and go to state 146
    RO_AS_OREQ     shift, and go to state 147
    RO_ASSIGN      shift, and go to state 148

    $default  reduce using rule 88 (cast-expression)

    assignment-operator  go to state 149


State 76

   96 unary-expression: postfix-expression .
  101 postfix-expression: postfix-expression . L_SQ_BRACKET expression R_SQ_BRACKET
  102                   | postfix-expression . LO_MEMBER IDENTIFIER
  103                   | postfix-expression . LO_PT_MEMBER IDENTIFIER
  104                   | postfix-expression . LO_AS_SELFINC
  105                   | postfix-expression . LO_AS_SELFDEC
  106                   | postfix-expression . L_BRACKET argument-expression-list R_BRACKET

    LO_AS_SELFINC  shift, and go to state 150
    LO_AS_SELFDEC  shift, and go to state 151
    LO_MEMBER      shift, and go to state 152
    LO_PT_MEMBER   shift, and go to state 153
    L_BRACKET      shift, and go to state 154
    L_SQ_BRACKET   shift, and go to state 155

    $default  reduce using rule 96 (unary-expression)


State 77

  100 postfix-expression: primary-expression .

    $default  reduce using rule 100 (postfix-expression)


State 78

  110 primary-expression: constant .

    $default  reduce using rule 110 (primary-expression)


State 79

   14 jump-statement: KW_CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 156


State 80

   13 jump-statement: KW_BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 157


State 81

   21 selection-statement: KW_IF . L_BRACKET expression R_BRACKET statement
   22                    | KW_IF . L_BRACKET expression R_BRACKET statement KW_ELSE statement

    L_BRACKET  shift, and go to state 158


State 82

   19 iteration-statement: KW_FOR . L_BRACKET SEMICOLON SEMICOLON R_BRACKET
   20                    | KW_FOR . L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET

    L_BRACKET  shift, and go to state 159


State 83

   15 jump-statement: KW_RET . SEMICOLON
   16               | KW_RET . assignment-expression SEMICOLON

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    SEMICOLON      shift, and go to state 160
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    assignment-expression      go to state 161
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 84

   17 iteration-statement: KW_WHILE . L_BRACKET expression R_BRACKET statement

    L_BRACKET  shift, and go to state 162


State 85

   18 iteration-statement: KW_DO . statement KW_WHILE L_BRACKET expression R_BRACKET

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 79
    KW_BREAK       shift, and go to state 80
    KW_IF          shift, and go to state 81
    KW_FOR         shift, and go to state 82
    KW_RET         shift, and go to state 83
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 84
    KW_DO          shift, and go to state 85
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 86
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58
    L_BRACE        shift, and go to state 35

    statement                  go to state 163
    jump-statement             go to state 89
    iteration-statement        go to state 90
    selection-statement        go to state 91
    expression-statement       go to state 92
    compound-statement         go to state 93
    declaration                go to state 164
    declaration-specifiers     go to state 97
    expression                 go to state 98
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 86

    6 statement: SEMICOLON .
   23 expression-statement: SEMICOLON .

    T_CHAR         reduce using rule 6 (statement)
    T_CHAR         [reduce using rule 23 (expression-statement)]
    T_INT          reduce using rule 6 (statement)
    T_INT          [reduce using rule 23 (expression-statement)]
    T_BOOL         reduce using rule 6 (statement)
    T_BOOL         [reduce using rule 23 (expression-statement)]
    LO_AS_SELFINC  reduce using rule 6 (statement)
    LO_AS_SELFINC  [reduce using rule 23 (expression-statement)]
    LO_AS_SELFDEC  reduce using rule 6 (statement)
    LO_AS_SELFDEC  [reduce using rule 23 (expression-statement)]
    LO_MUL         reduce using rule 6 (statement)
    LO_MUL         [reduce using rule 23 (expression-statement)]
    LO_ADD         reduce using rule 6 (statement)
    LO_ADD         [reduce using rule 23 (expression-statement)]
    LO_SUB         reduce using rule 6 (statement)
    LO_SUB         [reduce using rule 23 (expression-statement)]
    LO_BIT_NOT     reduce using rule 6 (statement)
    LO_BIT_NOT     [reduce using rule 23 (expression-statement)]
    LO_LGC_NOT     reduce using rule 6 (statement)
    LO_LGC_NOT     [reduce using rule 23 (expression-statement)]
    LO_BIT_AND     reduce using rule 6 (statement)
    LO_BIT_AND     [reduce using rule 23 (expression-statement)]
    KW_CONTINUE    reduce using rule 6 (statement)
    KW_CONTINUE    [reduce using rule 23 (expression-statement)]
    KW_BREAK       reduce using rule 6 (statement)
    KW_BREAK       [reduce using rule 23 (expression-statement)]
    KW_IF          reduce using rule 6 (statement)
    KW_IF          [reduce using rule 23 (expression-statement)]
    KW_FOR         reduce using rule 6 (statement)
    KW_FOR         [reduce using rule 23 (expression-statement)]
    KW_RET         reduce using rule 6 (statement)
    KW_RET         [reduce using rule 23 (expression-statement)]
    KW_STRUCT      reduce using rule 6 (statement)
    KW_STRUCT      [reduce using rule 23 (expression-statement)]
    KW_WHILE       reduce using rule 6 (statement)
    KW_WHILE       [reduce using rule 23 (expression-statement)]
    KW_DO          reduce using rule 6 (statement)
    KW_DO          [reduce using rule 23 (expression-statement)]
    KW_ELSE        reduce using rule 6 (statement)
    KW_ELSE        [reduce using rule 23 (expression-statement)]
    T_SIGNED       reduce using rule 6 (statement)
    T_SIGNED       [reduce using rule 23 (expression-statement)]
    T_UNSIGNED     reduce using rule 6 (statement)
    T_UNSIGNED     [reduce using rule 23 (expression-statement)]
    Q_CONST        reduce using rule 6 (statement)
    Q_CONST        [reduce using rule 23 (expression-statement)]
    SEMICOLON      reduce using rule 6 (statement)
    SEMICOLON      [reduce using rule 23 (expression-statement)]
    KW_UNION       reduce using rule 6 (statement)
    KW_UNION       [reduce using rule 23 (expression-statement)]
    IDENTIFIER     reduce using rule 6 (statement)
    IDENTIFIER     [reduce using rule 23 (expression-statement)]
    INTEGER        reduce using rule 6 (statement)
    INTEGER        [reduce using rule 23 (expression-statement)]
    L_BRACKET      reduce using rule 6 (statement)
    L_BRACKET      [reduce using rule 23 (expression-statement)]
    L_BRACE        reduce using rule 6 (statement)
    L_BRACE        [reduce using rule 23 (expression-statement)]
    R_BRACE        reduce using rule 6 (statement)
    R_BRACE        [reduce using rule 23 (expression-statement)]
    $default       reduce using rule 6 (statement)


State 87

   26 compound-statement: L_BRACE R_BRACE .

    $default  reduce using rule 26 (compound-statement)


State 88

   30 block-item: statement .

    $default  reduce using rule 30 (block-item)


State 89

   12 statement: jump-statement .

    $default  reduce using rule 12 (statement)


State 90

   11 statement: iteration-statement .

    $default  reduce using rule 11 (statement)


State 91

   10 statement: selection-statement .

    $default  reduce using rule 10 (statement)


State 92

    9 statement: expression-statement .

    $default  reduce using rule 9 (statement)


State 93

    8 statement: compound-statement .

    $default  reduce using rule 8 (statement)


State 94

   25 compound-statement: L_BRACE block-item-list . R_BRACE
   28 block-item-list: block-item-list . block-item

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 79
    KW_BREAK       shift, and go to state 80
    KW_IF          shift, and go to state 81
    KW_FOR         shift, and go to state 82
    KW_RET         shift, and go to state 83
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 84
    KW_DO          shift, and go to state 85
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 86
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58
    L_BRACE        shift, and go to state 35
    R_BRACE        shift, and go to state 165

    statement                  go to state 88
    jump-statement             go to state 89
    iteration-statement        go to state 90
    selection-statement        go to state 91
    expression-statement       go to state 92
    compound-statement         go to state 93
    block-item                 go to state 166
    declaration                go to state 96
    declaration-specifiers     go to state 97
    expression                 go to state 98
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 95

   27 block-item-list: block-item .

    $default  reduce using rule 27 (block-item-list)


State 96

    7 statement: declaration .
   29 block-item: declaration .

    T_CHAR         reduce using rule 7 (statement)
    T_CHAR         [reduce using rule 29 (block-item)]
    T_INT          reduce using rule 7 (statement)
    T_INT          [reduce using rule 29 (block-item)]
    T_BOOL         reduce using rule 7 (statement)
    T_BOOL         [reduce using rule 29 (block-item)]
    LO_AS_SELFINC  reduce using rule 7 (statement)
    LO_AS_SELFINC  [reduce using rule 29 (block-item)]
    LO_AS_SELFDEC  reduce using rule 7 (statement)
    LO_AS_SELFDEC  [reduce using rule 29 (block-item)]
    LO_MUL         reduce using rule 7 (statement)
    LO_MUL         [reduce using rule 29 (block-item)]
    LO_ADD         reduce using rule 7 (statement)
    LO_ADD         [reduce using rule 29 (block-item)]
    LO_SUB         reduce using rule 7 (statement)
    LO_SUB         [reduce using rule 29 (block-item)]
    LO_BIT_NOT     reduce using rule 7 (statement)
    LO_BIT_NOT     [reduce using rule 29 (block-item)]
    LO_LGC_NOT     reduce using rule 7 (statement)
    LO_LGC_NOT     [reduce using rule 29 (block-item)]
    LO_BIT_AND     reduce using rule 7 (statement)
    LO_BIT_AND     [reduce using rule 29 (block-item)]
    KW_CONTINUE    reduce using rule 7 (statement)
    KW_CONTINUE    [reduce using rule 29 (block-item)]
    KW_BREAK       reduce using rule 7 (statement)
    KW_BREAK       [reduce using rule 29 (block-item)]
    KW_IF          reduce using rule 7 (statement)
    KW_IF          [reduce using rule 29 (block-item)]
    KW_FOR         reduce using rule 7 (statement)
    KW_FOR         [reduce using rule 29 (block-item)]
    KW_RET         reduce using rule 7 (statement)
    KW_RET         [reduce using rule 29 (block-item)]
    KW_STRUCT      reduce using rule 7 (statement)
    KW_STRUCT      [reduce using rule 29 (block-item)]
    KW_WHILE       reduce using rule 7 (statement)
    KW_WHILE       [reduce using rule 29 (block-item)]
    KW_DO          reduce using rule 7 (statement)
    KW_DO          [reduce using rule 29 (block-item)]
    T_SIGNED       reduce using rule 7 (statement)
    T_SIGNED       [reduce using rule 29 (block-item)]
    T_UNSIGNED     reduce using rule 7 (statement)
    T_UNSIGNED     [reduce using rule 29 (block-item)]
    Q_CONST        reduce using rule 7 (statement)
    Q_CONST        [reduce using rule 29 (block-item)]
    SEMICOLON      reduce using rule 7 (statement)
    SEMICOLON      [reduce using rule 29 (block-item)]
    KW_UNION       reduce using rule 7 (statement)
    KW_UNION       [reduce using rule 29 (block-item)]
    IDENTIFIER     reduce using rule 7 (statement)
    IDENTIFIER     [reduce using rule 29 (block-item)]
    INTEGER        reduce using rule 7 (statement)
    INTEGER        [reduce using rule 29 (block-item)]
    L_BRACKET      reduce using rule 7 (statement)
    L_BRACKET      [reduce using rule 29 (block-item)]
    L_BRACE        reduce using rule 7 (statement)
    L_BRACE        [reduce using rule 29 (block-item)]
    R_BRACE        reduce using rule 7 (statement)
    R_BRACE        [reduce using rule 29 (block-item)]
    $default       reduce using rule 7 (statement)


State 97

   31 declaration: declaration-specifiers . init-declarator-list SEMICOLON
   32            | declaration-specifiers .

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    LO_MUL      [reduce using rule 32 (declaration)]
    IDENTIFIER  [reduce using rule 32 (declaration)]
    $default    reduce using rule 32 (declaration)

    init-declarator-list  go to state 22
    init-declarator       go to state 23
    declarator            go to state 47
    direct-declarator     go to state 25
    pointer               go to state 26


State 98

   24 expression-statement: expression . SEMICOLON
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 167
    SEMICOLON  shift, and go to state 168


State 99

   45 expression: assignment-expression .

    $default  reduce using rule 45 (expression)


State 100

  142 parameter-declaration: declaration-specifiers . declarator

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    declarator         go to state 169
    direct-declarator  go to state 25
    pointer            go to state 26


State 101

  139 direct-declarator: direct-declarator L_BRACKET parameter-type-list . R_BRACKET
  141 parameter-type-list: parameter-type-list . LO_COMMA parameter-declaration

    LO_COMMA   shift, and go to state 170
    R_BRACKET  shift, and go to state 171


State 102

  140 parameter-type-list: parameter-declaration .

    $default  reduce using rule 140 (parameter-type-list)


State 103

  138 direct-declarator: direct-declarator L_SQ_BRACKET assignment-expression . R_SQ_BRACKET

    R_SQ_BRACKET  shift, and go to state 172


State 104

  119 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE struct-declaration-list . R_BRACE
  125 struct-declaration-list: struct-declaration-list . struct-declaration

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8
    R_BRACE     shift, and go to state 173

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    struct-declaration         go to state 107
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 105

  128 specifier-qualifier-list: type-specifier specifier-qualifier-list .

    $default  reduce using rule 128 (specifier-qualifier-list)


State 106

  120 struct-or-union-specifier: struct-or-union L_BRACE struct-declaration-list R_BRACE .

    $default  reduce using rule 120 (struct-or-union-specifier)


State 107

  125 struct-declaration-list: struct-declaration-list struct-declaration .

    $default  reduce using rule 125 (struct-declaration-list)


State 108

  126 struct-declaration: specifier-qualifier-list struct-declarator-list . SEMICOLON
  132 struct-declarator-list: struct-declarator-list . LO_COMMA struct-declarator

    LO_COMMA   shift, and go to state 174
    SEMICOLON  shift, and go to state 175


State 109

  131 struct-declarator-list: struct-declarator .

    $default  reduce using rule 131 (struct-declarator-list)


State 110

  133 struct-declarator: declarator .
  134                  | declarator . COLON INTEGER

    COLON  shift, and go to state 176

    $default  reduce using rule 133 (struct-declarator)


State 111

  130 specifier-qualifier-list: type-qualifier specifier-qualifier-list .

    $default  reduce using rule 130 (specifier-qualifier-list)


State 112

  111 primary-expression: L_BRACKET . expression R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 115
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 113

   97 unary-expression: LO_AS_SELFINC unary-expression .

    $default  reduce using rule 97 (unary-expression)


State 114

   98 unary-expression: LO_AS_SELFDEC unary-expression .

    $default  reduce using rule 98 (unary-expression)


State 115

   46 expression: expression . LO_COMMA assignment-expression
  111 primary-expression: L_BRACKET expression . R_BRACKET

    LO_COMMA   shift, and go to state 167
    R_BRACKET  shift, and go to state 177


State 116

   89 cast-expression: L_BRACKET type-specifier . R_BRACKET cast-expression

    R_BRACKET  shift, and go to state 178


State 117

   43 initializer-list: initializer .

    $default  reduce using rule 43 (initializer-list)


State 118

   42 initializer: L_BRACE initializer-list . R_BRACE
   44 initializer-list: initializer-list . LO_COMMA initializer

    LO_COMMA  shift, and go to state 179
    R_BRACE   shift, and go to state 180


State 119

   59 conditional-expression: logical-OR-expression RO_TRI_QUES . expression RO_TRI_COLON conditional-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 181
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 120

   61 logical-OR-expression: logical-OR-expression LO_LGC_OR . logical-AND-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    logical-AND-expression     go to state 182
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 121

   63 logical-AND-expression: logical-AND-expression LO_LGC_AND . inclusive-OR-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    inclusive-OR-expression    go to state 183
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 122

   65 inclusive-OR-expression: inclusive-OR-expression LO_BIT_OR . exclusive-OR-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    exclusive-OR-expression    go to state 184
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 123

   67 exclusive-OR-expression: exclusive-OR-expression LO_BIT_XOR . AND-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    AND-expression             go to state 185
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 124

   69 AND-expression: AND-expression LO_BIT_AND . equality-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    equality-expression        go to state 186
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 125

   71 equality-expression: equality-expression LO_EQ . relational-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    relational-expression      go to state 187
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 126

   72 equality-expression: equality-expression LO_N_EQ . relational-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    relational-expression      go to state 188
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 127

   74 relational-expression: relational-expression LO_REL_L . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    shift-expression           go to state 189
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 128

   75 relational-expression: relational-expression LO_REL_G . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    shift-expression           go to state 190
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 129

   76 relational-expression: relational-expression LO_REL_LE . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    shift-expression           go to state 191
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 130

   77 relational-expression: relational-expression LO_REL_GE . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    shift-expression           go to state 192
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 131

   79 shift-expression: shift-expression LO_SFT_L . additive-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    additive-expression        go to state 193
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 132

   80 shift-expression: shift-expression LO_SFT_R . additive-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    additive-expression        go to state 194
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 133

   82 additive-expression: additive-expression LO_ADD . multiplicative-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    multiplicative-expression  go to state 195
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 134

   83 additive-expression: additive-expression LO_SUB . multiplicative-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    multiplicative-expression  go to state 196
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 135

   85 multiplicative-expression: multiplicative-expression LO_MUL . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    cast-expression     go to state 197
    unary-operator      go to state 74
    unary-expression    go to state 139
    postfix-expression  go to state 76
    primary-expression  go to state 77
    constant            go to state 78


State 136

   86 multiplicative-expression: multiplicative-expression LO_DIV . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    cast-expression     go to state 198
    unary-operator      go to state 74
    unary-expression    go to state 139
    postfix-expression  go to state 76
    primary-expression  go to state 77
    constant            go to state 78


State 137

   87 multiplicative-expression: multiplicative-expression LO_MOD . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    cast-expression     go to state 199
    unary-operator      go to state 74
    unary-expression    go to state 139
    postfix-expression  go to state 76
    primary-expression  go to state 77
    constant            go to state 78


State 138

   99 unary-expression: unary-operator cast-expression .

    $default  reduce using rule 99 (unary-expression)


State 139

   88 cast-expression: unary-expression .

    $default  reduce using rule 88 (cast-expression)


State 140

   48 assignment-operator: RO_AS_ADDEQ .

    $default  reduce using rule 48 (assignment-operator)


State 141

   55 assignment-operator: RO_AS_SUBEQ .

    $default  reduce using rule 55 (assignment-operator)


State 142

   51 assignment-operator: RO_AS_MULEQ .

    $default  reduce using rule 51 (assignment-operator)


State 143

   50 assignment-operator: RO_AS_DIVEQ .

    $default  reduce using rule 50 (assignment-operator)


State 144

   53 assignment-operator: RO_AS_SFTL_EQ .

    $default  reduce using rule 53 (assignment-operator)


State 145

   54 assignment-operator: RO_AS_SFTR_EQ .

    $default  reduce using rule 54 (assignment-operator)


State 146

   49 assignment-operator: RO_AS_ANDEQ .

    $default  reduce using rule 49 (assignment-operator)


State 147

   52 assignment-operator: RO_AS_OREQ .

    $default  reduce using rule 52 (assignment-operator)


State 148

   47 assignment-operator: RO_ASSIGN .

    $default  reduce using rule 47 (assignment-operator)


State 149

   57 assignment-expression: unary-expression assignment-operator . assignment-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    assignment-expression      go to state 200
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 150

  104 postfix-expression: postfix-expression LO_AS_SELFINC .

    $default  reduce using rule 104 (postfix-expression)


State 151

  105 postfix-expression: postfix-expression LO_AS_SELFDEC .

    $default  reduce using rule 105 (postfix-expression)


State 152

  102 postfix-expression: postfix-expression LO_MEMBER . IDENTIFIER

    IDENTIFIER  shift, and go to state 201


State 153

  103 postfix-expression: postfix-expression LO_PT_MEMBER . IDENTIFIER

    IDENTIFIER  shift, and go to state 202


State 154

  106 postfix-expression: postfix-expression L_BRACKET . argument-expression-list R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    assignment-expression      go to state 203
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    argument-expression-list   go to state 204
    primary-expression         go to state 77
    constant                   go to state 78


State 155

  101 postfix-expression: postfix-expression L_SQ_BRACKET . expression R_SQ_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 205
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 156

   14 jump-statement: KW_CONTINUE SEMICOLON .

    $default  reduce using rule 14 (jump-statement)


State 157

   13 jump-statement: KW_BREAK SEMICOLON .

    $default  reduce using rule 13 (jump-statement)


State 158

   21 selection-statement: KW_IF L_BRACKET . expression R_BRACKET statement
   22                    | KW_IF L_BRACKET . expression R_BRACKET statement KW_ELSE statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 206
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 159

   19 iteration-statement: KW_FOR L_BRACKET . SEMICOLON SEMICOLON R_BRACKET
   20                    | KW_FOR L_BRACKET . expression SEMICOLON expression SEMICOLON expression R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    SEMICOLON      shift, and go to state 207
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 208
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 160

   15 jump-statement: KW_RET SEMICOLON .

    $default  reduce using rule 15 (jump-statement)


State 161

   16 jump-statement: KW_RET assignment-expression . SEMICOLON

    SEMICOLON  shift, and go to state 209


State 162

   17 iteration-statement: KW_WHILE L_BRACKET . expression R_BRACKET statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 210
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 163

   18 iteration-statement: KW_DO statement . KW_WHILE L_BRACKET expression R_BRACKET

    KW_WHILE  shift, and go to state 211


State 164

    7 statement: declaration .

    $default  reduce using rule 7 (statement)


State 165

   25 compound-statement: L_BRACE block-item-list R_BRACE .

    $default  reduce using rule 25 (compound-statement)


State 166

   28 block-item-list: block-item-list block-item .

    $default  reduce using rule 28 (block-item-list)


State 167

   46 expression: expression LO_COMMA . assignment-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    assignment-expression      go to state 212
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 168

   24 expression-statement: expression SEMICOLON .

    $default  reduce using rule 24 (expression-statement)


State 169

  142 parameter-declaration: declaration-specifiers declarator .

    $default  reduce using rule 142 (parameter-declaration)


State 170

  141 parameter-type-list: parameter-type-list LO_COMMA . parameter-declaration

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    declaration-specifiers     go to state 100
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    parameter-declaration      go to state 213
    type-qualifier             go to state 17


State 171

  139 direct-declarator: direct-declarator L_BRACKET parameter-type-list R_BRACKET .

    $default  reduce using rule 139 (direct-declarator)


State 172

  138 direct-declarator: direct-declarator L_SQ_BRACKET assignment-expression R_SQ_BRACKET .

    $default  reduce using rule 138 (direct-declarator)


State 173

  119 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE struct-declaration-list R_BRACE .

    $default  reduce using rule 119 (struct-or-union-specifier)


State 174

  132 struct-declarator-list: struct-declarator-list LO_COMMA . struct-declarator

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    struct-declarator  go to state 214
    declarator         go to state 110
    direct-declarator  go to state 25
    pointer            go to state 26


State 175

  126 struct-declaration: specifier-qualifier-list struct-declarator-list SEMICOLON .

    $default  reduce using rule 126 (struct-declaration)


State 176

  134 struct-declarator: declarator COLON . INTEGER

    INTEGER  shift, and go to state 215


State 177

  111 primary-expression: L_BRACKET expression R_BRACKET .

    $default  reduce using rule 111 (primary-expression)


State 178

   89 cast-expression: L_BRACKET type-specifier R_BRACKET . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    cast-expression     go to state 216
    unary-operator      go to state 74
    unary-expression    go to state 139
    postfix-expression  go to state 76
    primary-expression  go to state 77
    constant            go to state 78


State 179

   44 initializer-list: initializer-list LO_COMMA . initializer

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58
    L_BRACE        shift, and go to state 59

    initializer                go to state 217
    assignment-expression      go to state 61
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 180

   42 initializer: L_BRACE initializer-list R_BRACE .

    $default  reduce using rule 42 (initializer)


State 181

   46 expression: expression . LO_COMMA assignment-expression
   59 conditional-expression: logical-OR-expression RO_TRI_QUES expression . RO_TRI_COLON conditional-expression

    RO_TRI_COLON  shift, and go to state 218
    LO_COMMA      shift, and go to state 167


State 182

   61 logical-OR-expression: logical-OR-expression LO_LGC_OR logical-AND-expression .
   63 logical-AND-expression: logical-AND-expression . LO_LGC_AND inclusive-OR-expression

    LO_LGC_AND  shift, and go to state 121

    $default  reduce using rule 61 (logical-OR-expression)


State 183

   63 logical-AND-expression: logical-AND-expression LO_LGC_AND inclusive-OR-expression .
   65 inclusive-OR-expression: inclusive-OR-expression . LO_BIT_OR exclusive-OR-expression

    LO_BIT_OR  shift, and go to state 122

    $default  reduce using rule 63 (logical-AND-expression)


State 184

   65 inclusive-OR-expression: inclusive-OR-expression LO_BIT_OR exclusive-OR-expression .
   67 exclusive-OR-expression: exclusive-OR-expression . LO_BIT_XOR AND-expression

    LO_BIT_XOR  shift, and go to state 123

    $default  reduce using rule 65 (inclusive-OR-expression)


State 185

   67 exclusive-OR-expression: exclusive-OR-expression LO_BIT_XOR AND-expression .
   69 AND-expression: AND-expression . LO_BIT_AND equality-expression

    LO_BIT_AND  shift, and go to state 124

    $default  reduce using rule 67 (exclusive-OR-expression)


State 186

   69 AND-expression: AND-expression LO_BIT_AND equality-expression .
   71 equality-expression: equality-expression . LO_EQ relational-expression
   72                    | equality-expression . LO_N_EQ relational-expression

    LO_EQ    shift, and go to state 125
    LO_N_EQ  shift, and go to state 126

    $default  reduce using rule 69 (AND-expression)


State 187

   71 equality-expression: equality-expression LO_EQ relational-expression .
   74 relational-expression: relational-expression . LO_REL_L shift-expression
   75                      | relational-expression . LO_REL_G shift-expression
   76                      | relational-expression . LO_REL_LE shift-expression
   77                      | relational-expression . LO_REL_GE shift-expression

    LO_REL_L   shift, and go to state 127
    LO_REL_G   shift, and go to state 128
    LO_REL_LE  shift, and go to state 129
    LO_REL_GE  shift, and go to state 130

    $default  reduce using rule 71 (equality-expression)


State 188

   72 equality-expression: equality-expression LO_N_EQ relational-expression .
   74 relational-expression: relational-expression . LO_REL_L shift-expression
   75                      | relational-expression . LO_REL_G shift-expression
   76                      | relational-expression . LO_REL_LE shift-expression
   77                      | relational-expression . LO_REL_GE shift-expression

    LO_REL_L   shift, and go to state 127
    LO_REL_G   shift, and go to state 128
    LO_REL_LE  shift, and go to state 129
    LO_REL_GE  shift, and go to state 130

    $default  reduce using rule 72 (equality-expression)


State 189

   74 relational-expression: relational-expression LO_REL_L shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 131
    LO_SFT_R  shift, and go to state 132

    $default  reduce using rule 74 (relational-expression)


State 190

   75 relational-expression: relational-expression LO_REL_G shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 131
    LO_SFT_R  shift, and go to state 132

    $default  reduce using rule 75 (relational-expression)


State 191

   76 relational-expression: relational-expression LO_REL_LE shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 131
    LO_SFT_R  shift, and go to state 132

    $default  reduce using rule 76 (relational-expression)


State 192

   77 relational-expression: relational-expression LO_REL_GE shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 131
    LO_SFT_R  shift, and go to state 132

    $default  reduce using rule 77 (relational-expression)


State 193

   79 shift-expression: shift-expression LO_SFT_L additive-expression .
   82 additive-expression: additive-expression . LO_ADD multiplicative-expression
   83                    | additive-expression . LO_SUB multiplicative-expression

    LO_ADD  shift, and go to state 133
    LO_SUB  shift, and go to state 134

    $default  reduce using rule 79 (shift-expression)


State 194

   80 shift-expression: shift-expression LO_SFT_R additive-expression .
   82 additive-expression: additive-expression . LO_ADD multiplicative-expression
   83                    | additive-expression . LO_SUB multiplicative-expression

    LO_ADD  shift, and go to state 133
    LO_SUB  shift, and go to state 134

    $default  reduce using rule 80 (shift-expression)


State 195

   82 additive-expression: additive-expression LO_ADD multiplicative-expression .
   85 multiplicative-expression: multiplicative-expression . LO_MUL cast-expression
   86                          | multiplicative-expression . LO_DIV cast-expression
   87                          | multiplicative-expression . LO_MOD cast-expression

    LO_MUL  shift, and go to state 135
    LO_DIV  shift, and go to state 136
    LO_MOD  shift, and go to state 137

    $default  reduce using rule 82 (additive-expression)


State 196

   83 additive-expression: additive-expression LO_SUB multiplicative-expression .
   85 multiplicative-expression: multiplicative-expression . LO_MUL cast-expression
   86                          | multiplicative-expression . LO_DIV cast-expression
   87                          | multiplicative-expression . LO_MOD cast-expression

    LO_MUL  shift, and go to state 135
    LO_DIV  shift, and go to state 136
    LO_MOD  shift, and go to state 137

    $default  reduce using rule 83 (additive-expression)


State 197

   85 multiplicative-expression: multiplicative-expression LO_MUL cast-expression .

    $default  reduce using rule 85 (multiplicative-expression)


State 198

   86 multiplicative-expression: multiplicative-expression LO_DIV cast-expression .

    $default  reduce using rule 86 (multiplicative-expression)


State 199

   87 multiplicative-expression: multiplicative-expression LO_MOD cast-expression .

    $default  reduce using rule 87 (multiplicative-expression)


State 200

   57 assignment-expression: unary-expression assignment-operator assignment-expression .

    $default  reduce using rule 57 (assignment-expression)


State 201

  102 postfix-expression: postfix-expression LO_MEMBER IDENTIFIER .

    $default  reduce using rule 102 (postfix-expression)


State 202

  103 postfix-expression: postfix-expression LO_PT_MEMBER IDENTIFIER .

    $default  reduce using rule 103 (postfix-expression)


State 203

  107 argument-expression-list: assignment-expression .

    $default  reduce using rule 107 (argument-expression-list)


State 204

  106 postfix-expression: postfix-expression L_BRACKET argument-expression-list . R_BRACKET
  108 argument-expression-list: argument-expression-list . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 219
    R_BRACKET  shift, and go to state 220


State 205

   46 expression: expression . LO_COMMA assignment-expression
  101 postfix-expression: postfix-expression L_SQ_BRACKET expression . R_SQ_BRACKET

    LO_COMMA      shift, and go to state 167
    R_SQ_BRACKET  shift, and go to state 221


State 206

   21 selection-statement: KW_IF L_BRACKET expression . R_BRACKET statement
   22                    | KW_IF L_BRACKET expression . R_BRACKET statement KW_ELSE statement
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 167
    R_BRACKET  shift, and go to state 222


State 207

   19 iteration-statement: KW_FOR L_BRACKET SEMICOLON . SEMICOLON R_BRACKET

    SEMICOLON  shift, and go to state 223


State 208

   20 iteration-statement: KW_FOR L_BRACKET expression . SEMICOLON expression SEMICOLON expression R_BRACKET
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 167
    SEMICOLON  shift, and go to state 224


State 209

   16 jump-statement: KW_RET assignment-expression SEMICOLON .

    $default  reduce using rule 16 (jump-statement)


State 210

   17 iteration-statement: KW_WHILE L_BRACKET expression . R_BRACKET statement
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 167
    R_BRACKET  shift, and go to state 225


State 211

   18 iteration-statement: KW_DO statement KW_WHILE . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 226


State 212

   46 expression: expression LO_COMMA assignment-expression .

    $default  reduce using rule 46 (expression)


State 213

  141 parameter-type-list: parameter-type-list LO_COMMA parameter-declaration .

    $default  reduce using rule 141 (parameter-type-list)


State 214

  132 struct-declarator-list: struct-declarator-list LO_COMMA struct-declarator .

    $default  reduce using rule 132 (struct-declarator-list)


State 215

  134 struct-declarator: declarator COLON INTEGER .

    $default  reduce using rule 134 (struct-declarator)


State 216

   89 cast-expression: L_BRACKET type-specifier R_BRACKET cast-expression .

    $default  reduce using rule 89 (cast-expression)


State 217

   44 initializer-list: initializer-list LO_COMMA initializer .

    $default  reduce using rule 44 (initializer-list)


State 218

   59 conditional-expression: logical-OR-expression RO_TRI_QUES expression RO_TRI_COLON . conditional-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    conditional-expression     go to state 227
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 139
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 219

  108 argument-expression-list: argument-expression-list LO_COMMA . assignment-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    assignment-expression      go to state 228
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 220

  106 postfix-expression: postfix-expression L_BRACKET argument-expression-list R_BRACKET .

    $default  reduce using rule 106 (postfix-expression)


State 221

  101 postfix-expression: postfix-expression L_SQ_BRACKET expression R_SQ_BRACKET .

    $default  reduce using rule 101 (postfix-expression)


State 222

   21 selection-statement: KW_IF L_BRACKET expression R_BRACKET . statement
   22                    | KW_IF L_BRACKET expression R_BRACKET . statement KW_ELSE statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 79
    KW_BREAK       shift, and go to state 80
    KW_IF          shift, and go to state 81
    KW_FOR         shift, and go to state 82
    KW_RET         shift, and go to state 83
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 84
    KW_DO          shift, and go to state 85
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 86
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58
    L_BRACE        shift, and go to state 35

    statement                  go to state 229
    jump-statement             go to state 89
    iteration-statement        go to state 90
    selection-statement        go to state 91
    expression-statement       go to state 92
    compound-statement         go to state 93
    declaration                go to state 164
    declaration-specifiers     go to state 97
    expression                 go to state 98
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 223

   19 iteration-statement: KW_FOR L_BRACKET SEMICOLON SEMICOLON . R_BRACKET

    R_BRACKET  shift, and go to state 230


State 224

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON . expression SEMICOLON expression R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 231
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 225

   17 iteration-statement: KW_WHILE L_BRACKET expression R_BRACKET . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 79
    KW_BREAK       shift, and go to state 80
    KW_IF          shift, and go to state 81
    KW_FOR         shift, and go to state 82
    KW_RET         shift, and go to state 83
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 84
    KW_DO          shift, and go to state 85
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 86
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58
    L_BRACE        shift, and go to state 35

    statement                  go to state 232
    jump-statement             go to state 89
    iteration-statement        go to state 90
    selection-statement        go to state 91
    expression-statement       go to state 92
    compound-statement         go to state 93
    declaration                go to state 164
    declaration-specifiers     go to state 97
    expression                 go to state 98
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 226

   18 iteration-statement: KW_DO statement KW_WHILE L_BRACKET . expression R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 233
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 227

   59 conditional-expression: logical-OR-expression RO_TRI_QUES expression RO_TRI_COLON conditional-expression .

    $default  reduce using rule 59 (conditional-expression)


State 228

  108 argument-expression-list: argument-expression-list LO_COMMA assignment-expression .

    $default  reduce using rule 108 (argument-expression-list)


State 229

   21 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement .
   22                    | KW_IF L_BRACKET expression R_BRACKET statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 234

    KW_ELSE   [reduce using rule 21 (selection-statement)]
    $default  reduce using rule 21 (selection-statement)


State 230

   19 iteration-statement: KW_FOR L_BRACKET SEMICOLON SEMICOLON R_BRACKET .

    $default  reduce using rule 19 (iteration-statement)


State 231

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression . SEMICOLON expression R_BRACKET
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 167
    SEMICOLON  shift, and go to state 235


State 232

   17 iteration-statement: KW_WHILE L_BRACKET expression R_BRACKET statement .

    $default  reduce using rule 17 (iteration-statement)


State 233

   18 iteration-statement: KW_DO statement KW_WHILE L_BRACKET expression . R_BRACKET
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 167
    R_BRACKET  shift, and go to state 236


State 234

   22 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement KW_ELSE . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 79
    KW_BREAK       shift, and go to state 80
    KW_IF          shift, and go to state 81
    KW_FOR         shift, and go to state 82
    KW_RET         shift, and go to state 83
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 84
    KW_DO          shift, and go to state 85
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 86
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58
    L_BRACE        shift, and go to state 35

    statement                  go to state 237
    jump-statement             go to state 89
    iteration-statement        go to state 90
    selection-statement        go to state 91
    expression-statement       go to state 92
    compound-statement         go to state 93
    declaration                go to state 164
    declaration-specifiers     go to state 97
    expression                 go to state 98
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 235

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON . expression R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    L_BRACKET      shift, and go to state 58

    expression                 go to state 238
    assignment-expression      go to state 99
    conditional-expression     go to state 62
    logical-OR-expression      go to state 63
    logical-AND-expression     go to state 64
    inclusive-OR-expression    go to state 65
    exclusive-OR-expression    go to state 66
    AND-expression             go to state 67
    equality-expression        go to state 68
    relational-expression      go to state 69
    shift-expression           go to state 70
    additive-expression        go to state 71
    multiplicative-expression  go to state 72
    cast-expression            go to state 73
    unary-operator             go to state 74
    unary-expression           go to state 75
    postfix-expression         go to state 76
    primary-expression         go to state 77
    constant                   go to state 78


State 236

   18 iteration-statement: KW_DO statement KW_WHILE L_BRACKET expression R_BRACKET .

    $default  reduce using rule 18 (iteration-statement)


State 237

   22 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement KW_ELSE statement .

    $default  reduce using rule 22 (selection-statement)


State 238

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression . R_BRACKET
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 167
    R_BRACKET  shift, and go to state 239


State 239

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET .

    $default  reduce using rule 20 (iteration-statement)
