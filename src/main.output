Nonterminals useless in grammar

   statements


Terminals unused in grammar

   T_STRING
   CHAR
   BOOL


Rules useless in grammar

  150 statements: statement
  151           | statements statement


Rules useless in parser due to conflicts

   23 expression-statement: SEMICOLON

   29 block-item: declaration


State 14 conflicts: 8 shift/reduce
State 17 conflicts: 8 shift/reduce
State 20 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce
State 87 conflicts: 31 reduce/reduce
State 97 conflicts: 30 reduce/reduce
State 98 conflicts: 2 shift/reduce
State 232 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation-unit $end

    1 translation-unit: external-declaration
    2                 | translation-unit external-declaration

    3 external-declaration: function-definition
    4                     | declaration

    5 function-definition: declaration-specifiers declarator compound-statement

    6 statement: SEMICOLON
    7          | declaration
    8          | compound-statement
    9          | expression-statement
   10          | selection-statement
   11          | iteration-statement
   12          | jump-statement

   13 jump-statement: KW_BREAK SEMICOLON
   14               | KW_CONTINUE SEMICOLON
   15               | KW_RET SEMICOLON
   16               | KW_RET assignment-expression SEMICOLON

   17 iteration-statement: KW_WHILE L_BRACKET expression R_BRACKET statement
   18                    | KW_DO statement KW_WHILE L_BRACKET expression R_BRACKET
   19                    | KW_FOR L_BRACKET SEMICOLON SEMICOLON R_BRACKET statement
   20                    | KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET statement

   21 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement
   22                    | KW_IF L_BRACKET expression R_BRACKET statement KW_ELSE statement

   23 expression-statement: SEMICOLON
   24                     | expression SEMICOLON

   25 compound-statement: L_BRACE block-item-list R_BRACE
   26                   | L_BRACE R_BRACE

   27 block-item-list: block-item
   28                | block-item-list block-item

   29 block-item: declaration
   30           | statement

   31 declaration: declaration-specifiers init-declarator-list SEMICOLON
   32            | declaration-specifiers

   33 declaration-specifiers: type-specifier
   34                       | type-specifier declaration-specifiers
   35                       | type-qualifier
   36                       | type-qualifier declaration-specifiers

   37 init-declarator-list: init-declarator
   38                     | init-declarator-list LO_COMMA init-declarator

   39 init-declarator: declarator
   40                | declarator RO_ASSIGN initializer

   41 initializer: assignment-expression
   42            | L_BRACE initializer-list R_BRACE

   43 initializer-list: initializer
   44                 | initializer-list LO_COMMA initializer

   45 expression: assignment-expression
   46           | expression LO_COMMA assignment-expression

   47 assignment-operator: RO_ASSIGN
   48                    | RO_AS_ADDEQ
   49                    | RO_AS_ANDEQ
   50                    | RO_AS_DIVEQ
   51                    | RO_AS_MULEQ
   52                    | RO_AS_OREQ
   53                    | RO_AS_SFTL_EQ
   54                    | RO_AS_SFTR_EQ
   55                    | RO_AS_SUBEQ

   56 assignment-expression: conditional-expression
   57                      | unary-expression assignment-operator assignment-expression

   58 conditional-expression: logical-OR-expression
   59                       | logical-OR-expression RO_TRI_QUES expression RO_TRI_COLON conditional-expression

   60 logical-OR-expression: logical-AND-expression
   61                      | logical-OR-expression LO_LGC_OR logical-AND-expression

   62 logical-AND-expression: inclusive-OR-expression
   63                       | logical-AND-expression LO_LGC_AND inclusive-OR-expression

   64 inclusive-OR-expression: exclusive-OR-expression
   65                        | inclusive-OR-expression LO_BIT_OR exclusive-OR-expression

   66 exclusive-OR-expression: AND-expression
   67                        | exclusive-OR-expression LO_BIT_XOR AND-expression

   68 AND-expression: equality-expression
   69               | AND-expression LO_BIT_AND equality-expression

   70 equality-expression: relational-expression
   71                    | equality-expression LO_EQ relational-expression
   72                    | equality-expression LO_N_EQ relational-expression

   73 relational-expression: shift-expression
   74                      | relational-expression LO_REL_L shift-expression
   75                      | relational-expression LO_REL_G shift-expression
   76                      | relational-expression LO_REL_LE shift-expression
   77                      | relational-expression LO_REL_GE shift-expression

   78 shift-expression: additive-expression
   79                 | shift-expression LO_SFT_L additive-expression
   80                 | shift-expression LO_SFT_R additive-expression

   81 additive-expression: multiplicative-expression
   82                    | additive-expression LO_ADD multiplicative-expression
   83                    | additive-expression LO_SUB multiplicative-expression

   84 multiplicative-expression: cast-expression
   85                          | multiplicative-expression LO_MUL cast-expression
   86                          | multiplicative-expression LO_DIV cast-expression
   87                          | multiplicative-expression LO_MOD cast-expression

   88 cast-expression: unary-expression
   89                | L_BRACKET type-specifier R_BRACKET cast-expression

   90 unary-operator: LO_BIT_AND
   91               | LO_MUL
   92               | LO_ADD
   93               | LO_SUB
   94               | LO_BIT_NOT
   95               | LO_LGC_NOT

   96 unary-expression: postfix-expression
   97                 | LO_AS_SELFINC unary-expression
   98                 | LO_AS_SELFDEC unary-expression
   99                 | unary-operator cast-expression

  100 postfix-expression: primary-expression
  101                   | postfix-expression L_SQ_BRACKET expression R_SQ_BRACKET
  102                   | postfix-expression LO_MEMBER IDENTIFIER
  103                   | postfix-expression LO_PT_MEMBER IDENTIFIER
  104                   | postfix-expression LO_AS_SELFINC
  105                   | postfix-expression LO_AS_SELFDEC
  106                   | postfix-expression L_BRACKET argument-expression-list R_BRACKET
  107                   | postfix-expression L_BRACKET R_BRACKET

  108 argument-expression-list: assignment-expression
  109                         | argument-expression-list LO_COMMA assignment-expression

  110 primary-expression: IDENTIFIER
  111                   | constant
  112                   | L_BRACKET expression R_BRACKET

  113 constant: INTEGER
  114         | STRING

  115 type-specifier: T_INT
  116               | T_CHAR
  117               | T_BOOL
  118               | T_SIGNED
  119               | T_UNSIGNED
  120               | struct-or-union-specifier

  121 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE struct-declaration-list R_BRACE
  122                          | struct-or-union L_BRACE struct-declaration-list R_BRACE
  123                          | struct-or-union IDENTIFIER

  124 struct-or-union: KW_STRUCT
  125                | KW_UNION

  126 struct-declaration-list: struct-declaration
  127                        | struct-declaration-list struct-declaration

  128 struct-declaration: specifier-qualifier-list struct-declarator-list SEMICOLON

  129 specifier-qualifier-list: type-specifier
  130                         | type-specifier specifier-qualifier-list
  131                         | type-qualifier
  132                         | type-qualifier specifier-qualifier-list

  133 struct-declarator-list: struct-declarator
  134                       | struct-declarator-list LO_COMMA struct-declarator

  135 struct-declarator: declarator
  136                  | declarator COLON INTEGER

  137 declarator: pointer declarator
  138           | direct-declarator

  139 direct-declarator: IDENTIFIER
  140                  | direct-declarator L_SQ_BRACKET assignment-expression R_SQ_BRACKET
  141                  | direct-declarator L_BRACKET parameter-type-list R_BRACKET
  142                  | direct-declarator L_BRACKET R_BRACKET

  143 parameter-type-list: parameter-declaration
  144                    | parameter-type-list LO_COMMA parameter-declaration

  145 parameter-declaration: declaration-specifiers declarator
  146                      | declaration-specifiers

  147 pointer: LO_MUL
  148        | LO_MUL pointer

  149 type-qualifier: Q_CONST


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 116
T_INT (259) 115
T_STRING (260)
T_BOOL (261) 117
LO_EQ (262) 71
LO_N_EQ (263) 72
RO_AS_ADDEQ (264) 48
RO_AS_SUBEQ (265) 55
RO_AS_MULEQ (266) 51
RO_AS_DIVEQ (267) 50
RO_AS_SFTL_EQ (268) 53
RO_AS_SFTR_EQ (269) 54
RO_AS_ANDEQ (270) 49
RO_AS_OREQ (271) 52
LO_AS_SELFINC (272) 97 104
LO_AS_SELFDEC (273) 98 105
RO_TRI_QUES (274) 59
RO_TRI_COLON (275) 59
LO_MUL (276) 85 91 147 148
LO_DIV (277) 86
LO_ADD (278) 82 92
LO_SUB (279) 83 93
LO_BIT_NOT (280) 94
LO_MOD (281) 87
LO_SFT_L (282) 79
LO_LGC_OR (283) 61
LO_LGC_AND (284) 63
LO_SFT_R (285) 80
LO_LGC_NOT (286) 95
LO_BIT_XOR (287) 67
LO_BIT_AND (288) 69 90
LO_BIT_OR (289) 65
RO_ASSIGN (290) 40 47
LO_COMMA (291) 38 44 46 109 134 144
KW_CONTINUE (292) 14
KW_BREAK (293) 13
KW_IF (294) 21 22
KW_FOR (295) 19 20
KW_RET (296) 15 16
KW_STRUCT (297) 124
KW_WHILE (298) 17 18
KW_DO (299) 18
KW_ELSE (300) 22
T_SIGNED (301) 118
T_UNSIGNED (302) 119
Q_CONST (303) 149
SEMICOLON (304) 6 13 14 15 16 19 20 23 24 31 128
COLON (305) 136
LO_REL_L (306) 74
LO_REL_G (307) 75
LO_REL_LE (308) 76
LO_REL_GE (309) 77
KW_UNION (310) 125
IDENTIFIER (311) 102 103 110 121 123 139
INTEGER (312) 113 136
CHAR (313)
BOOL (314)
STRING (315) 114
LO_MEMBER (316) 102
LO_PT_MEMBER (317) 103
L_BRACKET (318) 17 18 19 20 21 22 89 106 107 112 141 142
R_BRACKET (319) 17 18 19 20 21 22 89 106 107 112 141 142
L_SQ_BRACKET (320) 101 140
R_SQ_BRACKET (321) 101 140
L_BRACE (322) 25 26 42 121 122
R_BRACE (323) 25 26 42 121 122


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
translation-unit (70)
    on left: 1 2, on right: 0 2
external-declaration (71)
    on left: 3 4, on right: 1 2
function-definition (72)
    on left: 5, on right: 3
statement (73)
    on left: 6 7 8 9 10 11 12, on right: 17 18 19 20 21 22 30
jump-statement (74)
    on left: 13 14 15 16, on right: 12
iteration-statement (75)
    on left: 17 18 19 20, on right: 11
selection-statement (76)
    on left: 21 22, on right: 10
expression-statement (77)
    on left: 23 24, on right: 9
compound-statement (78)
    on left: 25 26, on right: 5 8
block-item-list (79)
    on left: 27 28, on right: 25 28
block-item (80)
    on left: 29 30, on right: 27 28
declaration (81)
    on left: 31 32, on right: 4 7 29
declaration-specifiers (82)
    on left: 33 34 35 36, on right: 5 31 32 34 36 145 146
init-declarator-list (83)
    on left: 37 38, on right: 31 38
init-declarator (84)
    on left: 39 40, on right: 37 38
initializer (85)
    on left: 41 42, on right: 40 43 44
initializer-list (86)
    on left: 43 44, on right: 42 44
expression (87)
    on left: 45 46, on right: 17 18 20 21 22 24 46 59 101 112
assignment-operator (88)
    on left: 47 48 49 50 51 52 53 54 55, on right: 57
assignment-expression (89)
    on left: 56 57, on right: 16 41 45 46 57 108 109 140
conditional-expression (90)
    on left: 58 59, on right: 56 59
logical-OR-expression (91)
    on left: 60 61, on right: 58 59 61
logical-AND-expression (92)
    on left: 62 63, on right: 60 61 63
inclusive-OR-expression (93)
    on left: 64 65, on right: 62 63 65
exclusive-OR-expression (94)
    on left: 66 67, on right: 64 65 67
AND-expression (95)
    on left: 68 69, on right: 66 67 69
equality-expression (96)
    on left: 70 71 72, on right: 68 69 71 72
relational-expression (97)
    on left: 73 74 75 76 77, on right: 70 71 72 74 75 76 77
shift-expression (98)
    on left: 78 79 80, on right: 73 74 75 76 77 79 80
additive-expression (99)
    on left: 81 82 83, on right: 78 79 80 82 83
multiplicative-expression (100)
    on left: 84 85 86 87, on right: 81 82 83 85 86 87
cast-expression (101)
    on left: 88 89, on right: 84 85 86 87 89 99
unary-operator (102)
    on left: 90 91 92 93 94 95, on right: 99
unary-expression (103)
    on left: 96 97 98 99, on right: 57 88 97 98
postfix-expression (104)
    on left: 100 101 102 103 104 105 106 107, on right: 96 101 102
    103 104 105 106 107
argument-expression-list (105)
    on left: 108 109, on right: 106 109
primary-expression (106)
    on left: 110 111 112, on right: 100
constant (107)
    on left: 113 114, on right: 111
type-specifier (108)
    on left: 115 116 117 118 119 120, on right: 33 34 89 129 130
struct-or-union-specifier (109)
    on left: 121 122 123, on right: 120
struct-or-union (110)
    on left: 124 125, on right: 121 122 123
struct-declaration-list (111)
    on left: 126 127, on right: 121 122 127
struct-declaration (112)
    on left: 128, on right: 126 127
specifier-qualifier-list (113)
    on left: 129 130 131 132, on right: 128 130 132
struct-declarator-list (114)
    on left: 133 134, on right: 128 134
struct-declarator (115)
    on left: 135 136, on right: 133 134
declarator (116)
    on left: 137 138, on right: 5 39 40 135 136 137 145
direct-declarator (117)
    on left: 139 140 141 142, on right: 138 140 141 142
parameter-type-list (118)
    on left: 143 144, on right: 141 144
parameter-declaration (119)
    on left: 145 146, on right: 143 144
pointer (120)
    on left: 147 148, on right: 137 148
type-qualifier (121)
    on left: 149, on right: 35 36 131 132


State 0

    0 $accept: . translation-unit $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    translation-unit           go to state 9
    external-declaration       go to state 10
    function-definition        go to state 11
    declaration                go to state 12
    declaration-specifiers     go to state 13
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 1

  116 type-specifier: T_CHAR .

    $default  reduce using rule 116 (type-specifier)


State 2

  115 type-specifier: T_INT .

    $default  reduce using rule 115 (type-specifier)


State 3

  117 type-specifier: T_BOOL .

    $default  reduce using rule 117 (type-specifier)


State 4

  124 struct-or-union: KW_STRUCT .

    $default  reduce using rule 124 (struct-or-union)


State 5

  118 type-specifier: T_SIGNED .

    $default  reduce using rule 118 (type-specifier)


State 6

  119 type-specifier: T_UNSIGNED .

    $default  reduce using rule 119 (type-specifier)


State 7

  149 type-qualifier: Q_CONST .

    $default  reduce using rule 149 (type-qualifier)


State 8

  125 struct-or-union: KW_UNION .

    $default  reduce using rule 125 (struct-or-union)


State 9

    0 $accept: translation-unit . $end
    2 translation-unit: translation-unit . external-declaration

    $end        shift, and go to state 18
    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    external-declaration       go to state 19
    function-definition        go to state 11
    declaration                go to state 12
    declaration-specifiers     go to state 13
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 10

    1 translation-unit: external-declaration .

    $default  reduce using rule 1 (translation-unit)


State 11

    3 external-declaration: function-definition .

    $default  reduce using rule 3 (external-declaration)


State 12

    4 external-declaration: declaration .

    $default  reduce using rule 4 (external-declaration)


State 13

    5 function-definition: declaration-specifiers . declarator compound-statement
   31 declaration: declaration-specifiers . init-declarator-list SEMICOLON
   32            | declaration-specifiers .

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 32 (declaration)

    init-declarator-list  go to state 22
    init-declarator       go to state 23
    declarator            go to state 24
    direct-declarator     go to state 25
    pointer               go to state 26


State 14

   33 declaration-specifiers: type-specifier .
   34                       | type-specifier . declaration-specifiers

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    T_CHAR      [reduce using rule 33 (declaration-specifiers)]
    T_INT       [reduce using rule 33 (declaration-specifiers)]
    T_BOOL      [reduce using rule 33 (declaration-specifiers)]
    KW_STRUCT   [reduce using rule 33 (declaration-specifiers)]
    T_SIGNED    [reduce using rule 33 (declaration-specifiers)]
    T_UNSIGNED  [reduce using rule 33 (declaration-specifiers)]
    Q_CONST     [reduce using rule 33 (declaration-specifiers)]
    KW_UNION    [reduce using rule 33 (declaration-specifiers)]
    $default    reduce using rule 33 (declaration-specifiers)

    declaration-specifiers     go to state 27
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 15

  120 type-specifier: struct-or-union-specifier .

    $default  reduce using rule 120 (type-specifier)


State 16

  121 struct-or-union-specifier: struct-or-union . IDENTIFIER L_BRACE struct-declaration-list R_BRACE
  122                          | struct-or-union . L_BRACE struct-declaration-list R_BRACE
  123                          | struct-or-union . IDENTIFIER

    IDENTIFIER  shift, and go to state 28
    L_BRACE     shift, and go to state 29


State 17

   35 declaration-specifiers: type-qualifier .
   36                       | type-qualifier . declaration-specifiers

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    T_CHAR      [reduce using rule 35 (declaration-specifiers)]
    T_INT       [reduce using rule 35 (declaration-specifiers)]
    T_BOOL      [reduce using rule 35 (declaration-specifiers)]
    KW_STRUCT   [reduce using rule 35 (declaration-specifiers)]
    T_SIGNED    [reduce using rule 35 (declaration-specifiers)]
    T_UNSIGNED  [reduce using rule 35 (declaration-specifiers)]
    Q_CONST     [reduce using rule 35 (declaration-specifiers)]
    KW_UNION    [reduce using rule 35 (declaration-specifiers)]
    $default    reduce using rule 35 (declaration-specifiers)

    declaration-specifiers     go to state 30
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 18

    0 $accept: translation-unit $end .

    $default  accept


State 19

    2 translation-unit: translation-unit external-declaration .

    $default  reduce using rule 2 (translation-unit)


State 20

  147 pointer: LO_MUL .
  148        | LO_MUL . pointer

    LO_MUL  shift, and go to state 20

    LO_MUL    [reduce using rule 147 (pointer)]
    $default  reduce using rule 147 (pointer)

    pointer  go to state 31


State 21

  139 direct-declarator: IDENTIFIER .

    $default  reduce using rule 139 (direct-declarator)


State 22

   31 declaration: declaration-specifiers init-declarator-list . SEMICOLON
   38 init-declarator-list: init-declarator-list . LO_COMMA init-declarator

    LO_COMMA   shift, and go to state 32
    SEMICOLON  shift, and go to state 33


State 23

   37 init-declarator-list: init-declarator .

    $default  reduce using rule 37 (init-declarator-list)


State 24

    5 function-definition: declaration-specifiers declarator . compound-statement
   39 init-declarator: declarator .
   40                | declarator . RO_ASSIGN initializer

    RO_ASSIGN  shift, and go to state 34
    L_BRACE    shift, and go to state 35

    $default  reduce using rule 39 (init-declarator)

    compound-statement  go to state 36


State 25

  138 declarator: direct-declarator .
  140 direct-declarator: direct-declarator . L_SQ_BRACKET assignment-expression R_SQ_BRACKET
  141                  | direct-declarator . L_BRACKET parameter-type-list R_BRACKET
  142                  | direct-declarator . L_BRACKET R_BRACKET

    L_BRACKET     shift, and go to state 37
    L_SQ_BRACKET  shift, and go to state 38

    $default  reduce using rule 138 (declarator)


State 26

  137 declarator: pointer . declarator

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    declarator         go to state 39
    direct-declarator  go to state 25
    pointer            go to state 26


State 27

   34 declaration-specifiers: type-specifier declaration-specifiers .

    $default  reduce using rule 34 (declaration-specifiers)


State 28

  121 struct-or-union-specifier: struct-or-union IDENTIFIER . L_BRACE struct-declaration-list R_BRACE
  123                          | struct-or-union IDENTIFIER .

    L_BRACE  shift, and go to state 40

    L_BRACE   [reduce using rule 123 (struct-or-union-specifier)]
    $default  reduce using rule 123 (struct-or-union-specifier)


State 29

  122 struct-or-union-specifier: struct-or-union L_BRACE . struct-declaration-list R_BRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    struct-declaration-list    go to state 42
    struct-declaration         go to state 43
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 30

   36 declaration-specifiers: type-qualifier declaration-specifiers .

    $default  reduce using rule 36 (declaration-specifiers)


State 31

  148 pointer: LO_MUL pointer .

    $default  reduce using rule 148 (pointer)


State 32

   38 init-declarator-list: init-declarator-list LO_COMMA . init-declarator

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    init-declarator    go to state 46
    declarator         go to state 47
    direct-declarator  go to state 25
    pointer            go to state 26


State 33

   31 declaration: declaration-specifiers init-declarator-list SEMICOLON .

    $default  reduce using rule 31 (declaration)


State 34

   40 init-declarator: declarator RO_ASSIGN . initializer

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 60

    initializer                go to state 61
    assignment-expression      go to state 62
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 35

   25 compound-statement: L_BRACE . block-item-list R_BRACE
   26                   | L_BRACE . R_BRACE

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 80
    KW_BREAK       shift, and go to state 81
    KW_IF          shift, and go to state 82
    KW_FOR         shift, and go to state 83
    KW_RET         shift, and go to state 84
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 85
    KW_DO          shift, and go to state 86
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 87
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35
    R_BRACE        shift, and go to state 88

    statement                  go to state 89
    jump-statement             go to state 90
    iteration-statement        go to state 91
    selection-statement        go to state 92
    expression-statement       go to state 93
    compound-statement         go to state 94
    block-item-list            go to state 95
    block-item                 go to state 96
    declaration                go to state 97
    declaration-specifiers     go to state 98
    expression                 go to state 99
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 36

    5 function-definition: declaration-specifiers declarator compound-statement .

    $default  reduce using rule 5 (function-definition)


State 37

  141 direct-declarator: direct-declarator L_BRACKET . parameter-type-list R_BRACKET
  142                  | direct-declarator L_BRACKET . R_BRACKET

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8
    R_BRACKET   shift, and go to state 101

    declaration-specifiers     go to state 102
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    parameter-type-list        go to state 103
    parameter-declaration      go to state 104
    type-qualifier             go to state 17


State 38

  140 direct-declarator: direct-declarator L_SQ_BRACKET . assignment-expression R_SQ_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 105
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 39

  137 declarator: pointer declarator .

    $default  reduce using rule 137 (declarator)


State 40

  121 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE . struct-declaration-list R_BRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    struct-declaration-list    go to state 106
    struct-declaration         go to state 43
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 41

  129 specifier-qualifier-list: type-specifier .
  130                         | type-specifier . specifier-qualifier-list

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    $default  reduce using rule 129 (specifier-qualifier-list)

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    specifier-qualifier-list   go to state 107
    type-qualifier             go to state 45


State 42

  122 struct-or-union-specifier: struct-or-union L_BRACE struct-declaration-list . R_BRACE
  127 struct-declaration-list: struct-declaration-list . struct-declaration

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8
    R_BRACE     shift, and go to state 108

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    struct-declaration         go to state 109
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 43

  126 struct-declaration-list: struct-declaration .

    $default  reduce using rule 126 (struct-declaration-list)


State 44

  128 struct-declaration: specifier-qualifier-list . struct-declarator-list SEMICOLON

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    struct-declarator-list  go to state 110
    struct-declarator       go to state 111
    declarator              go to state 112
    direct-declarator       go to state 25
    pointer                 go to state 26


State 45

  131 specifier-qualifier-list: type-qualifier .
  132                         | type-qualifier . specifier-qualifier-list

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    $default  reduce using rule 131 (specifier-qualifier-list)

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    specifier-qualifier-list   go to state 113
    type-qualifier             go to state 45


State 46

   38 init-declarator-list: init-declarator-list LO_COMMA init-declarator .

    $default  reduce using rule 38 (init-declarator-list)


State 47

   39 init-declarator: declarator .
   40                | declarator . RO_ASSIGN initializer

    RO_ASSIGN  shift, and go to state 34

    $default  reduce using rule 39 (init-declarator)


State 48

   97 unary-expression: LO_AS_SELFINC . unary-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 114

    unary-operator      go to state 75
    unary-expression    go to state 115
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 49

   98 unary-expression: LO_AS_SELFDEC . unary-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 114

    unary-operator      go to state 75
    unary-expression    go to state 116
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 50

   91 unary-operator: LO_MUL .

    $default  reduce using rule 91 (unary-operator)


State 51

   92 unary-operator: LO_ADD .

    $default  reduce using rule 92 (unary-operator)


State 52

   93 unary-operator: LO_SUB .

    $default  reduce using rule 93 (unary-operator)


State 53

   94 unary-operator: LO_BIT_NOT .

    $default  reduce using rule 94 (unary-operator)


State 54

   95 unary-operator: LO_LGC_NOT .

    $default  reduce using rule 95 (unary-operator)


State 55

   90 unary-operator: LO_BIT_AND .

    $default  reduce using rule 90 (unary-operator)


State 56

  110 primary-expression: IDENTIFIER .

    $default  reduce using rule 110 (primary-expression)


State 57

  113 constant: INTEGER .

    $default  reduce using rule 113 (constant)


State 58

  114 constant: STRING .

    $default  reduce using rule 114 (constant)


State 59

   89 cast-expression: L_BRACKET . type-specifier R_BRACKET cast-expression
  112 primary-expression: L_BRACKET . expression R_BRACKET

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_STRUCT      shift, and go to state 4
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 117
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 118
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16


State 60

   42 initializer: L_BRACE . initializer-list R_BRACE

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 60

    initializer                go to state 119
    initializer-list           go to state 120
    assignment-expression      go to state 62
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 61

   40 init-declarator: declarator RO_ASSIGN initializer .

    $default  reduce using rule 40 (init-declarator)


State 62

   41 initializer: assignment-expression .

    $default  reduce using rule 41 (initializer)


State 63

   56 assignment-expression: conditional-expression .

    $default  reduce using rule 56 (assignment-expression)


State 64

   58 conditional-expression: logical-OR-expression .
   59                       | logical-OR-expression . RO_TRI_QUES expression RO_TRI_COLON conditional-expression
   61 logical-OR-expression: logical-OR-expression . LO_LGC_OR logical-AND-expression

    RO_TRI_QUES  shift, and go to state 121
    LO_LGC_OR    shift, and go to state 122

    $default  reduce using rule 58 (conditional-expression)


State 65

   60 logical-OR-expression: logical-AND-expression .
   63 logical-AND-expression: logical-AND-expression . LO_LGC_AND inclusive-OR-expression

    LO_LGC_AND  shift, and go to state 123

    $default  reduce using rule 60 (logical-OR-expression)


State 66

   62 logical-AND-expression: inclusive-OR-expression .
   65 inclusive-OR-expression: inclusive-OR-expression . LO_BIT_OR exclusive-OR-expression

    LO_BIT_OR  shift, and go to state 124

    $default  reduce using rule 62 (logical-AND-expression)


State 67

   64 inclusive-OR-expression: exclusive-OR-expression .
   67 exclusive-OR-expression: exclusive-OR-expression . LO_BIT_XOR AND-expression

    LO_BIT_XOR  shift, and go to state 125

    $default  reduce using rule 64 (inclusive-OR-expression)


State 68

   66 exclusive-OR-expression: AND-expression .
   69 AND-expression: AND-expression . LO_BIT_AND equality-expression

    LO_BIT_AND  shift, and go to state 126

    $default  reduce using rule 66 (exclusive-OR-expression)


State 69

   68 AND-expression: equality-expression .
   71 equality-expression: equality-expression . LO_EQ relational-expression
   72                    | equality-expression . LO_N_EQ relational-expression

    LO_EQ    shift, and go to state 127
    LO_N_EQ  shift, and go to state 128

    $default  reduce using rule 68 (AND-expression)


State 70

   70 equality-expression: relational-expression .
   74 relational-expression: relational-expression . LO_REL_L shift-expression
   75                      | relational-expression . LO_REL_G shift-expression
   76                      | relational-expression . LO_REL_LE shift-expression
   77                      | relational-expression . LO_REL_GE shift-expression

    LO_REL_L   shift, and go to state 129
    LO_REL_G   shift, and go to state 130
    LO_REL_LE  shift, and go to state 131
    LO_REL_GE  shift, and go to state 132

    $default  reduce using rule 70 (equality-expression)


State 71

   73 relational-expression: shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 133
    LO_SFT_R  shift, and go to state 134

    $default  reduce using rule 73 (relational-expression)


State 72

   78 shift-expression: additive-expression .
   82 additive-expression: additive-expression . LO_ADD multiplicative-expression
   83                    | additive-expression . LO_SUB multiplicative-expression

    LO_ADD  shift, and go to state 135
    LO_SUB  shift, and go to state 136

    $default  reduce using rule 78 (shift-expression)


State 73

   81 additive-expression: multiplicative-expression .
   85 multiplicative-expression: multiplicative-expression . LO_MUL cast-expression
   86                          | multiplicative-expression . LO_DIV cast-expression
   87                          | multiplicative-expression . LO_MOD cast-expression

    LO_MUL  shift, and go to state 137
    LO_DIV  shift, and go to state 138
    LO_MOD  shift, and go to state 139

    $default  reduce using rule 81 (additive-expression)


State 74

   84 multiplicative-expression: cast-expression .

    $default  reduce using rule 84 (multiplicative-expression)


State 75

   99 unary-expression: unary-operator . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 140
    unary-operator      go to state 75
    unary-expression    go to state 141
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 76

   57 assignment-expression: unary-expression . assignment-operator assignment-expression
   88 cast-expression: unary-expression .

    RO_AS_ADDEQ    shift, and go to state 142
    RO_AS_SUBEQ    shift, and go to state 143
    RO_AS_MULEQ    shift, and go to state 144
    RO_AS_DIVEQ    shift, and go to state 145
    RO_AS_SFTL_EQ  shift, and go to state 146
    RO_AS_SFTR_EQ  shift, and go to state 147
    RO_AS_ANDEQ    shift, and go to state 148
    RO_AS_OREQ     shift, and go to state 149
    RO_ASSIGN      shift, and go to state 150

    $default  reduce using rule 88 (cast-expression)

    assignment-operator  go to state 151


State 77

   96 unary-expression: postfix-expression .
  101 postfix-expression: postfix-expression . L_SQ_BRACKET expression R_SQ_BRACKET
  102                   | postfix-expression . LO_MEMBER IDENTIFIER
  103                   | postfix-expression . LO_PT_MEMBER IDENTIFIER
  104                   | postfix-expression . LO_AS_SELFINC
  105                   | postfix-expression . LO_AS_SELFDEC
  106                   | postfix-expression . L_BRACKET argument-expression-list R_BRACKET
  107                   | postfix-expression . L_BRACKET R_BRACKET

    LO_AS_SELFINC  shift, and go to state 152
    LO_AS_SELFDEC  shift, and go to state 153
    LO_MEMBER      shift, and go to state 154
    LO_PT_MEMBER   shift, and go to state 155
    L_BRACKET      shift, and go to state 156
    L_SQ_BRACKET   shift, and go to state 157

    $default  reduce using rule 96 (unary-expression)


State 78

  100 postfix-expression: primary-expression .

    $default  reduce using rule 100 (postfix-expression)


State 79

  111 primary-expression: constant .

    $default  reduce using rule 111 (primary-expression)


State 80

   14 jump-statement: KW_CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 81

   13 jump-statement: KW_BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 159


State 82

   21 selection-statement: KW_IF . L_BRACKET expression R_BRACKET statement
   22                    | KW_IF . L_BRACKET expression R_BRACKET statement KW_ELSE statement

    L_BRACKET  shift, and go to state 160


State 83

   19 iteration-statement: KW_FOR . L_BRACKET SEMICOLON SEMICOLON R_BRACKET statement
   20                    | KW_FOR . L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET statement

    L_BRACKET  shift, and go to state 161


State 84

   15 jump-statement: KW_RET . SEMICOLON
   16               | KW_RET . assignment-expression SEMICOLON

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    SEMICOLON      shift, and go to state 162
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 163
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 85

   17 iteration-statement: KW_WHILE . L_BRACKET expression R_BRACKET statement

    L_BRACKET  shift, and go to state 164


State 86

   18 iteration-statement: KW_DO . statement KW_WHILE L_BRACKET expression R_BRACKET

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 80
    KW_BREAK       shift, and go to state 81
    KW_IF          shift, and go to state 82
    KW_FOR         shift, and go to state 83
    KW_RET         shift, and go to state 84
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 85
    KW_DO          shift, and go to state 86
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 87
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 165
    jump-statement             go to state 90
    iteration-statement        go to state 91
    selection-statement        go to state 92
    expression-statement       go to state 93
    compound-statement         go to state 94
    declaration                go to state 166
    declaration-specifiers     go to state 98
    expression                 go to state 99
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 87

    6 statement: SEMICOLON .
   23 expression-statement: SEMICOLON .

    T_CHAR         reduce using rule 6 (statement)
    T_CHAR         [reduce using rule 23 (expression-statement)]
    T_INT          reduce using rule 6 (statement)
    T_INT          [reduce using rule 23 (expression-statement)]
    T_BOOL         reduce using rule 6 (statement)
    T_BOOL         [reduce using rule 23 (expression-statement)]
    LO_AS_SELFINC  reduce using rule 6 (statement)
    LO_AS_SELFINC  [reduce using rule 23 (expression-statement)]
    LO_AS_SELFDEC  reduce using rule 6 (statement)
    LO_AS_SELFDEC  [reduce using rule 23 (expression-statement)]
    LO_MUL         reduce using rule 6 (statement)
    LO_MUL         [reduce using rule 23 (expression-statement)]
    LO_ADD         reduce using rule 6 (statement)
    LO_ADD         [reduce using rule 23 (expression-statement)]
    LO_SUB         reduce using rule 6 (statement)
    LO_SUB         [reduce using rule 23 (expression-statement)]
    LO_BIT_NOT     reduce using rule 6 (statement)
    LO_BIT_NOT     [reduce using rule 23 (expression-statement)]
    LO_LGC_NOT     reduce using rule 6 (statement)
    LO_LGC_NOT     [reduce using rule 23 (expression-statement)]
    LO_BIT_AND     reduce using rule 6 (statement)
    LO_BIT_AND     [reduce using rule 23 (expression-statement)]
    KW_CONTINUE    reduce using rule 6 (statement)
    KW_CONTINUE    [reduce using rule 23 (expression-statement)]
    KW_BREAK       reduce using rule 6 (statement)
    KW_BREAK       [reduce using rule 23 (expression-statement)]
    KW_IF          reduce using rule 6 (statement)
    KW_IF          [reduce using rule 23 (expression-statement)]
    KW_FOR         reduce using rule 6 (statement)
    KW_FOR         [reduce using rule 23 (expression-statement)]
    KW_RET         reduce using rule 6 (statement)
    KW_RET         [reduce using rule 23 (expression-statement)]
    KW_STRUCT      reduce using rule 6 (statement)
    KW_STRUCT      [reduce using rule 23 (expression-statement)]
    KW_WHILE       reduce using rule 6 (statement)
    KW_WHILE       [reduce using rule 23 (expression-statement)]
    KW_DO          reduce using rule 6 (statement)
    KW_DO          [reduce using rule 23 (expression-statement)]
    KW_ELSE        reduce using rule 6 (statement)
    KW_ELSE        [reduce using rule 23 (expression-statement)]
    T_SIGNED       reduce using rule 6 (statement)
    T_SIGNED       [reduce using rule 23 (expression-statement)]
    T_UNSIGNED     reduce using rule 6 (statement)
    T_UNSIGNED     [reduce using rule 23 (expression-statement)]
    Q_CONST        reduce using rule 6 (statement)
    Q_CONST        [reduce using rule 23 (expression-statement)]
    SEMICOLON      reduce using rule 6 (statement)
    SEMICOLON      [reduce using rule 23 (expression-statement)]
    KW_UNION       reduce using rule 6 (statement)
    KW_UNION       [reduce using rule 23 (expression-statement)]
    IDENTIFIER     reduce using rule 6 (statement)
    IDENTIFIER     [reduce using rule 23 (expression-statement)]
    INTEGER        reduce using rule 6 (statement)
    INTEGER        [reduce using rule 23 (expression-statement)]
    STRING         reduce using rule 6 (statement)
    STRING         [reduce using rule 23 (expression-statement)]
    L_BRACKET      reduce using rule 6 (statement)
    L_BRACKET      [reduce using rule 23 (expression-statement)]
    L_BRACE        reduce using rule 6 (statement)
    L_BRACE        [reduce using rule 23 (expression-statement)]
    R_BRACE        reduce using rule 6 (statement)
    R_BRACE        [reduce using rule 23 (expression-statement)]
    $default       reduce using rule 6 (statement)


State 88

   26 compound-statement: L_BRACE R_BRACE .

    $default  reduce using rule 26 (compound-statement)


State 89

   30 block-item: statement .

    $default  reduce using rule 30 (block-item)


State 90

   12 statement: jump-statement .

    $default  reduce using rule 12 (statement)


State 91

   11 statement: iteration-statement .

    $default  reduce using rule 11 (statement)


State 92

   10 statement: selection-statement .

    $default  reduce using rule 10 (statement)


State 93

    9 statement: expression-statement .

    $default  reduce using rule 9 (statement)


State 94

    8 statement: compound-statement .

    $default  reduce using rule 8 (statement)


State 95

   25 compound-statement: L_BRACE block-item-list . R_BRACE
   28 block-item-list: block-item-list . block-item

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 80
    KW_BREAK       shift, and go to state 81
    KW_IF          shift, and go to state 82
    KW_FOR         shift, and go to state 83
    KW_RET         shift, and go to state 84
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 85
    KW_DO          shift, and go to state 86
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 87
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35
    R_BRACE        shift, and go to state 167

    statement                  go to state 89
    jump-statement             go to state 90
    iteration-statement        go to state 91
    selection-statement        go to state 92
    expression-statement       go to state 93
    compound-statement         go to state 94
    block-item                 go to state 168
    declaration                go to state 97
    declaration-specifiers     go to state 98
    expression                 go to state 99
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 96

   27 block-item-list: block-item .

    $default  reduce using rule 27 (block-item-list)


State 97

    7 statement: declaration .
   29 block-item: declaration .

    T_CHAR         reduce using rule 7 (statement)
    T_CHAR         [reduce using rule 29 (block-item)]
    T_INT          reduce using rule 7 (statement)
    T_INT          [reduce using rule 29 (block-item)]
    T_BOOL         reduce using rule 7 (statement)
    T_BOOL         [reduce using rule 29 (block-item)]
    LO_AS_SELFINC  reduce using rule 7 (statement)
    LO_AS_SELFINC  [reduce using rule 29 (block-item)]
    LO_AS_SELFDEC  reduce using rule 7 (statement)
    LO_AS_SELFDEC  [reduce using rule 29 (block-item)]
    LO_MUL         reduce using rule 7 (statement)
    LO_MUL         [reduce using rule 29 (block-item)]
    LO_ADD         reduce using rule 7 (statement)
    LO_ADD         [reduce using rule 29 (block-item)]
    LO_SUB         reduce using rule 7 (statement)
    LO_SUB         [reduce using rule 29 (block-item)]
    LO_BIT_NOT     reduce using rule 7 (statement)
    LO_BIT_NOT     [reduce using rule 29 (block-item)]
    LO_LGC_NOT     reduce using rule 7 (statement)
    LO_LGC_NOT     [reduce using rule 29 (block-item)]
    LO_BIT_AND     reduce using rule 7 (statement)
    LO_BIT_AND     [reduce using rule 29 (block-item)]
    KW_CONTINUE    reduce using rule 7 (statement)
    KW_CONTINUE    [reduce using rule 29 (block-item)]
    KW_BREAK       reduce using rule 7 (statement)
    KW_BREAK       [reduce using rule 29 (block-item)]
    KW_IF          reduce using rule 7 (statement)
    KW_IF          [reduce using rule 29 (block-item)]
    KW_FOR         reduce using rule 7 (statement)
    KW_FOR         [reduce using rule 29 (block-item)]
    KW_RET         reduce using rule 7 (statement)
    KW_RET         [reduce using rule 29 (block-item)]
    KW_STRUCT      reduce using rule 7 (statement)
    KW_STRUCT      [reduce using rule 29 (block-item)]
    KW_WHILE       reduce using rule 7 (statement)
    KW_WHILE       [reduce using rule 29 (block-item)]
    KW_DO          reduce using rule 7 (statement)
    KW_DO          [reduce using rule 29 (block-item)]
    T_SIGNED       reduce using rule 7 (statement)
    T_SIGNED       [reduce using rule 29 (block-item)]
    T_UNSIGNED     reduce using rule 7 (statement)
    T_UNSIGNED     [reduce using rule 29 (block-item)]
    Q_CONST        reduce using rule 7 (statement)
    Q_CONST        [reduce using rule 29 (block-item)]
    SEMICOLON      reduce using rule 7 (statement)
    SEMICOLON      [reduce using rule 29 (block-item)]
    KW_UNION       reduce using rule 7 (statement)
    KW_UNION       [reduce using rule 29 (block-item)]
    IDENTIFIER     reduce using rule 7 (statement)
    IDENTIFIER     [reduce using rule 29 (block-item)]
    INTEGER        reduce using rule 7 (statement)
    INTEGER        [reduce using rule 29 (block-item)]
    STRING         reduce using rule 7 (statement)
    STRING         [reduce using rule 29 (block-item)]
    L_BRACKET      reduce using rule 7 (statement)
    L_BRACKET      [reduce using rule 29 (block-item)]
    L_BRACE        reduce using rule 7 (statement)
    L_BRACE        [reduce using rule 29 (block-item)]
    R_BRACE        reduce using rule 7 (statement)
    R_BRACE        [reduce using rule 29 (block-item)]
    $default       reduce using rule 7 (statement)


State 98

   31 declaration: declaration-specifiers . init-declarator-list SEMICOLON
   32            | declaration-specifiers .

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    LO_MUL      [reduce using rule 32 (declaration)]
    IDENTIFIER  [reduce using rule 32 (declaration)]
    $default    reduce using rule 32 (declaration)

    init-declarator-list  go to state 22
    init-declarator       go to state 23
    declarator            go to state 47
    direct-declarator     go to state 25
    pointer               go to state 26


State 99

   24 expression-statement: expression . SEMICOLON
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 169
    SEMICOLON  shift, and go to state 170


State 100

   45 expression: assignment-expression .

    $default  reduce using rule 45 (expression)


State 101

  142 direct-declarator: direct-declarator L_BRACKET R_BRACKET .

    $default  reduce using rule 142 (direct-declarator)


State 102

  145 parameter-declaration: declaration-specifiers . declarator
  146                      | declaration-specifiers .

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 146 (parameter-declaration)

    declarator         go to state 171
    direct-declarator  go to state 25
    pointer            go to state 26


State 103

  141 direct-declarator: direct-declarator L_BRACKET parameter-type-list . R_BRACKET
  144 parameter-type-list: parameter-type-list . LO_COMMA parameter-declaration

    LO_COMMA   shift, and go to state 172
    R_BRACKET  shift, and go to state 173


State 104

  143 parameter-type-list: parameter-declaration .

    $default  reduce using rule 143 (parameter-type-list)


State 105

  140 direct-declarator: direct-declarator L_SQ_BRACKET assignment-expression . R_SQ_BRACKET

    R_SQ_BRACKET  shift, and go to state 174


State 106

  121 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE struct-declaration-list . R_BRACE
  127 struct-declaration-list: struct-declaration-list . struct-declaration

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8
    R_BRACE     shift, and go to state 175

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    struct-declaration         go to state 109
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 107

  130 specifier-qualifier-list: type-specifier specifier-qualifier-list .

    $default  reduce using rule 130 (specifier-qualifier-list)


State 108

  122 struct-or-union-specifier: struct-or-union L_BRACE struct-declaration-list R_BRACE .

    $default  reduce using rule 122 (struct-or-union-specifier)


State 109

  127 struct-declaration-list: struct-declaration-list struct-declaration .

    $default  reduce using rule 127 (struct-declaration-list)


State 110

  128 struct-declaration: specifier-qualifier-list struct-declarator-list . SEMICOLON
  134 struct-declarator-list: struct-declarator-list . LO_COMMA struct-declarator

    LO_COMMA   shift, and go to state 176
    SEMICOLON  shift, and go to state 177


State 111

  133 struct-declarator-list: struct-declarator .

    $default  reduce using rule 133 (struct-declarator-list)


State 112

  135 struct-declarator: declarator .
  136                  | declarator . COLON INTEGER

    COLON  shift, and go to state 178

    $default  reduce using rule 135 (struct-declarator)


State 113

  132 specifier-qualifier-list: type-qualifier specifier-qualifier-list .

    $default  reduce using rule 132 (specifier-qualifier-list)


State 114

  112 primary-expression: L_BRACKET . expression R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 117
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 115

   97 unary-expression: LO_AS_SELFINC unary-expression .

    $default  reduce using rule 97 (unary-expression)


State 116

   98 unary-expression: LO_AS_SELFDEC unary-expression .

    $default  reduce using rule 98 (unary-expression)


State 117

   46 expression: expression . LO_COMMA assignment-expression
  112 primary-expression: L_BRACKET expression . R_BRACKET

    LO_COMMA   shift, and go to state 169
    R_BRACKET  shift, and go to state 179


State 118

   89 cast-expression: L_BRACKET type-specifier . R_BRACKET cast-expression

    R_BRACKET  shift, and go to state 180


State 119

   43 initializer-list: initializer .

    $default  reduce using rule 43 (initializer-list)


State 120

   42 initializer: L_BRACE initializer-list . R_BRACE
   44 initializer-list: initializer-list . LO_COMMA initializer

    LO_COMMA  shift, and go to state 181
    R_BRACE   shift, and go to state 182


State 121

   59 conditional-expression: logical-OR-expression RO_TRI_QUES . expression RO_TRI_COLON conditional-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 183
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 122

   61 logical-OR-expression: logical-OR-expression LO_LGC_OR . logical-AND-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    logical-AND-expression     go to state 184
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 123

   63 logical-AND-expression: logical-AND-expression LO_LGC_AND . inclusive-OR-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    inclusive-OR-expression    go to state 185
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 124

   65 inclusive-OR-expression: inclusive-OR-expression LO_BIT_OR . exclusive-OR-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    exclusive-OR-expression    go to state 186
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 125

   67 exclusive-OR-expression: exclusive-OR-expression LO_BIT_XOR . AND-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    AND-expression             go to state 187
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 126

   69 AND-expression: AND-expression LO_BIT_AND . equality-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    equality-expression        go to state 188
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 127

   71 equality-expression: equality-expression LO_EQ . relational-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    relational-expression      go to state 189
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 128

   72 equality-expression: equality-expression LO_N_EQ . relational-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    relational-expression      go to state 190
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 129

   74 relational-expression: relational-expression LO_REL_L . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    shift-expression           go to state 191
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 130

   75 relational-expression: relational-expression LO_REL_G . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    shift-expression           go to state 192
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 131

   76 relational-expression: relational-expression LO_REL_LE . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    shift-expression           go to state 193
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 132

   77 relational-expression: relational-expression LO_REL_GE . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    shift-expression           go to state 194
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 133

   79 shift-expression: shift-expression LO_SFT_L . additive-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    additive-expression        go to state 195
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 134

   80 shift-expression: shift-expression LO_SFT_R . additive-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    additive-expression        go to state 196
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 135

   82 additive-expression: additive-expression LO_ADD . multiplicative-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    multiplicative-expression  go to state 197
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 136

   83 additive-expression: additive-expression LO_SUB . multiplicative-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    multiplicative-expression  go to state 198
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 137

   85 multiplicative-expression: multiplicative-expression LO_MUL . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 199
    unary-operator      go to state 75
    unary-expression    go to state 141
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 138

   86 multiplicative-expression: multiplicative-expression LO_DIV . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 200
    unary-operator      go to state 75
    unary-expression    go to state 141
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 139

   87 multiplicative-expression: multiplicative-expression LO_MOD . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 201
    unary-operator      go to state 75
    unary-expression    go to state 141
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 140

   99 unary-expression: unary-operator cast-expression .

    $default  reduce using rule 99 (unary-expression)


State 141

   88 cast-expression: unary-expression .

    $default  reduce using rule 88 (cast-expression)


State 142

   48 assignment-operator: RO_AS_ADDEQ .

    $default  reduce using rule 48 (assignment-operator)


State 143

   55 assignment-operator: RO_AS_SUBEQ .

    $default  reduce using rule 55 (assignment-operator)


State 144

   51 assignment-operator: RO_AS_MULEQ .

    $default  reduce using rule 51 (assignment-operator)


State 145

   50 assignment-operator: RO_AS_DIVEQ .

    $default  reduce using rule 50 (assignment-operator)


State 146

   53 assignment-operator: RO_AS_SFTL_EQ .

    $default  reduce using rule 53 (assignment-operator)


State 147

   54 assignment-operator: RO_AS_SFTR_EQ .

    $default  reduce using rule 54 (assignment-operator)


State 148

   49 assignment-operator: RO_AS_ANDEQ .

    $default  reduce using rule 49 (assignment-operator)


State 149

   52 assignment-operator: RO_AS_OREQ .

    $default  reduce using rule 52 (assignment-operator)


State 150

   47 assignment-operator: RO_ASSIGN .

    $default  reduce using rule 47 (assignment-operator)


State 151

   57 assignment-expression: unary-expression assignment-operator . assignment-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 202
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 152

  104 postfix-expression: postfix-expression LO_AS_SELFINC .

    $default  reduce using rule 104 (postfix-expression)


State 153

  105 postfix-expression: postfix-expression LO_AS_SELFDEC .

    $default  reduce using rule 105 (postfix-expression)


State 154

  102 postfix-expression: postfix-expression LO_MEMBER . IDENTIFIER

    IDENTIFIER  shift, and go to state 203


State 155

  103 postfix-expression: postfix-expression LO_PT_MEMBER . IDENTIFIER

    IDENTIFIER  shift, and go to state 204


State 156

  106 postfix-expression: postfix-expression L_BRACKET . argument-expression-list R_BRACKET
  107                   | postfix-expression L_BRACKET . R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    R_BRACKET      shift, and go to state 205

    assignment-expression      go to state 206
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    argument-expression-list   go to state 207
    primary-expression         go to state 78
    constant                   go to state 79


State 157

  101 postfix-expression: postfix-expression L_SQ_BRACKET . expression R_SQ_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 208
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 158

   14 jump-statement: KW_CONTINUE SEMICOLON .

    $default  reduce using rule 14 (jump-statement)


State 159

   13 jump-statement: KW_BREAK SEMICOLON .

    $default  reduce using rule 13 (jump-statement)


State 160

   21 selection-statement: KW_IF L_BRACKET . expression R_BRACKET statement
   22                    | KW_IF L_BRACKET . expression R_BRACKET statement KW_ELSE statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 209
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 161

   19 iteration-statement: KW_FOR L_BRACKET . SEMICOLON SEMICOLON R_BRACKET statement
   20                    | KW_FOR L_BRACKET . expression SEMICOLON expression SEMICOLON expression R_BRACKET statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    SEMICOLON      shift, and go to state 210
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 211
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 162

   15 jump-statement: KW_RET SEMICOLON .

    $default  reduce using rule 15 (jump-statement)


State 163

   16 jump-statement: KW_RET assignment-expression . SEMICOLON

    SEMICOLON  shift, and go to state 212


State 164

   17 iteration-statement: KW_WHILE L_BRACKET . expression R_BRACKET statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 213
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 165

   18 iteration-statement: KW_DO statement . KW_WHILE L_BRACKET expression R_BRACKET

    KW_WHILE  shift, and go to state 214


State 166

    7 statement: declaration .

    $default  reduce using rule 7 (statement)


State 167

   25 compound-statement: L_BRACE block-item-list R_BRACE .

    $default  reduce using rule 25 (compound-statement)


State 168

   28 block-item-list: block-item-list block-item .

    $default  reduce using rule 28 (block-item-list)


State 169

   46 expression: expression LO_COMMA . assignment-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 215
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 170

   24 expression-statement: expression SEMICOLON .

    $default  reduce using rule 24 (expression-statement)


State 171

  145 parameter-declaration: declaration-specifiers declarator .

    $default  reduce using rule 145 (parameter-declaration)


State 172

  144 parameter-type-list: parameter-type-list LO_COMMA . parameter-declaration

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    KW_STRUCT   shift, and go to state 4
    T_SIGNED    shift, and go to state 5
    T_UNSIGNED  shift, and go to state 6
    Q_CONST     shift, and go to state 7
    KW_UNION    shift, and go to state 8

    declaration-specifiers     go to state 102
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    parameter-declaration      go to state 216
    type-qualifier             go to state 17


State 173

  141 direct-declarator: direct-declarator L_BRACKET parameter-type-list R_BRACKET .

    $default  reduce using rule 141 (direct-declarator)


State 174

  140 direct-declarator: direct-declarator L_SQ_BRACKET assignment-expression R_SQ_BRACKET .

    $default  reduce using rule 140 (direct-declarator)


State 175

  121 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE struct-declaration-list R_BRACE .

    $default  reduce using rule 121 (struct-or-union-specifier)


State 176

  134 struct-declarator-list: struct-declarator-list LO_COMMA . struct-declarator

    LO_MUL      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21

    struct-declarator  go to state 217
    declarator         go to state 112
    direct-declarator  go to state 25
    pointer            go to state 26


State 177

  128 struct-declaration: specifier-qualifier-list struct-declarator-list SEMICOLON .

    $default  reduce using rule 128 (struct-declaration)


State 178

  136 struct-declarator: declarator COLON . INTEGER

    INTEGER  shift, and go to state 218


State 179

  112 primary-expression: L_BRACKET expression R_BRACKET .

    $default  reduce using rule 112 (primary-expression)


State 180

   89 cast-expression: L_BRACKET type-specifier R_BRACKET . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 219
    unary-operator      go to state 75
    unary-expression    go to state 141
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 181

   44 initializer-list: initializer-list LO_COMMA . initializer

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 60

    initializer                go to state 220
    assignment-expression      go to state 62
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 182

   42 initializer: L_BRACE initializer-list R_BRACE .

    $default  reduce using rule 42 (initializer)


State 183

   46 expression: expression . LO_COMMA assignment-expression
   59 conditional-expression: logical-OR-expression RO_TRI_QUES expression . RO_TRI_COLON conditional-expression

    RO_TRI_COLON  shift, and go to state 221
    LO_COMMA      shift, and go to state 169


State 184

   61 logical-OR-expression: logical-OR-expression LO_LGC_OR logical-AND-expression .
   63 logical-AND-expression: logical-AND-expression . LO_LGC_AND inclusive-OR-expression

    LO_LGC_AND  shift, and go to state 123

    $default  reduce using rule 61 (logical-OR-expression)


State 185

   63 logical-AND-expression: logical-AND-expression LO_LGC_AND inclusive-OR-expression .
   65 inclusive-OR-expression: inclusive-OR-expression . LO_BIT_OR exclusive-OR-expression

    LO_BIT_OR  shift, and go to state 124

    $default  reduce using rule 63 (logical-AND-expression)


State 186

   65 inclusive-OR-expression: inclusive-OR-expression LO_BIT_OR exclusive-OR-expression .
   67 exclusive-OR-expression: exclusive-OR-expression . LO_BIT_XOR AND-expression

    LO_BIT_XOR  shift, and go to state 125

    $default  reduce using rule 65 (inclusive-OR-expression)


State 187

   67 exclusive-OR-expression: exclusive-OR-expression LO_BIT_XOR AND-expression .
   69 AND-expression: AND-expression . LO_BIT_AND equality-expression

    LO_BIT_AND  shift, and go to state 126

    $default  reduce using rule 67 (exclusive-OR-expression)


State 188

   69 AND-expression: AND-expression LO_BIT_AND equality-expression .
   71 equality-expression: equality-expression . LO_EQ relational-expression
   72                    | equality-expression . LO_N_EQ relational-expression

    LO_EQ    shift, and go to state 127
    LO_N_EQ  shift, and go to state 128

    $default  reduce using rule 69 (AND-expression)


State 189

   71 equality-expression: equality-expression LO_EQ relational-expression .
   74 relational-expression: relational-expression . LO_REL_L shift-expression
   75                      | relational-expression . LO_REL_G shift-expression
   76                      | relational-expression . LO_REL_LE shift-expression
   77                      | relational-expression . LO_REL_GE shift-expression

    LO_REL_L   shift, and go to state 129
    LO_REL_G   shift, and go to state 130
    LO_REL_LE  shift, and go to state 131
    LO_REL_GE  shift, and go to state 132

    $default  reduce using rule 71 (equality-expression)


State 190

   72 equality-expression: equality-expression LO_N_EQ relational-expression .
   74 relational-expression: relational-expression . LO_REL_L shift-expression
   75                      | relational-expression . LO_REL_G shift-expression
   76                      | relational-expression . LO_REL_LE shift-expression
   77                      | relational-expression . LO_REL_GE shift-expression

    LO_REL_L   shift, and go to state 129
    LO_REL_G   shift, and go to state 130
    LO_REL_LE  shift, and go to state 131
    LO_REL_GE  shift, and go to state 132

    $default  reduce using rule 72 (equality-expression)


State 191

   74 relational-expression: relational-expression LO_REL_L shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 133
    LO_SFT_R  shift, and go to state 134

    $default  reduce using rule 74 (relational-expression)


State 192

   75 relational-expression: relational-expression LO_REL_G shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 133
    LO_SFT_R  shift, and go to state 134

    $default  reduce using rule 75 (relational-expression)


State 193

   76 relational-expression: relational-expression LO_REL_LE shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 133
    LO_SFT_R  shift, and go to state 134

    $default  reduce using rule 76 (relational-expression)


State 194

   77 relational-expression: relational-expression LO_REL_GE shift-expression .
   79 shift-expression: shift-expression . LO_SFT_L additive-expression
   80                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 133
    LO_SFT_R  shift, and go to state 134

    $default  reduce using rule 77 (relational-expression)


State 195

   79 shift-expression: shift-expression LO_SFT_L additive-expression .
   82 additive-expression: additive-expression . LO_ADD multiplicative-expression
   83                    | additive-expression . LO_SUB multiplicative-expression

    LO_ADD  shift, and go to state 135
    LO_SUB  shift, and go to state 136

    $default  reduce using rule 79 (shift-expression)


State 196

   80 shift-expression: shift-expression LO_SFT_R additive-expression .
   82 additive-expression: additive-expression . LO_ADD multiplicative-expression
   83                    | additive-expression . LO_SUB multiplicative-expression

    LO_ADD  shift, and go to state 135
    LO_SUB  shift, and go to state 136

    $default  reduce using rule 80 (shift-expression)


State 197

   82 additive-expression: additive-expression LO_ADD multiplicative-expression .
   85 multiplicative-expression: multiplicative-expression . LO_MUL cast-expression
   86                          | multiplicative-expression . LO_DIV cast-expression
   87                          | multiplicative-expression . LO_MOD cast-expression

    LO_MUL  shift, and go to state 137
    LO_DIV  shift, and go to state 138
    LO_MOD  shift, and go to state 139

    $default  reduce using rule 82 (additive-expression)


State 198

   83 additive-expression: additive-expression LO_SUB multiplicative-expression .
   85 multiplicative-expression: multiplicative-expression . LO_MUL cast-expression
   86                          | multiplicative-expression . LO_DIV cast-expression
   87                          | multiplicative-expression . LO_MOD cast-expression

    LO_MUL  shift, and go to state 137
    LO_DIV  shift, and go to state 138
    LO_MOD  shift, and go to state 139

    $default  reduce using rule 83 (additive-expression)


State 199

   85 multiplicative-expression: multiplicative-expression LO_MUL cast-expression .

    $default  reduce using rule 85 (multiplicative-expression)


State 200

   86 multiplicative-expression: multiplicative-expression LO_DIV cast-expression .

    $default  reduce using rule 86 (multiplicative-expression)


State 201

   87 multiplicative-expression: multiplicative-expression LO_MOD cast-expression .

    $default  reduce using rule 87 (multiplicative-expression)


State 202

   57 assignment-expression: unary-expression assignment-operator assignment-expression .

    $default  reduce using rule 57 (assignment-expression)


State 203

  102 postfix-expression: postfix-expression LO_MEMBER IDENTIFIER .

    $default  reduce using rule 102 (postfix-expression)


State 204

  103 postfix-expression: postfix-expression LO_PT_MEMBER IDENTIFIER .

    $default  reduce using rule 103 (postfix-expression)


State 205

  107 postfix-expression: postfix-expression L_BRACKET R_BRACKET .

    $default  reduce using rule 107 (postfix-expression)


State 206

  108 argument-expression-list: assignment-expression .

    $default  reduce using rule 108 (argument-expression-list)


State 207

  106 postfix-expression: postfix-expression L_BRACKET argument-expression-list . R_BRACKET
  109 argument-expression-list: argument-expression-list . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 222
    R_BRACKET  shift, and go to state 223


State 208

   46 expression: expression . LO_COMMA assignment-expression
  101 postfix-expression: postfix-expression L_SQ_BRACKET expression . R_SQ_BRACKET

    LO_COMMA      shift, and go to state 169
    R_SQ_BRACKET  shift, and go to state 224


State 209

   21 selection-statement: KW_IF L_BRACKET expression . R_BRACKET statement
   22                    | KW_IF L_BRACKET expression . R_BRACKET statement KW_ELSE statement
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 169
    R_BRACKET  shift, and go to state 225


State 210

   19 iteration-statement: KW_FOR L_BRACKET SEMICOLON . SEMICOLON R_BRACKET statement

    SEMICOLON  shift, and go to state 226


State 211

   20 iteration-statement: KW_FOR L_BRACKET expression . SEMICOLON expression SEMICOLON expression R_BRACKET statement
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 169
    SEMICOLON  shift, and go to state 227


State 212

   16 jump-statement: KW_RET assignment-expression SEMICOLON .

    $default  reduce using rule 16 (jump-statement)


State 213

   17 iteration-statement: KW_WHILE L_BRACKET expression . R_BRACKET statement
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 169
    R_BRACKET  shift, and go to state 228


State 214

   18 iteration-statement: KW_DO statement KW_WHILE . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 229


State 215

   46 expression: expression LO_COMMA assignment-expression .

    $default  reduce using rule 46 (expression)


State 216

  144 parameter-type-list: parameter-type-list LO_COMMA parameter-declaration .

    $default  reduce using rule 144 (parameter-type-list)


State 217

  134 struct-declarator-list: struct-declarator-list LO_COMMA struct-declarator .

    $default  reduce using rule 134 (struct-declarator-list)


State 218

  136 struct-declarator: declarator COLON INTEGER .

    $default  reduce using rule 136 (struct-declarator)


State 219

   89 cast-expression: L_BRACKET type-specifier R_BRACKET cast-expression .

    $default  reduce using rule 89 (cast-expression)


State 220

   44 initializer-list: initializer-list LO_COMMA initializer .

    $default  reduce using rule 44 (initializer-list)


State 221

   59 conditional-expression: logical-OR-expression RO_TRI_QUES expression RO_TRI_COLON . conditional-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    conditional-expression     go to state 230
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 141
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 222

  109 argument-expression-list: argument-expression-list LO_COMMA . assignment-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 231
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 223

  106 postfix-expression: postfix-expression L_BRACKET argument-expression-list R_BRACKET .

    $default  reduce using rule 106 (postfix-expression)


State 224

  101 postfix-expression: postfix-expression L_SQ_BRACKET expression R_SQ_BRACKET .

    $default  reduce using rule 101 (postfix-expression)


State 225

   21 selection-statement: KW_IF L_BRACKET expression R_BRACKET . statement
   22                    | KW_IF L_BRACKET expression R_BRACKET . statement KW_ELSE statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 80
    KW_BREAK       shift, and go to state 81
    KW_IF          shift, and go to state 82
    KW_FOR         shift, and go to state 83
    KW_RET         shift, and go to state 84
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 85
    KW_DO          shift, and go to state 86
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 87
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 232
    jump-statement             go to state 90
    iteration-statement        go to state 91
    selection-statement        go to state 92
    expression-statement       go to state 93
    compound-statement         go to state 94
    declaration                go to state 166
    declaration-specifiers     go to state 98
    expression                 go to state 99
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 226

   19 iteration-statement: KW_FOR L_BRACKET SEMICOLON SEMICOLON . R_BRACKET statement

    R_BRACKET  shift, and go to state 233


State 227

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON . expression SEMICOLON expression R_BRACKET statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 234
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 228

   17 iteration-statement: KW_WHILE L_BRACKET expression R_BRACKET . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 80
    KW_BREAK       shift, and go to state 81
    KW_IF          shift, and go to state 82
    KW_FOR         shift, and go to state 83
    KW_RET         shift, and go to state 84
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 85
    KW_DO          shift, and go to state 86
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 87
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 235
    jump-statement             go to state 90
    iteration-statement        go to state 91
    selection-statement        go to state 92
    expression-statement       go to state 93
    compound-statement         go to state 94
    declaration                go to state 166
    declaration-specifiers     go to state 98
    expression                 go to state 99
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 229

   18 iteration-statement: KW_DO statement KW_WHILE L_BRACKET . expression R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 236
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 230

   59 conditional-expression: logical-OR-expression RO_TRI_QUES expression RO_TRI_COLON conditional-expression .

    $default  reduce using rule 59 (conditional-expression)


State 231

  109 argument-expression-list: argument-expression-list LO_COMMA assignment-expression .

    $default  reduce using rule 109 (argument-expression-list)


State 232

   21 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement .
   22                    | KW_IF L_BRACKET expression R_BRACKET statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 237

    KW_ELSE   [reduce using rule 21 (selection-statement)]
    $default  reduce using rule 21 (selection-statement)


State 233

   19 iteration-statement: KW_FOR L_BRACKET SEMICOLON SEMICOLON R_BRACKET . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 80
    KW_BREAK       shift, and go to state 81
    KW_IF          shift, and go to state 82
    KW_FOR         shift, and go to state 83
    KW_RET         shift, and go to state 84
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 85
    KW_DO          shift, and go to state 86
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 87
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 238
    jump-statement             go to state 90
    iteration-statement        go to state 91
    selection-statement        go to state 92
    expression-statement       go to state 93
    compound-statement         go to state 94
    declaration                go to state 166
    declaration-specifiers     go to state 98
    expression                 go to state 99
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 234

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression . SEMICOLON expression R_BRACKET statement
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 169
    SEMICOLON  shift, and go to state 239


State 235

   17 iteration-statement: KW_WHILE L_BRACKET expression R_BRACKET statement .

    $default  reduce using rule 17 (iteration-statement)


State 236

   18 iteration-statement: KW_DO statement KW_WHILE L_BRACKET expression . R_BRACKET
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 169
    R_BRACKET  shift, and go to state 240


State 237

   22 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement KW_ELSE . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 80
    KW_BREAK       shift, and go to state 81
    KW_IF          shift, and go to state 82
    KW_FOR         shift, and go to state 83
    KW_RET         shift, and go to state 84
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 85
    KW_DO          shift, and go to state 86
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 87
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 241
    jump-statement             go to state 90
    iteration-statement        go to state 91
    selection-statement        go to state 92
    expression-statement       go to state 93
    compound-statement         go to state 94
    declaration                go to state 166
    declaration-specifiers     go to state 98
    expression                 go to state 99
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 238

   19 iteration-statement: KW_FOR L_BRACKET SEMICOLON SEMICOLON R_BRACKET statement .

    $default  reduce using rule 19 (iteration-statement)


State 239

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON . expression R_BRACKET statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 242
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 240

   18 iteration-statement: KW_DO statement KW_WHILE L_BRACKET expression R_BRACKET .

    $default  reduce using rule 18 (iteration-statement)


State 241

   22 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement KW_ELSE statement .

    $default  reduce using rule 22 (selection-statement)


State 242

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression . R_BRACKET statement
   46 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 169
    R_BRACKET  shift, and go to state 243


State 243

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 80
    KW_BREAK       shift, and go to state 81
    KW_IF          shift, and go to state 82
    KW_FOR         shift, and go to state 83
    KW_RET         shift, and go to state 84
    KW_STRUCT      shift, and go to state 4
    KW_WHILE       shift, and go to state 85
    KW_DO          shift, and go to state 86
    T_SIGNED       shift, and go to state 5
    T_UNSIGNED     shift, and go to state 6
    Q_CONST        shift, and go to state 7
    SEMICOLON      shift, and go to state 87
    KW_UNION       shift, and go to state 8
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 244
    jump-statement             go to state 90
    iteration-statement        go to state 91
    selection-statement        go to state 92
    expression-statement       go to state 93
    compound-statement         go to state 94
    declaration                go to state 166
    declaration-specifiers     go to state 98
    expression                 go to state 99
    assignment-expression      go to state 100
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 14
    struct-or-union-specifier  go to state 15
    struct-or-union            go to state 16
    type-qualifier             go to state 17


State 244

   20 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET statement .

    $default  reduce using rule 20 (iteration-statement)
