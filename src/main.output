Nonterminals useless in grammar

   statements


Terminals unused in grammar

   T_STRING
   CHAR
   BOOL


Rules useless in grammar

  153 statements: statement
  154           | statements statement


Rules useless in parser due to conflicts

   26 expression-statement: SEMICOLON

   32 block-item: declaration


State 15 conflicts: 9 shift/reduce
State 18 conflicts: 9 shift/reduce
State 29 conflicts: 1 shift/reduce
State 89 conflicts: 34 reduce/reduce
State 100 conflicts: 33 reduce/reduce
State 101 conflicts: 2 shift/reduce
State 243 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation-unit $end

    1 translation-unit: external-declaration
    2                 | translation-unit external-declaration

    3 external-declaration: function-definition
    4                     | declaration

    5 function-definition: declaration-specifiers declarator compound-statement

    6 statement: SEMICOLON
    7          | declaration
    8          | compound-statement
    9          | expression-statement
   10          | selection-statement
   11          | iteration-statement
   12          | jump-statement
   13          | io-statement

   14 io-statement: PRINTF L_BRACKET STRING LO_COMMA assignment-expression R_BRACKET SEMICOLON
   15             | SCANF L_BRACKET STRING LO_COMMA unary-expression R_BRACKET SEMICOLON

   16 jump-statement: KW_BREAK SEMICOLON
   17               | KW_CONTINUE SEMICOLON
   18               | KW_RET SEMICOLON
   19               | KW_RET assignment-expression SEMICOLON

   20 iteration-statement: KW_WHILE L_BRACKET expression R_BRACKET statement
   21                    | KW_DO statement KW_WHILE L_BRACKET expression R_BRACKET
   22                    | KW_FOR L_BRACKET SEMICOLON SEMICOLON R_BRACKET statement
   23                    | KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET statement

   24 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement
   25                    | KW_IF L_BRACKET expression R_BRACKET statement KW_ELSE statement

   26 expression-statement: SEMICOLON
   27                     | expression SEMICOLON

   28 compound-statement: L_BRACE block-item-list R_BRACE
   29                   | L_BRACE R_BRACE

   30 block-item-list: block-item
   31                | block-item-list block-item

   32 block-item: declaration
   33           | statement

   34 declaration: declaration-specifiers init-declarator-list SEMICOLON
   35            | declaration-specifiers

   36 declaration-specifiers: type-specifier
   37                       | type-specifier declaration-specifiers
   38                       | type-qualifier
   39                       | type-qualifier declaration-specifiers

   40 init-declarator-list: init-declarator
   41                     | init-declarator-list LO_COMMA init-declarator

   42 init-declarator: declarator
   43                | declarator RO_ASSIGN initializer

   44 initializer: assignment-expression
   45            | L_BRACE initializer-list R_BRACE

   46 initializer-list: initializer
   47                 | initializer-list LO_COMMA initializer

   48 expression: assignment-expression
   49           | expression LO_COMMA assignment-expression

   50 assignment-operator: RO_ASSIGN
   51                    | RO_AS_ADDEQ
   52                    | RO_AS_ANDEQ
   53                    | RO_AS_DIVEQ
   54                    | RO_AS_MULEQ
   55                    | RO_AS_OREQ
   56                    | RO_AS_SFTL_EQ
   57                    | RO_AS_SFTR_EQ
   58                    | RO_AS_SUBEQ

   59 assignment-expression: conditional-expression
   60                      | unary-expression assignment-operator assignment-expression

   61 conditional-expression: logical-OR-expression
   62                       | logical-OR-expression RO_TRI_QUES expression RO_TRI_COLON conditional-expression

   63 logical-OR-expression: logical-AND-expression
   64                      | logical-OR-expression LO_LGC_OR logical-AND-expression

   65 logical-AND-expression: inclusive-OR-expression
   66                       | logical-AND-expression LO_LGC_AND inclusive-OR-expression

   67 inclusive-OR-expression: exclusive-OR-expression
   68                        | inclusive-OR-expression LO_BIT_OR exclusive-OR-expression

   69 exclusive-OR-expression: AND-expression
   70                        | exclusive-OR-expression LO_BIT_XOR AND-expression

   71 AND-expression: equality-expression
   72               | AND-expression LO_BIT_AND equality-expression

   73 equality-expression: relational-expression
   74                    | equality-expression LO_EQ relational-expression
   75                    | equality-expression LO_N_EQ relational-expression

   76 relational-expression: shift-expression
   77                      | relational-expression LO_REL_L shift-expression
   78                      | relational-expression LO_REL_G shift-expression
   79                      | relational-expression LO_REL_LE shift-expression
   80                      | relational-expression LO_REL_GE shift-expression

   81 shift-expression: additive-expression
   82                 | shift-expression LO_SFT_L additive-expression
   83                 | shift-expression LO_SFT_R additive-expression

   84 additive-expression: multiplicative-expression
   85                    | additive-expression LO_ADD multiplicative-expression
   86                    | additive-expression LO_SUB multiplicative-expression

   87 multiplicative-expression: cast-expression
   88                          | multiplicative-expression LO_MUL cast-expression
   89                          | multiplicative-expression LO_DIV cast-expression
   90                          | multiplicative-expression LO_MOD cast-expression

   91 cast-expression: unary-expression
   92                | L_BRACKET type-specifier R_BRACKET cast-expression

   93 unary-operator: LO_BIT_AND
   94               | LO_MUL
   95               | LO_ADD
   96               | LO_SUB
   97               | LO_BIT_NOT
   98               | LO_LGC_NOT

   99 unary-expression: postfix-expression
  100                 | LO_AS_SELFINC unary-expression
  101                 | LO_AS_SELFDEC unary-expression
  102                 | unary-operator cast-expression

  103 postfix-expression: primary-expression
  104                   | postfix-expression L_SQ_BRACKET expression R_SQ_BRACKET
  105                   | postfix-expression LO_MEMBER IDENTIFIER
  106                   | postfix-expression LO_PT_MEMBER IDENTIFIER
  107                   | postfix-expression LO_AS_SELFINC
  108                   | postfix-expression LO_AS_SELFDEC
  109                   | postfix-expression L_BRACKET argument-expression-list R_BRACKET
  110                   | postfix-expression L_BRACKET R_BRACKET

  111 argument-expression-list: assignment-expression
  112                         | argument-expression-list LO_COMMA assignment-expression

  113 primary-expression: IDENTIFIER
  114                   | constant
  115                   | L_BRACKET expression R_BRACKET

  116 constant: INTEGER
  117         | STRING

  118 type-specifier: T_INT
  119               | T_CHAR
  120               | T_BOOL
  121               | T_VOID
  122               | T_SIGNED
  123               | T_UNSIGNED
  124               | struct-or-union-specifier

  125 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE struct-declaration-list R_BRACE
  126                          | struct-or-union L_BRACE struct-declaration-list R_BRACE
  127                          | struct-or-union IDENTIFIER

  128 struct-or-union: KW_STRUCT
  129                | KW_UNION

  130 struct-declaration-list: struct-declaration
  131                        | struct-declaration-list struct-declaration

  132 struct-declaration: specifier-qualifier-list struct-declarator-list SEMICOLON

  133 specifier-qualifier-list: type-specifier
  134                         | type-specifier specifier-qualifier-list
  135                         | type-qualifier
  136                         | type-qualifier specifier-qualifier-list

  137 struct-declarator-list: struct-declarator
  138                       | struct-declarator-list LO_COMMA struct-declarator

  139 struct-declarator: declarator
  140                  | declarator COLON INTEGER

  141 declarator: pointer declarator
  142           | direct-declarator

  143 direct-declarator: IDENTIFIER
  144                  | direct-declarator L_SQ_BRACKET assignment-expression R_SQ_BRACKET
  145                  | direct-declarator L_BRACKET parameter-type-list R_BRACKET
  146                  | direct-declarator L_BRACKET R_BRACKET

  147 parameter-type-list: parameter-declaration
  148                    | parameter-type-list LO_COMMA parameter-declaration

  149 parameter-declaration: declaration-specifiers declarator
  150                      | declaration-specifiers

  151 pointer: LO_MUL

  152 type-qualifier: Q_CONST


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 119
T_INT (259) 118
T_STRING (260)
T_BOOL (261) 120
T_VOID (262) 121
SCANF (263) 15
PRINTF (264) 14
LO_EQ (265) 74
LO_N_EQ (266) 75
RO_AS_ADDEQ (267) 51
RO_AS_SUBEQ (268) 58
RO_AS_MULEQ (269) 54
RO_AS_DIVEQ (270) 53
RO_AS_SFTL_EQ (271) 56
RO_AS_SFTR_EQ (272) 57
RO_AS_ANDEQ (273) 52
RO_AS_OREQ (274) 55
LO_AS_SELFINC (275) 100 107
LO_AS_SELFDEC (276) 101 108
RO_TRI_QUES (277) 62
RO_TRI_COLON (278) 62
LO_MUL (279) 88 94 151
LO_DIV (280) 89
LO_ADD (281) 85 95
LO_SUB (282) 86 96
LO_BIT_NOT (283) 97
LO_MOD (284) 90
LO_SFT_L (285) 82
LO_LGC_OR (286) 64
LO_LGC_AND (287) 66
LO_SFT_R (288) 83
LO_LGC_NOT (289) 98
LO_BIT_XOR (290) 70
LO_BIT_AND (291) 72 93
LO_BIT_OR (292) 68
RO_ASSIGN (293) 43 50
LO_COMMA (294) 14 15 41 47 49 112 138 148
KW_CONTINUE (295) 17
KW_BREAK (296) 16
KW_IF (297) 24 25
KW_FOR (298) 22 23
KW_RET (299) 18 19
KW_STRUCT (300) 128
KW_WHILE (301) 20 21
KW_DO (302) 21
KW_ELSE (303) 25
T_SIGNED (304) 122
T_UNSIGNED (305) 123
Q_CONST (306) 152
SEMICOLON (307) 6 14 15 16 17 18 19 22 23 26 27 34 132
COLON (308) 140
LO_REL_L (309) 77
LO_REL_G (310) 78
LO_REL_LE (311) 79
LO_REL_GE (312) 80
KW_UNION (313) 129
IDENTIFIER (314) 105 106 113 125 127 143
INTEGER (315) 116 140
CHAR (316)
BOOL (317)
STRING (318) 14 15 117
LO_MEMBER (319) 105
LO_PT_MEMBER (320) 106
L_BRACKET (321) 14 15 20 21 22 23 24 25 92 109 110 115 145 146
R_BRACKET (322) 14 15 20 21 22 23 24 25 92 109 110 115 145 146
L_SQ_BRACKET (323) 104 144
R_SQ_BRACKET (324) 104 144
L_BRACE (325) 28 29 45 125 126
R_BRACE (326) 28 29 45 125 126


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
translation-unit (73)
    on left: 1 2, on right: 0 2
external-declaration (74)
    on left: 3 4, on right: 1 2
function-definition (75)
    on left: 5, on right: 3
statement (76)
    on left: 6 7 8 9 10 11 12 13, on right: 20 21 22 23 24 25 33
io-statement (77)
    on left: 14 15, on right: 13
jump-statement (78)
    on left: 16 17 18 19, on right: 12
iteration-statement (79)
    on left: 20 21 22 23, on right: 11
selection-statement (80)
    on left: 24 25, on right: 10
expression-statement (81)
    on left: 26 27, on right: 9
compound-statement (82)
    on left: 28 29, on right: 5 8
block-item-list (83)
    on left: 30 31, on right: 28 31
block-item (84)
    on left: 32 33, on right: 30 31
declaration (85)
    on left: 34 35, on right: 4 7 32
declaration-specifiers (86)
    on left: 36 37 38 39, on right: 5 34 35 37 39 149 150
init-declarator-list (87)
    on left: 40 41, on right: 34 41
init-declarator (88)
    on left: 42 43, on right: 40 41
initializer (89)
    on left: 44 45, on right: 43 46 47
initializer-list (90)
    on left: 46 47, on right: 45 47
expression (91)
    on left: 48 49, on right: 20 21 23 24 25 27 49 62 104 115
assignment-operator (92)
    on left: 50 51 52 53 54 55 56 57 58, on right: 60
assignment-expression (93)
    on left: 59 60, on right: 14 19 44 48 49 60 111 112 144
conditional-expression (94)
    on left: 61 62, on right: 59 62
logical-OR-expression (95)
    on left: 63 64, on right: 61 62 64
logical-AND-expression (96)
    on left: 65 66, on right: 63 64 66
inclusive-OR-expression (97)
    on left: 67 68, on right: 65 66 68
exclusive-OR-expression (98)
    on left: 69 70, on right: 67 68 70
AND-expression (99)
    on left: 71 72, on right: 69 70 72
equality-expression (100)
    on left: 73 74 75, on right: 71 72 74 75
relational-expression (101)
    on left: 76 77 78 79 80, on right: 73 74 75 77 78 79 80
shift-expression (102)
    on left: 81 82 83, on right: 76 77 78 79 80 82 83
additive-expression (103)
    on left: 84 85 86, on right: 81 82 83 85 86
multiplicative-expression (104)
    on left: 87 88 89 90, on right: 84 85 86 88 89 90
cast-expression (105)
    on left: 91 92, on right: 87 88 89 90 92 102
unary-operator (106)
    on left: 93 94 95 96 97 98, on right: 102
unary-expression (107)
    on left: 99 100 101 102, on right: 15 60 91 100 101
postfix-expression (108)
    on left: 103 104 105 106 107 108 109 110, on right: 99 104 105
    106 107 108 109 110
argument-expression-list (109)
    on left: 111 112, on right: 109 112
primary-expression (110)
    on left: 113 114 115, on right: 103
constant (111)
    on left: 116 117, on right: 114
type-specifier (112)
    on left: 118 119 120 121 122 123 124, on right: 36 37 92 133 134
struct-or-union-specifier (113)
    on left: 125 126 127, on right: 124
struct-or-union (114)
    on left: 128 129, on right: 125 126 127
struct-declaration-list (115)
    on left: 130 131, on right: 125 126 131
struct-declaration (116)
    on left: 132, on right: 130 131
specifier-qualifier-list (117)
    on left: 133 134 135 136, on right: 132 134 136
struct-declarator-list (118)
    on left: 137 138, on right: 132 138
struct-declarator (119)
    on left: 139 140, on right: 137 138
declarator (120)
    on left: 141 142, on right: 5 42 43 139 140 141 149
direct-declarator (121)
    on left: 143 144 145 146, on right: 142 144 145 146
parameter-type-list (122)
    on left: 147 148, on right: 145 148
parameter-declaration (123)
    on left: 149 150, on right: 147 148
pointer (124)
    on left: 151, on right: 141
type-qualifier (125)
    on left: 152, on right: 38 39 135 136


State 0

    0 $accept: . translation-unit $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9

    translation-unit           go to state 10
    external-declaration       go to state 11
    function-definition        go to state 12
    declaration                go to state 13
    declaration-specifiers     go to state 14
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 1

  119 type-specifier: T_CHAR .

    $default  reduce using rule 119 (type-specifier)


State 2

  118 type-specifier: T_INT .

    $default  reduce using rule 118 (type-specifier)


State 3

  120 type-specifier: T_BOOL .

    $default  reduce using rule 120 (type-specifier)


State 4

  121 type-specifier: T_VOID .

    $default  reduce using rule 121 (type-specifier)


State 5

  128 struct-or-union: KW_STRUCT .

    $default  reduce using rule 128 (struct-or-union)


State 6

  122 type-specifier: T_SIGNED .

    $default  reduce using rule 122 (type-specifier)


State 7

  123 type-specifier: T_UNSIGNED .

    $default  reduce using rule 123 (type-specifier)


State 8

  152 type-qualifier: Q_CONST .

    $default  reduce using rule 152 (type-qualifier)


State 9

  129 struct-or-union: KW_UNION .

    $default  reduce using rule 129 (struct-or-union)


State 10

    0 $accept: translation-unit . $end
    2 translation-unit: translation-unit . external-declaration

    $end        shift, and go to state 19
    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9

    external-declaration       go to state 20
    function-definition        go to state 12
    declaration                go to state 13
    declaration-specifiers     go to state 14
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 11

    1 translation-unit: external-declaration .

    $default  reduce using rule 1 (translation-unit)


State 12

    3 external-declaration: function-definition .

    $default  reduce using rule 3 (external-declaration)


State 13

    4 external-declaration: declaration .

    $default  reduce using rule 4 (external-declaration)


State 14

    5 function-definition: declaration-specifiers . declarator compound-statement
   34 declaration: declaration-specifiers . init-declarator-list SEMICOLON
   35            | declaration-specifiers .

    LO_MUL      shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    $default  reduce using rule 35 (declaration)

    init-declarator-list  go to state 23
    init-declarator       go to state 24
    declarator            go to state 25
    direct-declarator     go to state 26
    pointer               go to state 27


State 15

   36 declaration-specifiers: type-specifier .
   37                       | type-specifier . declaration-specifiers

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9

    T_CHAR      [reduce using rule 36 (declaration-specifiers)]
    T_INT       [reduce using rule 36 (declaration-specifiers)]
    T_BOOL      [reduce using rule 36 (declaration-specifiers)]
    T_VOID      [reduce using rule 36 (declaration-specifiers)]
    KW_STRUCT   [reduce using rule 36 (declaration-specifiers)]
    T_SIGNED    [reduce using rule 36 (declaration-specifiers)]
    T_UNSIGNED  [reduce using rule 36 (declaration-specifiers)]
    Q_CONST     [reduce using rule 36 (declaration-specifiers)]
    KW_UNION    [reduce using rule 36 (declaration-specifiers)]
    $default    reduce using rule 36 (declaration-specifiers)

    declaration-specifiers     go to state 28
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 16

  124 type-specifier: struct-or-union-specifier .

    $default  reduce using rule 124 (type-specifier)


State 17

  125 struct-or-union-specifier: struct-or-union . IDENTIFIER L_BRACE struct-declaration-list R_BRACE
  126                          | struct-or-union . L_BRACE struct-declaration-list R_BRACE
  127                          | struct-or-union . IDENTIFIER

    IDENTIFIER  shift, and go to state 29
    L_BRACE     shift, and go to state 30


State 18

   38 declaration-specifiers: type-qualifier .
   39                       | type-qualifier . declaration-specifiers

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9

    T_CHAR      [reduce using rule 38 (declaration-specifiers)]
    T_INT       [reduce using rule 38 (declaration-specifiers)]
    T_BOOL      [reduce using rule 38 (declaration-specifiers)]
    T_VOID      [reduce using rule 38 (declaration-specifiers)]
    KW_STRUCT   [reduce using rule 38 (declaration-specifiers)]
    T_SIGNED    [reduce using rule 38 (declaration-specifiers)]
    T_UNSIGNED  [reduce using rule 38 (declaration-specifiers)]
    Q_CONST     [reduce using rule 38 (declaration-specifiers)]
    KW_UNION    [reduce using rule 38 (declaration-specifiers)]
    $default    reduce using rule 38 (declaration-specifiers)

    declaration-specifiers     go to state 31
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 19

    0 $accept: translation-unit $end .

    $default  accept


State 20

    2 translation-unit: translation-unit external-declaration .

    $default  reduce using rule 2 (translation-unit)


State 21

  151 pointer: LO_MUL .

    $default  reduce using rule 151 (pointer)


State 22

  143 direct-declarator: IDENTIFIER .

    $default  reduce using rule 143 (direct-declarator)


State 23

   34 declaration: declaration-specifiers init-declarator-list . SEMICOLON
   41 init-declarator-list: init-declarator-list . LO_COMMA init-declarator

    LO_COMMA   shift, and go to state 32
    SEMICOLON  shift, and go to state 33


State 24

   40 init-declarator-list: init-declarator .

    $default  reduce using rule 40 (init-declarator-list)


State 25

    5 function-definition: declaration-specifiers declarator . compound-statement
   42 init-declarator: declarator .
   43                | declarator . RO_ASSIGN initializer

    RO_ASSIGN  shift, and go to state 34
    L_BRACE    shift, and go to state 35

    $default  reduce using rule 42 (init-declarator)

    compound-statement  go to state 36


State 26

  142 declarator: direct-declarator .
  144 direct-declarator: direct-declarator . L_SQ_BRACKET assignment-expression R_SQ_BRACKET
  145                  | direct-declarator . L_BRACKET parameter-type-list R_BRACKET
  146                  | direct-declarator . L_BRACKET R_BRACKET

    L_BRACKET     shift, and go to state 37
    L_SQ_BRACKET  shift, and go to state 38

    $default  reduce using rule 142 (declarator)


State 27

  141 declarator: pointer . declarator

    LO_MUL      shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    declarator         go to state 39
    direct-declarator  go to state 26
    pointer            go to state 27


State 28

   37 declaration-specifiers: type-specifier declaration-specifiers .

    $default  reduce using rule 37 (declaration-specifiers)


State 29

  125 struct-or-union-specifier: struct-or-union IDENTIFIER . L_BRACE struct-declaration-list R_BRACE
  127                          | struct-or-union IDENTIFIER .

    L_BRACE  shift, and go to state 40

    L_BRACE   [reduce using rule 127 (struct-or-union-specifier)]
    $default  reduce using rule 127 (struct-or-union-specifier)


State 30

  126 struct-or-union-specifier: struct-or-union L_BRACE . struct-declaration-list R_BRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    struct-declaration-list    go to state 42
    struct-declaration         go to state 43
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 31

   39 declaration-specifiers: type-qualifier declaration-specifiers .

    $default  reduce using rule 39 (declaration-specifiers)


State 32

   41 init-declarator-list: init-declarator-list LO_COMMA . init-declarator

    LO_MUL      shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    init-declarator    go to state 46
    declarator         go to state 47
    direct-declarator  go to state 26
    pointer            go to state 27


State 33

   34 declaration: declaration-specifiers init-declarator-list SEMICOLON .

    $default  reduce using rule 34 (declaration)


State 34

   43 init-declarator: declarator RO_ASSIGN . initializer

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 60

    initializer                go to state 61
    assignment-expression      go to state 62
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 35

   28 compound-statement: L_BRACE . block-item-list R_BRACE
   29                   | L_BRACE . R_BRACE

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    T_VOID         shift, and go to state 4
    SCANF          shift, and go to state 80
    PRINTF         shift, and go to state 81
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 82
    KW_BREAK       shift, and go to state 83
    KW_IF          shift, and go to state 84
    KW_FOR         shift, and go to state 85
    KW_RET         shift, and go to state 86
    KW_STRUCT      shift, and go to state 5
    KW_WHILE       shift, and go to state 87
    KW_DO          shift, and go to state 88
    T_SIGNED       shift, and go to state 6
    T_UNSIGNED     shift, and go to state 7
    Q_CONST        shift, and go to state 8
    SEMICOLON      shift, and go to state 89
    KW_UNION       shift, and go to state 9
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35
    R_BRACE        shift, and go to state 90

    statement                  go to state 91
    io-statement               go to state 92
    jump-statement             go to state 93
    iteration-statement        go to state 94
    selection-statement        go to state 95
    expression-statement       go to state 96
    compound-statement         go to state 97
    block-item-list            go to state 98
    block-item                 go to state 99
    declaration                go to state 100
    declaration-specifiers     go to state 101
    expression                 go to state 102
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 36

    5 function-definition: declaration-specifiers declarator compound-statement .

    $default  reduce using rule 5 (function-definition)


State 37

  145 direct-declarator: direct-declarator L_BRACKET . parameter-type-list R_BRACKET
  146                  | direct-declarator L_BRACKET . R_BRACKET

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9
    R_BRACKET   shift, and go to state 104

    declaration-specifiers     go to state 105
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    parameter-type-list        go to state 106
    parameter-declaration      go to state 107
    type-qualifier             go to state 18


State 38

  144 direct-declarator: direct-declarator L_SQ_BRACKET . assignment-expression R_SQ_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 108
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 39

  141 declarator: pointer declarator .

    $default  reduce using rule 141 (declarator)


State 40

  125 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE . struct-declaration-list R_BRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    struct-declaration-list    go to state 109
    struct-declaration         go to state 43
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 41

  133 specifier-qualifier-list: type-specifier .
  134                         | type-specifier . specifier-qualifier-list

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9

    $default  reduce using rule 133 (specifier-qualifier-list)

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    specifier-qualifier-list   go to state 110
    type-qualifier             go to state 45


State 42

  126 struct-or-union-specifier: struct-or-union L_BRACE struct-declaration-list . R_BRACE
  131 struct-declaration-list: struct-declaration-list . struct-declaration

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9
    R_BRACE     shift, and go to state 111

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    struct-declaration         go to state 112
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 43

  130 struct-declaration-list: struct-declaration .

    $default  reduce using rule 130 (struct-declaration-list)


State 44

  132 struct-declaration: specifier-qualifier-list . struct-declarator-list SEMICOLON

    LO_MUL      shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    struct-declarator-list  go to state 113
    struct-declarator       go to state 114
    declarator              go to state 115
    direct-declarator       go to state 26
    pointer                 go to state 27


State 45

  135 specifier-qualifier-list: type-qualifier .
  136                         | type-qualifier . specifier-qualifier-list

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9

    $default  reduce using rule 135 (specifier-qualifier-list)

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    specifier-qualifier-list   go to state 116
    type-qualifier             go to state 45


State 46

   41 init-declarator-list: init-declarator-list LO_COMMA init-declarator .

    $default  reduce using rule 41 (init-declarator-list)


State 47

   42 init-declarator: declarator .
   43                | declarator . RO_ASSIGN initializer

    RO_ASSIGN  shift, and go to state 34

    $default  reduce using rule 42 (init-declarator)


State 48

  100 unary-expression: LO_AS_SELFINC . unary-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 117

    unary-operator      go to state 75
    unary-expression    go to state 118
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 49

  101 unary-expression: LO_AS_SELFDEC . unary-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 117

    unary-operator      go to state 75
    unary-expression    go to state 119
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 50

   94 unary-operator: LO_MUL .

    $default  reduce using rule 94 (unary-operator)


State 51

   95 unary-operator: LO_ADD .

    $default  reduce using rule 95 (unary-operator)


State 52

   96 unary-operator: LO_SUB .

    $default  reduce using rule 96 (unary-operator)


State 53

   97 unary-operator: LO_BIT_NOT .

    $default  reduce using rule 97 (unary-operator)


State 54

   98 unary-operator: LO_LGC_NOT .

    $default  reduce using rule 98 (unary-operator)


State 55

   93 unary-operator: LO_BIT_AND .

    $default  reduce using rule 93 (unary-operator)


State 56

  113 primary-expression: IDENTIFIER .

    $default  reduce using rule 113 (primary-expression)


State 57

  116 constant: INTEGER .

    $default  reduce using rule 116 (constant)


State 58

  117 constant: STRING .

    $default  reduce using rule 117 (constant)


State 59

   92 cast-expression: L_BRACKET . type-specifier R_BRACKET cast-expression
  115 primary-expression: L_BRACKET . expression R_BRACKET

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    T_VOID         shift, and go to state 4
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_STRUCT      shift, and go to state 5
    T_SIGNED       shift, and go to state 6
    T_UNSIGNED     shift, and go to state 7
    KW_UNION       shift, and go to state 9
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 120
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 121
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17


State 60

   45 initializer: L_BRACE . initializer-list R_BRACE

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 60

    initializer                go to state 122
    initializer-list           go to state 123
    assignment-expression      go to state 62
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 61

   43 init-declarator: declarator RO_ASSIGN initializer .

    $default  reduce using rule 43 (init-declarator)


State 62

   44 initializer: assignment-expression .

    $default  reduce using rule 44 (initializer)


State 63

   59 assignment-expression: conditional-expression .

    $default  reduce using rule 59 (assignment-expression)


State 64

   61 conditional-expression: logical-OR-expression .
   62                       | logical-OR-expression . RO_TRI_QUES expression RO_TRI_COLON conditional-expression
   64 logical-OR-expression: logical-OR-expression . LO_LGC_OR logical-AND-expression

    RO_TRI_QUES  shift, and go to state 124
    LO_LGC_OR    shift, and go to state 125

    $default  reduce using rule 61 (conditional-expression)


State 65

   63 logical-OR-expression: logical-AND-expression .
   66 logical-AND-expression: logical-AND-expression . LO_LGC_AND inclusive-OR-expression

    LO_LGC_AND  shift, and go to state 126

    $default  reduce using rule 63 (logical-OR-expression)


State 66

   65 logical-AND-expression: inclusive-OR-expression .
   68 inclusive-OR-expression: inclusive-OR-expression . LO_BIT_OR exclusive-OR-expression

    LO_BIT_OR  shift, and go to state 127

    $default  reduce using rule 65 (logical-AND-expression)


State 67

   67 inclusive-OR-expression: exclusive-OR-expression .
   70 exclusive-OR-expression: exclusive-OR-expression . LO_BIT_XOR AND-expression

    LO_BIT_XOR  shift, and go to state 128

    $default  reduce using rule 67 (inclusive-OR-expression)


State 68

   69 exclusive-OR-expression: AND-expression .
   72 AND-expression: AND-expression . LO_BIT_AND equality-expression

    LO_BIT_AND  shift, and go to state 129

    $default  reduce using rule 69 (exclusive-OR-expression)


State 69

   71 AND-expression: equality-expression .
   74 equality-expression: equality-expression . LO_EQ relational-expression
   75                    | equality-expression . LO_N_EQ relational-expression

    LO_EQ    shift, and go to state 130
    LO_N_EQ  shift, and go to state 131

    $default  reduce using rule 71 (AND-expression)


State 70

   73 equality-expression: relational-expression .
   77 relational-expression: relational-expression . LO_REL_L shift-expression
   78                      | relational-expression . LO_REL_G shift-expression
   79                      | relational-expression . LO_REL_LE shift-expression
   80                      | relational-expression . LO_REL_GE shift-expression

    LO_REL_L   shift, and go to state 132
    LO_REL_G   shift, and go to state 133
    LO_REL_LE  shift, and go to state 134
    LO_REL_GE  shift, and go to state 135

    $default  reduce using rule 73 (equality-expression)


State 71

   76 relational-expression: shift-expression .
   82 shift-expression: shift-expression . LO_SFT_L additive-expression
   83                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 136
    LO_SFT_R  shift, and go to state 137

    $default  reduce using rule 76 (relational-expression)


State 72

   81 shift-expression: additive-expression .
   85 additive-expression: additive-expression . LO_ADD multiplicative-expression
   86                    | additive-expression . LO_SUB multiplicative-expression

    LO_ADD  shift, and go to state 138
    LO_SUB  shift, and go to state 139

    $default  reduce using rule 81 (shift-expression)


State 73

   84 additive-expression: multiplicative-expression .
   88 multiplicative-expression: multiplicative-expression . LO_MUL cast-expression
   89                          | multiplicative-expression . LO_DIV cast-expression
   90                          | multiplicative-expression . LO_MOD cast-expression

    LO_MUL  shift, and go to state 140
    LO_DIV  shift, and go to state 141
    LO_MOD  shift, and go to state 142

    $default  reduce using rule 84 (additive-expression)


State 74

   87 multiplicative-expression: cast-expression .

    $default  reduce using rule 87 (multiplicative-expression)


State 75

  102 unary-expression: unary-operator . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 143
    unary-operator      go to state 75
    unary-expression    go to state 144
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 76

   60 assignment-expression: unary-expression . assignment-operator assignment-expression
   91 cast-expression: unary-expression .

    RO_AS_ADDEQ    shift, and go to state 145
    RO_AS_SUBEQ    shift, and go to state 146
    RO_AS_MULEQ    shift, and go to state 147
    RO_AS_DIVEQ    shift, and go to state 148
    RO_AS_SFTL_EQ  shift, and go to state 149
    RO_AS_SFTR_EQ  shift, and go to state 150
    RO_AS_ANDEQ    shift, and go to state 151
    RO_AS_OREQ     shift, and go to state 152
    RO_ASSIGN      shift, and go to state 153

    $default  reduce using rule 91 (cast-expression)

    assignment-operator  go to state 154


State 77

   99 unary-expression: postfix-expression .
  104 postfix-expression: postfix-expression . L_SQ_BRACKET expression R_SQ_BRACKET
  105                   | postfix-expression . LO_MEMBER IDENTIFIER
  106                   | postfix-expression . LO_PT_MEMBER IDENTIFIER
  107                   | postfix-expression . LO_AS_SELFINC
  108                   | postfix-expression . LO_AS_SELFDEC
  109                   | postfix-expression . L_BRACKET argument-expression-list R_BRACKET
  110                   | postfix-expression . L_BRACKET R_BRACKET

    LO_AS_SELFINC  shift, and go to state 155
    LO_AS_SELFDEC  shift, and go to state 156
    LO_MEMBER      shift, and go to state 157
    LO_PT_MEMBER   shift, and go to state 158
    L_BRACKET      shift, and go to state 159
    L_SQ_BRACKET   shift, and go to state 160

    $default  reduce using rule 99 (unary-expression)


State 78

  103 postfix-expression: primary-expression .

    $default  reduce using rule 103 (postfix-expression)


State 79

  114 primary-expression: constant .

    $default  reduce using rule 114 (primary-expression)


State 80

   15 io-statement: SCANF . L_BRACKET STRING LO_COMMA unary-expression R_BRACKET SEMICOLON

    L_BRACKET  shift, and go to state 161


State 81

   14 io-statement: PRINTF . L_BRACKET STRING LO_COMMA assignment-expression R_BRACKET SEMICOLON

    L_BRACKET  shift, and go to state 162


State 82

   17 jump-statement: KW_CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 163


State 83

   16 jump-statement: KW_BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 164


State 84

   24 selection-statement: KW_IF . L_BRACKET expression R_BRACKET statement
   25                    | KW_IF . L_BRACKET expression R_BRACKET statement KW_ELSE statement

    L_BRACKET  shift, and go to state 165


State 85

   22 iteration-statement: KW_FOR . L_BRACKET SEMICOLON SEMICOLON R_BRACKET statement
   23                    | KW_FOR . L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET statement

    L_BRACKET  shift, and go to state 166


State 86

   18 jump-statement: KW_RET . SEMICOLON
   19               | KW_RET . assignment-expression SEMICOLON

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    SEMICOLON      shift, and go to state 167
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 168
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 87

   20 iteration-statement: KW_WHILE . L_BRACKET expression R_BRACKET statement

    L_BRACKET  shift, and go to state 169


State 88

   21 iteration-statement: KW_DO . statement KW_WHILE L_BRACKET expression R_BRACKET

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    T_VOID         shift, and go to state 4
    SCANF          shift, and go to state 80
    PRINTF         shift, and go to state 81
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 82
    KW_BREAK       shift, and go to state 83
    KW_IF          shift, and go to state 84
    KW_FOR         shift, and go to state 85
    KW_RET         shift, and go to state 86
    KW_STRUCT      shift, and go to state 5
    KW_WHILE       shift, and go to state 87
    KW_DO          shift, and go to state 88
    T_SIGNED       shift, and go to state 6
    T_UNSIGNED     shift, and go to state 7
    Q_CONST        shift, and go to state 8
    SEMICOLON      shift, and go to state 89
    KW_UNION       shift, and go to state 9
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 170
    io-statement               go to state 92
    jump-statement             go to state 93
    iteration-statement        go to state 94
    selection-statement        go to state 95
    expression-statement       go to state 96
    compound-statement         go to state 97
    declaration                go to state 171
    declaration-specifiers     go to state 101
    expression                 go to state 102
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 89

    6 statement: SEMICOLON .
   26 expression-statement: SEMICOLON .

    T_CHAR         reduce using rule 6 (statement)
    T_CHAR         [reduce using rule 26 (expression-statement)]
    T_INT          reduce using rule 6 (statement)
    T_INT          [reduce using rule 26 (expression-statement)]
    T_BOOL         reduce using rule 6 (statement)
    T_BOOL         [reduce using rule 26 (expression-statement)]
    T_VOID         reduce using rule 6 (statement)
    T_VOID         [reduce using rule 26 (expression-statement)]
    SCANF          reduce using rule 6 (statement)
    SCANF          [reduce using rule 26 (expression-statement)]
    PRINTF         reduce using rule 6 (statement)
    PRINTF         [reduce using rule 26 (expression-statement)]
    LO_AS_SELFINC  reduce using rule 6 (statement)
    LO_AS_SELFINC  [reduce using rule 26 (expression-statement)]
    LO_AS_SELFDEC  reduce using rule 6 (statement)
    LO_AS_SELFDEC  [reduce using rule 26 (expression-statement)]
    LO_MUL         reduce using rule 6 (statement)
    LO_MUL         [reduce using rule 26 (expression-statement)]
    LO_ADD         reduce using rule 6 (statement)
    LO_ADD         [reduce using rule 26 (expression-statement)]
    LO_SUB         reduce using rule 6 (statement)
    LO_SUB         [reduce using rule 26 (expression-statement)]
    LO_BIT_NOT     reduce using rule 6 (statement)
    LO_BIT_NOT     [reduce using rule 26 (expression-statement)]
    LO_LGC_NOT     reduce using rule 6 (statement)
    LO_LGC_NOT     [reduce using rule 26 (expression-statement)]
    LO_BIT_AND     reduce using rule 6 (statement)
    LO_BIT_AND     [reduce using rule 26 (expression-statement)]
    KW_CONTINUE    reduce using rule 6 (statement)
    KW_CONTINUE    [reduce using rule 26 (expression-statement)]
    KW_BREAK       reduce using rule 6 (statement)
    KW_BREAK       [reduce using rule 26 (expression-statement)]
    KW_IF          reduce using rule 6 (statement)
    KW_IF          [reduce using rule 26 (expression-statement)]
    KW_FOR         reduce using rule 6 (statement)
    KW_FOR         [reduce using rule 26 (expression-statement)]
    KW_RET         reduce using rule 6 (statement)
    KW_RET         [reduce using rule 26 (expression-statement)]
    KW_STRUCT      reduce using rule 6 (statement)
    KW_STRUCT      [reduce using rule 26 (expression-statement)]
    KW_WHILE       reduce using rule 6 (statement)
    KW_WHILE       [reduce using rule 26 (expression-statement)]
    KW_DO          reduce using rule 6 (statement)
    KW_DO          [reduce using rule 26 (expression-statement)]
    KW_ELSE        reduce using rule 6 (statement)
    KW_ELSE        [reduce using rule 26 (expression-statement)]
    T_SIGNED       reduce using rule 6 (statement)
    T_SIGNED       [reduce using rule 26 (expression-statement)]
    T_UNSIGNED     reduce using rule 6 (statement)
    T_UNSIGNED     [reduce using rule 26 (expression-statement)]
    Q_CONST        reduce using rule 6 (statement)
    Q_CONST        [reduce using rule 26 (expression-statement)]
    SEMICOLON      reduce using rule 6 (statement)
    SEMICOLON      [reduce using rule 26 (expression-statement)]
    KW_UNION       reduce using rule 6 (statement)
    KW_UNION       [reduce using rule 26 (expression-statement)]
    IDENTIFIER     reduce using rule 6 (statement)
    IDENTIFIER     [reduce using rule 26 (expression-statement)]
    INTEGER        reduce using rule 6 (statement)
    INTEGER        [reduce using rule 26 (expression-statement)]
    STRING         reduce using rule 6 (statement)
    STRING         [reduce using rule 26 (expression-statement)]
    L_BRACKET      reduce using rule 6 (statement)
    L_BRACKET      [reduce using rule 26 (expression-statement)]
    L_BRACE        reduce using rule 6 (statement)
    L_BRACE        [reduce using rule 26 (expression-statement)]
    R_BRACE        reduce using rule 6 (statement)
    R_BRACE        [reduce using rule 26 (expression-statement)]
    $default       reduce using rule 6 (statement)


State 90

   29 compound-statement: L_BRACE R_BRACE .

    $default  reduce using rule 29 (compound-statement)


State 91

   33 block-item: statement .

    $default  reduce using rule 33 (block-item)


State 92

   13 statement: io-statement .

    $default  reduce using rule 13 (statement)


State 93

   12 statement: jump-statement .

    $default  reduce using rule 12 (statement)


State 94

   11 statement: iteration-statement .

    $default  reduce using rule 11 (statement)


State 95

   10 statement: selection-statement .

    $default  reduce using rule 10 (statement)


State 96

    9 statement: expression-statement .

    $default  reduce using rule 9 (statement)


State 97

    8 statement: compound-statement .

    $default  reduce using rule 8 (statement)


State 98

   28 compound-statement: L_BRACE block-item-list . R_BRACE
   31 block-item-list: block-item-list . block-item

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    T_VOID         shift, and go to state 4
    SCANF          shift, and go to state 80
    PRINTF         shift, and go to state 81
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 82
    KW_BREAK       shift, and go to state 83
    KW_IF          shift, and go to state 84
    KW_FOR         shift, and go to state 85
    KW_RET         shift, and go to state 86
    KW_STRUCT      shift, and go to state 5
    KW_WHILE       shift, and go to state 87
    KW_DO          shift, and go to state 88
    T_SIGNED       shift, and go to state 6
    T_UNSIGNED     shift, and go to state 7
    Q_CONST        shift, and go to state 8
    SEMICOLON      shift, and go to state 89
    KW_UNION       shift, and go to state 9
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35
    R_BRACE        shift, and go to state 172

    statement                  go to state 91
    io-statement               go to state 92
    jump-statement             go to state 93
    iteration-statement        go to state 94
    selection-statement        go to state 95
    expression-statement       go to state 96
    compound-statement         go to state 97
    block-item                 go to state 173
    declaration                go to state 100
    declaration-specifiers     go to state 101
    expression                 go to state 102
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 99

   30 block-item-list: block-item .

    $default  reduce using rule 30 (block-item-list)


State 100

    7 statement: declaration .
   32 block-item: declaration .

    T_CHAR         reduce using rule 7 (statement)
    T_CHAR         [reduce using rule 32 (block-item)]
    T_INT          reduce using rule 7 (statement)
    T_INT          [reduce using rule 32 (block-item)]
    T_BOOL         reduce using rule 7 (statement)
    T_BOOL         [reduce using rule 32 (block-item)]
    T_VOID         reduce using rule 7 (statement)
    T_VOID         [reduce using rule 32 (block-item)]
    SCANF          reduce using rule 7 (statement)
    SCANF          [reduce using rule 32 (block-item)]
    PRINTF         reduce using rule 7 (statement)
    PRINTF         [reduce using rule 32 (block-item)]
    LO_AS_SELFINC  reduce using rule 7 (statement)
    LO_AS_SELFINC  [reduce using rule 32 (block-item)]
    LO_AS_SELFDEC  reduce using rule 7 (statement)
    LO_AS_SELFDEC  [reduce using rule 32 (block-item)]
    LO_MUL         reduce using rule 7 (statement)
    LO_MUL         [reduce using rule 32 (block-item)]
    LO_ADD         reduce using rule 7 (statement)
    LO_ADD         [reduce using rule 32 (block-item)]
    LO_SUB         reduce using rule 7 (statement)
    LO_SUB         [reduce using rule 32 (block-item)]
    LO_BIT_NOT     reduce using rule 7 (statement)
    LO_BIT_NOT     [reduce using rule 32 (block-item)]
    LO_LGC_NOT     reduce using rule 7 (statement)
    LO_LGC_NOT     [reduce using rule 32 (block-item)]
    LO_BIT_AND     reduce using rule 7 (statement)
    LO_BIT_AND     [reduce using rule 32 (block-item)]
    KW_CONTINUE    reduce using rule 7 (statement)
    KW_CONTINUE    [reduce using rule 32 (block-item)]
    KW_BREAK       reduce using rule 7 (statement)
    KW_BREAK       [reduce using rule 32 (block-item)]
    KW_IF          reduce using rule 7 (statement)
    KW_IF          [reduce using rule 32 (block-item)]
    KW_FOR         reduce using rule 7 (statement)
    KW_FOR         [reduce using rule 32 (block-item)]
    KW_RET         reduce using rule 7 (statement)
    KW_RET         [reduce using rule 32 (block-item)]
    KW_STRUCT      reduce using rule 7 (statement)
    KW_STRUCT      [reduce using rule 32 (block-item)]
    KW_WHILE       reduce using rule 7 (statement)
    KW_WHILE       [reduce using rule 32 (block-item)]
    KW_DO          reduce using rule 7 (statement)
    KW_DO          [reduce using rule 32 (block-item)]
    T_SIGNED       reduce using rule 7 (statement)
    T_SIGNED       [reduce using rule 32 (block-item)]
    T_UNSIGNED     reduce using rule 7 (statement)
    T_UNSIGNED     [reduce using rule 32 (block-item)]
    Q_CONST        reduce using rule 7 (statement)
    Q_CONST        [reduce using rule 32 (block-item)]
    SEMICOLON      reduce using rule 7 (statement)
    SEMICOLON      [reduce using rule 32 (block-item)]
    KW_UNION       reduce using rule 7 (statement)
    KW_UNION       [reduce using rule 32 (block-item)]
    IDENTIFIER     reduce using rule 7 (statement)
    IDENTIFIER     [reduce using rule 32 (block-item)]
    INTEGER        reduce using rule 7 (statement)
    INTEGER        [reduce using rule 32 (block-item)]
    STRING         reduce using rule 7 (statement)
    STRING         [reduce using rule 32 (block-item)]
    L_BRACKET      reduce using rule 7 (statement)
    L_BRACKET      [reduce using rule 32 (block-item)]
    L_BRACE        reduce using rule 7 (statement)
    L_BRACE        [reduce using rule 32 (block-item)]
    R_BRACE        reduce using rule 7 (statement)
    R_BRACE        [reduce using rule 32 (block-item)]
    $default       reduce using rule 7 (statement)


State 101

   34 declaration: declaration-specifiers . init-declarator-list SEMICOLON
   35            | declaration-specifiers .

    LO_MUL      shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    LO_MUL      [reduce using rule 35 (declaration)]
    IDENTIFIER  [reduce using rule 35 (declaration)]
    $default    reduce using rule 35 (declaration)

    init-declarator-list  go to state 23
    init-declarator       go to state 24
    declarator            go to state 47
    direct-declarator     go to state 26
    pointer               go to state 27


State 102

   27 expression-statement: expression . SEMICOLON
   49 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 174
    SEMICOLON  shift, and go to state 175


State 103

   48 expression: assignment-expression .

    $default  reduce using rule 48 (expression)


State 104

  146 direct-declarator: direct-declarator L_BRACKET R_BRACKET .

    $default  reduce using rule 146 (direct-declarator)


State 105

  149 parameter-declaration: declaration-specifiers . declarator
  150                      | declaration-specifiers .

    LO_MUL      shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    $default  reduce using rule 150 (parameter-declaration)

    declarator         go to state 176
    direct-declarator  go to state 26
    pointer            go to state 27


State 106

  145 direct-declarator: direct-declarator L_BRACKET parameter-type-list . R_BRACKET
  148 parameter-type-list: parameter-type-list . LO_COMMA parameter-declaration

    LO_COMMA   shift, and go to state 177
    R_BRACKET  shift, and go to state 178


State 107

  147 parameter-type-list: parameter-declaration .

    $default  reduce using rule 147 (parameter-type-list)


State 108

  144 direct-declarator: direct-declarator L_SQ_BRACKET assignment-expression . R_SQ_BRACKET

    R_SQ_BRACKET  shift, and go to state 179


State 109

  125 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE struct-declaration-list . R_BRACE
  131 struct-declaration-list: struct-declaration-list . struct-declaration

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9
    R_BRACE     shift, and go to state 180

    type-specifier             go to state 41
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    struct-declaration         go to state 112
    specifier-qualifier-list   go to state 44
    type-qualifier             go to state 45


State 110

  134 specifier-qualifier-list: type-specifier specifier-qualifier-list .

    $default  reduce using rule 134 (specifier-qualifier-list)


State 111

  126 struct-or-union-specifier: struct-or-union L_BRACE struct-declaration-list R_BRACE .

    $default  reduce using rule 126 (struct-or-union-specifier)


State 112

  131 struct-declaration-list: struct-declaration-list struct-declaration .

    $default  reduce using rule 131 (struct-declaration-list)


State 113

  132 struct-declaration: specifier-qualifier-list struct-declarator-list . SEMICOLON
  138 struct-declarator-list: struct-declarator-list . LO_COMMA struct-declarator

    LO_COMMA   shift, and go to state 181
    SEMICOLON  shift, and go to state 182


State 114

  137 struct-declarator-list: struct-declarator .

    $default  reduce using rule 137 (struct-declarator-list)


State 115

  139 struct-declarator: declarator .
  140                  | declarator . COLON INTEGER

    COLON  shift, and go to state 183

    $default  reduce using rule 139 (struct-declarator)


State 116

  136 specifier-qualifier-list: type-qualifier specifier-qualifier-list .

    $default  reduce using rule 136 (specifier-qualifier-list)


State 117

  115 primary-expression: L_BRACKET . expression R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 120
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 118

  100 unary-expression: LO_AS_SELFINC unary-expression .

    $default  reduce using rule 100 (unary-expression)


State 119

  101 unary-expression: LO_AS_SELFDEC unary-expression .

    $default  reduce using rule 101 (unary-expression)


State 120

   49 expression: expression . LO_COMMA assignment-expression
  115 primary-expression: L_BRACKET expression . R_BRACKET

    LO_COMMA   shift, and go to state 174
    R_BRACKET  shift, and go to state 184


State 121

   92 cast-expression: L_BRACKET type-specifier . R_BRACKET cast-expression

    R_BRACKET  shift, and go to state 185


State 122

   46 initializer-list: initializer .

    $default  reduce using rule 46 (initializer-list)


State 123

   45 initializer: L_BRACE initializer-list . R_BRACE
   47 initializer-list: initializer-list . LO_COMMA initializer

    LO_COMMA  shift, and go to state 186
    R_BRACE   shift, and go to state 187


State 124

   62 conditional-expression: logical-OR-expression RO_TRI_QUES . expression RO_TRI_COLON conditional-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 188
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 125

   64 logical-OR-expression: logical-OR-expression LO_LGC_OR . logical-AND-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    logical-AND-expression     go to state 189
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 126

   66 logical-AND-expression: logical-AND-expression LO_LGC_AND . inclusive-OR-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    inclusive-OR-expression    go to state 190
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 127

   68 inclusive-OR-expression: inclusive-OR-expression LO_BIT_OR . exclusive-OR-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    exclusive-OR-expression    go to state 191
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 128

   70 exclusive-OR-expression: exclusive-OR-expression LO_BIT_XOR . AND-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    AND-expression             go to state 192
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 129

   72 AND-expression: AND-expression LO_BIT_AND . equality-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    equality-expression        go to state 193
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 130

   74 equality-expression: equality-expression LO_EQ . relational-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    relational-expression      go to state 194
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 131

   75 equality-expression: equality-expression LO_N_EQ . relational-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    relational-expression      go to state 195
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 132

   77 relational-expression: relational-expression LO_REL_L . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    shift-expression           go to state 196
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 133

   78 relational-expression: relational-expression LO_REL_G . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    shift-expression           go to state 197
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 134

   79 relational-expression: relational-expression LO_REL_LE . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    shift-expression           go to state 198
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 135

   80 relational-expression: relational-expression LO_REL_GE . shift-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    shift-expression           go to state 199
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 136

   82 shift-expression: shift-expression LO_SFT_L . additive-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    additive-expression        go to state 200
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 137

   83 shift-expression: shift-expression LO_SFT_R . additive-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    additive-expression        go to state 201
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 138

   85 additive-expression: additive-expression LO_ADD . multiplicative-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    multiplicative-expression  go to state 202
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 139

   86 additive-expression: additive-expression LO_SUB . multiplicative-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    multiplicative-expression  go to state 203
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 140

   88 multiplicative-expression: multiplicative-expression LO_MUL . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 204
    unary-operator      go to state 75
    unary-expression    go to state 144
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 141

   89 multiplicative-expression: multiplicative-expression LO_DIV . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 205
    unary-operator      go to state 75
    unary-expression    go to state 144
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 142

   90 multiplicative-expression: multiplicative-expression LO_MOD . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 206
    unary-operator      go to state 75
    unary-expression    go to state 144
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 143

  102 unary-expression: unary-operator cast-expression .

    $default  reduce using rule 102 (unary-expression)


State 144

   91 cast-expression: unary-expression .

    $default  reduce using rule 91 (cast-expression)


State 145

   51 assignment-operator: RO_AS_ADDEQ .

    $default  reduce using rule 51 (assignment-operator)


State 146

   58 assignment-operator: RO_AS_SUBEQ .

    $default  reduce using rule 58 (assignment-operator)


State 147

   54 assignment-operator: RO_AS_MULEQ .

    $default  reduce using rule 54 (assignment-operator)


State 148

   53 assignment-operator: RO_AS_DIVEQ .

    $default  reduce using rule 53 (assignment-operator)


State 149

   56 assignment-operator: RO_AS_SFTL_EQ .

    $default  reduce using rule 56 (assignment-operator)


State 150

   57 assignment-operator: RO_AS_SFTR_EQ .

    $default  reduce using rule 57 (assignment-operator)


State 151

   52 assignment-operator: RO_AS_ANDEQ .

    $default  reduce using rule 52 (assignment-operator)


State 152

   55 assignment-operator: RO_AS_OREQ .

    $default  reduce using rule 55 (assignment-operator)


State 153

   50 assignment-operator: RO_ASSIGN .

    $default  reduce using rule 50 (assignment-operator)


State 154

   60 assignment-expression: unary-expression assignment-operator . assignment-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 207
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 155

  107 postfix-expression: postfix-expression LO_AS_SELFINC .

    $default  reduce using rule 107 (postfix-expression)


State 156

  108 postfix-expression: postfix-expression LO_AS_SELFDEC .

    $default  reduce using rule 108 (postfix-expression)


State 157

  105 postfix-expression: postfix-expression LO_MEMBER . IDENTIFIER

    IDENTIFIER  shift, and go to state 208


State 158

  106 postfix-expression: postfix-expression LO_PT_MEMBER . IDENTIFIER

    IDENTIFIER  shift, and go to state 209


State 159

  109 postfix-expression: postfix-expression L_BRACKET . argument-expression-list R_BRACKET
  110                   | postfix-expression L_BRACKET . R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    R_BRACKET      shift, and go to state 210

    assignment-expression      go to state 211
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    argument-expression-list   go to state 212
    primary-expression         go to state 78
    constant                   go to state 79


State 160

  104 postfix-expression: postfix-expression L_SQ_BRACKET . expression R_SQ_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 213
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 161

   15 io-statement: SCANF L_BRACKET . STRING LO_COMMA unary-expression R_BRACKET SEMICOLON

    STRING  shift, and go to state 214


State 162

   14 io-statement: PRINTF L_BRACKET . STRING LO_COMMA assignment-expression R_BRACKET SEMICOLON

    STRING  shift, and go to state 215


State 163

   17 jump-statement: KW_CONTINUE SEMICOLON .

    $default  reduce using rule 17 (jump-statement)


State 164

   16 jump-statement: KW_BREAK SEMICOLON .

    $default  reduce using rule 16 (jump-statement)


State 165

   24 selection-statement: KW_IF L_BRACKET . expression R_BRACKET statement
   25                    | KW_IF L_BRACKET . expression R_BRACKET statement KW_ELSE statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 216
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 166

   22 iteration-statement: KW_FOR L_BRACKET . SEMICOLON SEMICOLON R_BRACKET statement
   23                    | KW_FOR L_BRACKET . expression SEMICOLON expression SEMICOLON expression R_BRACKET statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    SEMICOLON      shift, and go to state 217
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 218
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 167

   18 jump-statement: KW_RET SEMICOLON .

    $default  reduce using rule 18 (jump-statement)


State 168

   19 jump-statement: KW_RET assignment-expression . SEMICOLON

    SEMICOLON  shift, and go to state 219


State 169

   20 iteration-statement: KW_WHILE L_BRACKET . expression R_BRACKET statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 220
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 170

   21 iteration-statement: KW_DO statement . KW_WHILE L_BRACKET expression R_BRACKET

    KW_WHILE  shift, and go to state 221


State 171

    7 statement: declaration .

    $default  reduce using rule 7 (statement)


State 172

   28 compound-statement: L_BRACE block-item-list R_BRACE .

    $default  reduce using rule 28 (compound-statement)


State 173

   31 block-item-list: block-item-list block-item .

    $default  reduce using rule 31 (block-item-list)


State 174

   49 expression: expression LO_COMMA . assignment-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 222
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 175

   27 expression-statement: expression SEMICOLON .

    $default  reduce using rule 27 (expression-statement)


State 176

  149 parameter-declaration: declaration-specifiers declarator .

    $default  reduce using rule 149 (parameter-declaration)


State 177

  148 parameter-type-list: parameter-type-list LO_COMMA . parameter-declaration

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    KW_STRUCT   shift, and go to state 5
    T_SIGNED    shift, and go to state 6
    T_UNSIGNED  shift, and go to state 7
    Q_CONST     shift, and go to state 8
    KW_UNION    shift, and go to state 9

    declaration-specifiers     go to state 105
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    parameter-declaration      go to state 223
    type-qualifier             go to state 18


State 178

  145 direct-declarator: direct-declarator L_BRACKET parameter-type-list R_BRACKET .

    $default  reduce using rule 145 (direct-declarator)


State 179

  144 direct-declarator: direct-declarator L_SQ_BRACKET assignment-expression R_SQ_BRACKET .

    $default  reduce using rule 144 (direct-declarator)


State 180

  125 struct-or-union-specifier: struct-or-union IDENTIFIER L_BRACE struct-declaration-list R_BRACE .

    $default  reduce using rule 125 (struct-or-union-specifier)


State 181

  138 struct-declarator-list: struct-declarator-list LO_COMMA . struct-declarator

    LO_MUL      shift, and go to state 21
    IDENTIFIER  shift, and go to state 22

    struct-declarator  go to state 224
    declarator         go to state 115
    direct-declarator  go to state 26
    pointer            go to state 27


State 182

  132 struct-declaration: specifier-qualifier-list struct-declarator-list SEMICOLON .

    $default  reduce using rule 132 (struct-declaration)


State 183

  140 struct-declarator: declarator COLON . INTEGER

    INTEGER  shift, and go to state 225


State 184

  115 primary-expression: L_BRACKET expression R_BRACKET .

    $default  reduce using rule 115 (primary-expression)


State 185

   92 cast-expression: L_BRACKET type-specifier R_BRACKET . cast-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    cast-expression     go to state 226
    unary-operator      go to state 75
    unary-expression    go to state 144
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 186

   47 initializer-list: initializer-list LO_COMMA . initializer

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 60

    initializer                go to state 227
    assignment-expression      go to state 62
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 187

   45 initializer: L_BRACE initializer-list R_BRACE .

    $default  reduce using rule 45 (initializer)


State 188

   49 expression: expression . LO_COMMA assignment-expression
   62 conditional-expression: logical-OR-expression RO_TRI_QUES expression . RO_TRI_COLON conditional-expression

    RO_TRI_COLON  shift, and go to state 228
    LO_COMMA      shift, and go to state 174


State 189

   64 logical-OR-expression: logical-OR-expression LO_LGC_OR logical-AND-expression .
   66 logical-AND-expression: logical-AND-expression . LO_LGC_AND inclusive-OR-expression

    LO_LGC_AND  shift, and go to state 126

    $default  reduce using rule 64 (logical-OR-expression)


State 190

   66 logical-AND-expression: logical-AND-expression LO_LGC_AND inclusive-OR-expression .
   68 inclusive-OR-expression: inclusive-OR-expression . LO_BIT_OR exclusive-OR-expression

    LO_BIT_OR  shift, and go to state 127

    $default  reduce using rule 66 (logical-AND-expression)


State 191

   68 inclusive-OR-expression: inclusive-OR-expression LO_BIT_OR exclusive-OR-expression .
   70 exclusive-OR-expression: exclusive-OR-expression . LO_BIT_XOR AND-expression

    LO_BIT_XOR  shift, and go to state 128

    $default  reduce using rule 68 (inclusive-OR-expression)


State 192

   70 exclusive-OR-expression: exclusive-OR-expression LO_BIT_XOR AND-expression .
   72 AND-expression: AND-expression . LO_BIT_AND equality-expression

    LO_BIT_AND  shift, and go to state 129

    $default  reduce using rule 70 (exclusive-OR-expression)


State 193

   72 AND-expression: AND-expression LO_BIT_AND equality-expression .
   74 equality-expression: equality-expression . LO_EQ relational-expression
   75                    | equality-expression . LO_N_EQ relational-expression

    LO_EQ    shift, and go to state 130
    LO_N_EQ  shift, and go to state 131

    $default  reduce using rule 72 (AND-expression)


State 194

   74 equality-expression: equality-expression LO_EQ relational-expression .
   77 relational-expression: relational-expression . LO_REL_L shift-expression
   78                      | relational-expression . LO_REL_G shift-expression
   79                      | relational-expression . LO_REL_LE shift-expression
   80                      | relational-expression . LO_REL_GE shift-expression

    LO_REL_L   shift, and go to state 132
    LO_REL_G   shift, and go to state 133
    LO_REL_LE  shift, and go to state 134
    LO_REL_GE  shift, and go to state 135

    $default  reduce using rule 74 (equality-expression)


State 195

   75 equality-expression: equality-expression LO_N_EQ relational-expression .
   77 relational-expression: relational-expression . LO_REL_L shift-expression
   78                      | relational-expression . LO_REL_G shift-expression
   79                      | relational-expression . LO_REL_LE shift-expression
   80                      | relational-expression . LO_REL_GE shift-expression

    LO_REL_L   shift, and go to state 132
    LO_REL_G   shift, and go to state 133
    LO_REL_LE  shift, and go to state 134
    LO_REL_GE  shift, and go to state 135

    $default  reduce using rule 75 (equality-expression)


State 196

   77 relational-expression: relational-expression LO_REL_L shift-expression .
   82 shift-expression: shift-expression . LO_SFT_L additive-expression
   83                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 136
    LO_SFT_R  shift, and go to state 137

    $default  reduce using rule 77 (relational-expression)


State 197

   78 relational-expression: relational-expression LO_REL_G shift-expression .
   82 shift-expression: shift-expression . LO_SFT_L additive-expression
   83                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 136
    LO_SFT_R  shift, and go to state 137

    $default  reduce using rule 78 (relational-expression)


State 198

   79 relational-expression: relational-expression LO_REL_LE shift-expression .
   82 shift-expression: shift-expression . LO_SFT_L additive-expression
   83                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 136
    LO_SFT_R  shift, and go to state 137

    $default  reduce using rule 79 (relational-expression)


State 199

   80 relational-expression: relational-expression LO_REL_GE shift-expression .
   82 shift-expression: shift-expression . LO_SFT_L additive-expression
   83                 | shift-expression . LO_SFT_R additive-expression

    LO_SFT_L  shift, and go to state 136
    LO_SFT_R  shift, and go to state 137

    $default  reduce using rule 80 (relational-expression)


State 200

   82 shift-expression: shift-expression LO_SFT_L additive-expression .
   85 additive-expression: additive-expression . LO_ADD multiplicative-expression
   86                    | additive-expression . LO_SUB multiplicative-expression

    LO_ADD  shift, and go to state 138
    LO_SUB  shift, and go to state 139

    $default  reduce using rule 82 (shift-expression)


State 201

   83 shift-expression: shift-expression LO_SFT_R additive-expression .
   85 additive-expression: additive-expression . LO_ADD multiplicative-expression
   86                    | additive-expression . LO_SUB multiplicative-expression

    LO_ADD  shift, and go to state 138
    LO_SUB  shift, and go to state 139

    $default  reduce using rule 83 (shift-expression)


State 202

   85 additive-expression: additive-expression LO_ADD multiplicative-expression .
   88 multiplicative-expression: multiplicative-expression . LO_MUL cast-expression
   89                          | multiplicative-expression . LO_DIV cast-expression
   90                          | multiplicative-expression . LO_MOD cast-expression

    LO_MUL  shift, and go to state 140
    LO_DIV  shift, and go to state 141
    LO_MOD  shift, and go to state 142

    $default  reduce using rule 85 (additive-expression)


State 203

   86 additive-expression: additive-expression LO_SUB multiplicative-expression .
   88 multiplicative-expression: multiplicative-expression . LO_MUL cast-expression
   89                          | multiplicative-expression . LO_DIV cast-expression
   90                          | multiplicative-expression . LO_MOD cast-expression

    LO_MUL  shift, and go to state 140
    LO_DIV  shift, and go to state 141
    LO_MOD  shift, and go to state 142

    $default  reduce using rule 86 (additive-expression)


State 204

   88 multiplicative-expression: multiplicative-expression LO_MUL cast-expression .

    $default  reduce using rule 88 (multiplicative-expression)


State 205

   89 multiplicative-expression: multiplicative-expression LO_DIV cast-expression .

    $default  reduce using rule 89 (multiplicative-expression)


State 206

   90 multiplicative-expression: multiplicative-expression LO_MOD cast-expression .

    $default  reduce using rule 90 (multiplicative-expression)


State 207

   60 assignment-expression: unary-expression assignment-operator assignment-expression .

    $default  reduce using rule 60 (assignment-expression)


State 208

  105 postfix-expression: postfix-expression LO_MEMBER IDENTIFIER .

    $default  reduce using rule 105 (postfix-expression)


State 209

  106 postfix-expression: postfix-expression LO_PT_MEMBER IDENTIFIER .

    $default  reduce using rule 106 (postfix-expression)


State 210

  110 postfix-expression: postfix-expression L_BRACKET R_BRACKET .

    $default  reduce using rule 110 (postfix-expression)


State 211

  111 argument-expression-list: assignment-expression .

    $default  reduce using rule 111 (argument-expression-list)


State 212

  109 postfix-expression: postfix-expression L_BRACKET argument-expression-list . R_BRACKET
  112 argument-expression-list: argument-expression-list . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 229
    R_BRACKET  shift, and go to state 230


State 213

   49 expression: expression . LO_COMMA assignment-expression
  104 postfix-expression: postfix-expression L_SQ_BRACKET expression . R_SQ_BRACKET

    LO_COMMA      shift, and go to state 174
    R_SQ_BRACKET  shift, and go to state 231


State 214

   15 io-statement: SCANF L_BRACKET STRING . LO_COMMA unary-expression R_BRACKET SEMICOLON

    LO_COMMA  shift, and go to state 232


State 215

   14 io-statement: PRINTF L_BRACKET STRING . LO_COMMA assignment-expression R_BRACKET SEMICOLON

    LO_COMMA  shift, and go to state 233


State 216

   24 selection-statement: KW_IF L_BRACKET expression . R_BRACKET statement
   25                    | KW_IF L_BRACKET expression . R_BRACKET statement KW_ELSE statement
   49 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 174
    R_BRACKET  shift, and go to state 234


State 217

   22 iteration-statement: KW_FOR L_BRACKET SEMICOLON . SEMICOLON R_BRACKET statement

    SEMICOLON  shift, and go to state 235


State 218

   23 iteration-statement: KW_FOR L_BRACKET expression . SEMICOLON expression SEMICOLON expression R_BRACKET statement
   49 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 174
    SEMICOLON  shift, and go to state 236


State 219

   19 jump-statement: KW_RET assignment-expression SEMICOLON .

    $default  reduce using rule 19 (jump-statement)


State 220

   20 iteration-statement: KW_WHILE L_BRACKET expression . R_BRACKET statement
   49 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 174
    R_BRACKET  shift, and go to state 237


State 221

   21 iteration-statement: KW_DO statement KW_WHILE . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 238


State 222

   49 expression: expression LO_COMMA assignment-expression .

    $default  reduce using rule 49 (expression)


State 223

  148 parameter-type-list: parameter-type-list LO_COMMA parameter-declaration .

    $default  reduce using rule 148 (parameter-type-list)


State 224

  138 struct-declarator-list: struct-declarator-list LO_COMMA struct-declarator .

    $default  reduce using rule 138 (struct-declarator-list)


State 225

  140 struct-declarator: declarator COLON INTEGER .

    $default  reduce using rule 140 (struct-declarator)


State 226

   92 cast-expression: L_BRACKET type-specifier R_BRACKET cast-expression .

    $default  reduce using rule 92 (cast-expression)


State 227

   47 initializer-list: initializer-list LO_COMMA initializer .

    $default  reduce using rule 47 (initializer-list)


State 228

   62 conditional-expression: logical-OR-expression RO_TRI_QUES expression RO_TRI_COLON . conditional-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    conditional-expression     go to state 239
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 144
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 229

  112 argument-expression-list: argument-expression-list LO_COMMA . assignment-expression

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 240
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 230

  109 postfix-expression: postfix-expression L_BRACKET argument-expression-list R_BRACKET .

    $default  reduce using rule 109 (postfix-expression)


State 231

  104 postfix-expression: postfix-expression L_SQ_BRACKET expression R_SQ_BRACKET .

    $default  reduce using rule 104 (postfix-expression)


State 232

   15 io-statement: SCANF L_BRACKET STRING LO_COMMA . unary-expression R_BRACKET SEMICOLON

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 117

    unary-operator      go to state 75
    unary-expression    go to state 241
    postfix-expression  go to state 77
    primary-expression  go to state 78
    constant            go to state 79


State 233

   14 io-statement: PRINTF L_BRACKET STRING LO_COMMA . assignment-expression R_BRACKET SEMICOLON

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    assignment-expression      go to state 242
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 234

   24 selection-statement: KW_IF L_BRACKET expression R_BRACKET . statement
   25                    | KW_IF L_BRACKET expression R_BRACKET . statement KW_ELSE statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    T_VOID         shift, and go to state 4
    SCANF          shift, and go to state 80
    PRINTF         shift, and go to state 81
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 82
    KW_BREAK       shift, and go to state 83
    KW_IF          shift, and go to state 84
    KW_FOR         shift, and go to state 85
    KW_RET         shift, and go to state 86
    KW_STRUCT      shift, and go to state 5
    KW_WHILE       shift, and go to state 87
    KW_DO          shift, and go to state 88
    T_SIGNED       shift, and go to state 6
    T_UNSIGNED     shift, and go to state 7
    Q_CONST        shift, and go to state 8
    SEMICOLON      shift, and go to state 89
    KW_UNION       shift, and go to state 9
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 243
    io-statement               go to state 92
    jump-statement             go to state 93
    iteration-statement        go to state 94
    selection-statement        go to state 95
    expression-statement       go to state 96
    compound-statement         go to state 97
    declaration                go to state 171
    declaration-specifiers     go to state 101
    expression                 go to state 102
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 235

   22 iteration-statement: KW_FOR L_BRACKET SEMICOLON SEMICOLON . R_BRACKET statement

    R_BRACKET  shift, and go to state 244


State 236

   23 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON . expression SEMICOLON expression R_BRACKET statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 245
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 237

   20 iteration-statement: KW_WHILE L_BRACKET expression R_BRACKET . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    T_VOID         shift, and go to state 4
    SCANF          shift, and go to state 80
    PRINTF         shift, and go to state 81
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 82
    KW_BREAK       shift, and go to state 83
    KW_IF          shift, and go to state 84
    KW_FOR         shift, and go to state 85
    KW_RET         shift, and go to state 86
    KW_STRUCT      shift, and go to state 5
    KW_WHILE       shift, and go to state 87
    KW_DO          shift, and go to state 88
    T_SIGNED       shift, and go to state 6
    T_UNSIGNED     shift, and go to state 7
    Q_CONST        shift, and go to state 8
    SEMICOLON      shift, and go to state 89
    KW_UNION       shift, and go to state 9
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 246
    io-statement               go to state 92
    jump-statement             go to state 93
    iteration-statement        go to state 94
    selection-statement        go to state 95
    expression-statement       go to state 96
    compound-statement         go to state 97
    declaration                go to state 171
    declaration-specifiers     go to state 101
    expression                 go to state 102
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 238

   21 iteration-statement: KW_DO statement KW_WHILE L_BRACKET . expression R_BRACKET

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 247
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 239

   62 conditional-expression: logical-OR-expression RO_TRI_QUES expression RO_TRI_COLON conditional-expression .

    $default  reduce using rule 62 (conditional-expression)


State 240

  112 argument-expression-list: argument-expression-list LO_COMMA assignment-expression .

    $default  reduce using rule 112 (argument-expression-list)


State 241

   15 io-statement: SCANF L_BRACKET STRING LO_COMMA unary-expression . R_BRACKET SEMICOLON

    R_BRACKET  shift, and go to state 248


State 242

   14 io-statement: PRINTF L_BRACKET STRING LO_COMMA assignment-expression . R_BRACKET SEMICOLON

    R_BRACKET  shift, and go to state 249


State 243

   24 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement .
   25                    | KW_IF L_BRACKET expression R_BRACKET statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 250

    KW_ELSE   [reduce using rule 24 (selection-statement)]
    $default  reduce using rule 24 (selection-statement)


State 244

   22 iteration-statement: KW_FOR L_BRACKET SEMICOLON SEMICOLON R_BRACKET . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    T_VOID         shift, and go to state 4
    SCANF          shift, and go to state 80
    PRINTF         shift, and go to state 81
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 82
    KW_BREAK       shift, and go to state 83
    KW_IF          shift, and go to state 84
    KW_FOR         shift, and go to state 85
    KW_RET         shift, and go to state 86
    KW_STRUCT      shift, and go to state 5
    KW_WHILE       shift, and go to state 87
    KW_DO          shift, and go to state 88
    T_SIGNED       shift, and go to state 6
    T_UNSIGNED     shift, and go to state 7
    Q_CONST        shift, and go to state 8
    SEMICOLON      shift, and go to state 89
    KW_UNION       shift, and go to state 9
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 251
    io-statement               go to state 92
    jump-statement             go to state 93
    iteration-statement        go to state 94
    selection-statement        go to state 95
    expression-statement       go to state 96
    compound-statement         go to state 97
    declaration                go to state 171
    declaration-specifiers     go to state 101
    expression                 go to state 102
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 245

   23 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression . SEMICOLON expression R_BRACKET statement
   49 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 174
    SEMICOLON  shift, and go to state 252


State 246

   20 iteration-statement: KW_WHILE L_BRACKET expression R_BRACKET statement .

    $default  reduce using rule 20 (iteration-statement)


State 247

   21 iteration-statement: KW_DO statement KW_WHILE L_BRACKET expression . R_BRACKET
   49 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 174
    R_BRACKET  shift, and go to state 253


State 248

   15 io-statement: SCANF L_BRACKET STRING LO_COMMA unary-expression R_BRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 254


State 249

   14 io-statement: PRINTF L_BRACKET STRING LO_COMMA assignment-expression R_BRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 255


State 250

   25 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement KW_ELSE . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    T_VOID         shift, and go to state 4
    SCANF          shift, and go to state 80
    PRINTF         shift, and go to state 81
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 82
    KW_BREAK       shift, and go to state 83
    KW_IF          shift, and go to state 84
    KW_FOR         shift, and go to state 85
    KW_RET         shift, and go to state 86
    KW_STRUCT      shift, and go to state 5
    KW_WHILE       shift, and go to state 87
    KW_DO          shift, and go to state 88
    T_SIGNED       shift, and go to state 6
    T_UNSIGNED     shift, and go to state 7
    Q_CONST        shift, and go to state 8
    SEMICOLON      shift, and go to state 89
    KW_UNION       shift, and go to state 9
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 256
    io-statement               go to state 92
    jump-statement             go to state 93
    iteration-statement        go to state 94
    selection-statement        go to state 95
    expression-statement       go to state 96
    compound-statement         go to state 97
    declaration                go to state 171
    declaration-specifiers     go to state 101
    expression                 go to state 102
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 251

   22 iteration-statement: KW_FOR L_BRACKET SEMICOLON SEMICOLON R_BRACKET statement .

    $default  reduce using rule 22 (iteration-statement)


State 252

   23 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON . expression R_BRACKET statement

    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59

    expression                 go to state 257
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79


State 253

   21 iteration-statement: KW_DO statement KW_WHILE L_BRACKET expression R_BRACKET .

    $default  reduce using rule 21 (iteration-statement)


State 254

   15 io-statement: SCANF L_BRACKET STRING LO_COMMA unary-expression R_BRACKET SEMICOLON .

    $default  reduce using rule 15 (io-statement)


State 255

   14 io-statement: PRINTF L_BRACKET STRING LO_COMMA assignment-expression R_BRACKET SEMICOLON .

    $default  reduce using rule 14 (io-statement)


State 256

   25 selection-statement: KW_IF L_BRACKET expression R_BRACKET statement KW_ELSE statement .

    $default  reduce using rule 25 (selection-statement)


State 257

   23 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression . R_BRACKET statement
   49 expression: expression . LO_COMMA assignment-expression

    LO_COMMA   shift, and go to state 174
    R_BRACKET  shift, and go to state 258


State 258

   23 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET . statement

    T_CHAR         shift, and go to state 1
    T_INT          shift, and go to state 2
    T_BOOL         shift, and go to state 3
    T_VOID         shift, and go to state 4
    SCANF          shift, and go to state 80
    PRINTF         shift, and go to state 81
    LO_AS_SELFINC  shift, and go to state 48
    LO_AS_SELFDEC  shift, and go to state 49
    LO_MUL         shift, and go to state 50
    LO_ADD         shift, and go to state 51
    LO_SUB         shift, and go to state 52
    LO_BIT_NOT     shift, and go to state 53
    LO_LGC_NOT     shift, and go to state 54
    LO_BIT_AND     shift, and go to state 55
    KW_CONTINUE    shift, and go to state 82
    KW_BREAK       shift, and go to state 83
    KW_IF          shift, and go to state 84
    KW_FOR         shift, and go to state 85
    KW_RET         shift, and go to state 86
    KW_STRUCT      shift, and go to state 5
    KW_WHILE       shift, and go to state 87
    KW_DO          shift, and go to state 88
    T_SIGNED       shift, and go to state 6
    T_UNSIGNED     shift, and go to state 7
    Q_CONST        shift, and go to state 8
    SEMICOLON      shift, and go to state 89
    KW_UNION       shift, and go to state 9
    IDENTIFIER     shift, and go to state 56
    INTEGER        shift, and go to state 57
    STRING         shift, and go to state 58
    L_BRACKET      shift, and go to state 59
    L_BRACE        shift, and go to state 35

    statement                  go to state 259
    io-statement               go to state 92
    jump-statement             go to state 93
    iteration-statement        go to state 94
    selection-statement        go to state 95
    expression-statement       go to state 96
    compound-statement         go to state 97
    declaration                go to state 171
    declaration-specifiers     go to state 101
    expression                 go to state 102
    assignment-expression      go to state 103
    conditional-expression     go to state 63
    logical-OR-expression      go to state 64
    logical-AND-expression     go to state 65
    inclusive-OR-expression    go to state 66
    exclusive-OR-expression    go to state 67
    AND-expression             go to state 68
    equality-expression        go to state 69
    relational-expression      go to state 70
    shift-expression           go to state 71
    additive-expression        go to state 72
    multiplicative-expression  go to state 73
    cast-expression            go to state 74
    unary-operator             go to state 75
    unary-expression           go to state 76
    postfix-expression         go to state 77
    primary-expression         go to state 78
    constant                   go to state 79
    type-specifier             go to state 15
    struct-or-union-specifier  go to state 16
    struct-or-union            go to state 17
    type-qualifier             go to state 18


State 259

   23 iteration-statement: KW_FOR L_BRACKET expression SEMICOLON expression SEMICOLON expression R_BRACKET statement .

    $default  reduce using rule 23 (iteration-statement)
