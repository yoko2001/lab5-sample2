Terminals unused in grammar

   T_STRING
   LO_PT_MEMBER
   LO_MEMBER
   L_BRACKET
   R_BRACKET
   L_SQ_BRACKET
   R_SQ_BRACKET
   L_BRACE
   R_BRACE
   LO_EQ
   LO_N_EQ
   RO_AS_ADDEQ
   RO_AS_SUBEQ
   RO_AS_MULEQ
   RO_AS_DIVEQ
   RO_AS_SFTL_EQ
   RO_AS_SFTR_EQ
   RO_AS_ANDEQ
   RO_AS_OREQ
   LO_AS_SELFINC
   LO_AS_SELFDEC
   RO_TRI_QUES
   RO_TRI_COLON
   LO_MUL
   LO_DIV
   LO_ADD
   LO_SUB
   LO_BIT_NOT
   LO_MOD
   LO_SFT_L
   LO_SFT_R
   LO_LGC_NOT
   LO_BIT_XOR
   LO_BIT_AND
   LO_BIT_OR
   LO_LGC_OR
   LO_LGC_AND
   KW_IF
   KW_FOR
   KW_RET
   KW_STRUCT
   KW_WHILE
   KW_DO
   Q_UNSIGNED
   Q_CONST
   LO_COMMA
   LO_REL_L
   LO_REL_G
   LO_REL_LE
   LO_REL_GE
   BOOL


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON

    6 declaration: T IDENTIFIER RO_ASSIGN expr
    7            | T IDENTIFIER

    8 expr: IDENTIFIER
    9     | INTEGER
   10     | CHAR
   11     | STRING

   12 T: T_INT
   13  | T_CHAR
   14  | T_BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 13
T_INT (259) 12
T_STRING (260)
T_BOOL (261) 14
LO_PT_MEMBER (262)
LO_MEMBER (263)
L_BRACKET (264)
R_BRACKET (265)
L_SQ_BRACKET (266)
R_SQ_BRACKET (267)
L_BRACE (268)
R_BRACE (269)
LO_EQ (270)
LO_N_EQ (271)
RO_AS_ADDEQ (272)
RO_AS_SUBEQ (273)
RO_AS_MULEQ (274)
RO_AS_DIVEQ (275)
RO_AS_SFTL_EQ (276)
RO_AS_SFTR_EQ (277)
RO_AS_ANDEQ (278)
RO_AS_OREQ (279)
LO_AS_SELFINC (280)
LO_AS_SELFDEC (281)
RO_TRI_QUES (282)
RO_TRI_COLON (283)
LO_MUL (284)
LO_DIV (285)
LO_ADD (286)
LO_SUB (287)
LO_BIT_NOT (288)
LO_MOD (289)
LO_SFT_L (290)
LO_SFT_R (291)
LO_LGC_NOT (292)
LO_BIT_XOR (293)
LO_BIT_AND (294)
LO_BIT_OR (295)
RO_ASSIGN (296) 6
LO_LGC_OR (297)
LO_LGC_AND (298)
KW_IF (299)
KW_FOR (300)
KW_RET (301)
KW_STRUCT (302)
KW_WHILE (303)
KW_DO (304)
Q_UNSIGNED (305)
Q_CONST (306)
SEMICOLON (307) 4 5
LO_COMMA (308)
LO_REL_L (309)
LO_REL_G (310)
LO_REL_LE (311)
LO_REL_GE (312)
IDENTIFIER (313) 6 7 8
INTEGER (314) 9
CHAR (315) 10
BOOL (316)
STRING (317) 11


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
program (64)
    on left: 1, on right: 0
statements (65)
    on left: 2 3, on right: 1 3
statement (66)
    on left: 4 5, on right: 2 3
declaration (67)
    on left: 6 7, on right: 5
expr (68)
    on left: 8 9 10 11, on right: 6
T (69)
    on left: 12 13 14, on right: 6 7


State 0

    0 $accept: . program $end

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    SEMICOLON  shift, and go to state 4

    program      go to state 5
    statements   go to state 6
    statement    go to state 7
    declaration  go to state 8
    T            go to state 9


State 1

   13 T: T_CHAR .

    $default  reduce using rule 13 (T)


State 2

   12 T: T_INT .

    $default  reduce using rule 12 (T)


State 3

   14 T: T_BOOL .

    $default  reduce using rule 14 (T)


State 4

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 10


State 6

    1 program: statements .
    3 statements: statements . statement

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    SEMICOLON  shift, and go to state 4

    $default  reduce using rule 1 (program)

    statement    go to state 11
    declaration  go to state 8
    T            go to state 9


State 7

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 8

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 12


State 9

    6 declaration: T . IDENTIFIER RO_ASSIGN expr
    7            | T . IDENTIFIER

    IDENTIFIER  shift, and go to state 13


State 10

    0 $accept: program $end .

    $default  accept


State 11

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 12

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 13

    6 declaration: T IDENTIFIER . RO_ASSIGN expr
    7            | T IDENTIFIER .

    RO_ASSIGN  shift, and go to state 14

    $default  reduce using rule 7 (declaration)


State 14

    6 declaration: T IDENTIFIER RO_ASSIGN . expr

    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 19


State 15

    8 expr: IDENTIFIER .

    $default  reduce using rule 8 (expr)


State 16

    9 expr: INTEGER .

    $default  reduce using rule 9 (expr)


State 17

   10 expr: CHAR .

    $default  reduce using rule 10 (expr)


State 18

   11 expr: STRING .

    $default  reduce using rule 11 (expr)


State 19

    6 declaration: T IDENTIFIER RO_ASSIGN expr .

    $default  reduce using rule 6 (declaration)
