entering yyparse
postfix func
parsed
lno@:   0  @22      NODE_PROG[ @21 @39 @51 @76 @89 @112 @125 @138 @149 @255  ]
lno@:   1  @21NODE_EXTERN_DECL[ @19  ]
lno@:   1  @19      NODE_STMT[ @20 @18  ]declaration
lno@:   1  @20 NODE_DECL_SPCF[ @1  ]
lno@:   1  @1               int
lno@:   1  @18 NODE_DECL_LIST[ @16  ]
lno@:   1  @16    FATHER_DECL[ @17  ]
lno@:   1  @17NODE_INIT_DECL_VARS[ @3 @15  ]
lno@:   1  @3direct DECLARATOR[ @2  ]
lno@:   1  @2       NODE_VAR variable: a
lno@:   1  @15               [ @14  ][initializer]
lno@:   1  @14      NODE_EXPR[ @9 @13  ]
lno@:   1  @9      NODE_EXPR[ @8  ]
lno@:   1  @8      NODE_EXPR[ @6 @7  ]
lno@:   1  @6      NODE_EXPR[ @4 @5  ]+
lno@:   1  @4     NODE_CONST val: 0
lno@:   1  @5     NODE_CONST val: 1
lno@:   1  @7     NODE_CONST val: 2
lno@:   1  @13      NODE_EXPR[ @12  ]
lno@:   1  @12      NODE_EXPR[ @10 @11  ]
lno@:   1  @10     NODE_CONST val: 5
lno@:   1  @11     NODE_CONST val: 6
lno@:   2  @39NODE_EXTERN_DECL[ @37  ]
lno@:   2  @37      NODE_STMT[ @38 @30  ]declaration
lno@:   2  @38 NODE_DECL_SPCF[ @23  ]
lno@:   2  @23               int
lno@:   2  @30 NODE_DECL_LIST[ @28 @35  ]
lno@:   2  @28    FATHER_DECL[ @29  ]
lno@:   2  @29NODE_INIT_DECL_VARS[ @25 @27  ]
lno@:   2  @25direct DECLARATOR[ @24  ]
lno@:   2  @24       NODE_VAR variable: b
lno@:   2  @27               [ @26  ][initializer]
lno@:   2  @26     NODE_CONST val: 1
lno@:   2  @35    FATHER_DECL[ @36  ]
lno@:   2  @36NODE_INIT_DECL_VARS[ @32 @34  ]
lno@:   2  @32direct DECLARATOR[ @31  ]
lno@:   2  @31       NODE_VAR variable: c
lno@:   2  @34               [ @33  ][initializer]
lno@:   2  @33     NODE_CONST val: 1
lno@:   3  @51NODE_EXTERN_DECL[ @49  ]
lno@:   3  @49      NODE_STMT[ @50 @48  ]declaration
lno@:   3  @50 NODE_DECL_SPCF[ @40 @41  ]
lno@:   3  @40               const
lno@:   3  @41               int
lno@:   3  @48 NODE_DECL_LIST[ @46  ]
lno@:   3  @46    FATHER_DECL[ @47  ]
lno@:   3  @47NODE_INIT_DECL_VARS[ @43 @45  ]
lno@:   3  @43direct DECLARATOR[ @42  ]
lno@:   3  @42       NODE_VAR variable: c
lno@:   3  @45               [ @44  ][initializer]
lno@:   3  @44     NODE_CONST val: 1
lno@:   7  @76NODE_EXTERN_DECL[ @74  ]
lno@:   7  @74NODE_EXTERN_FUNC_DECL[ @75 @67 @73  ]
lno@:   7  @75 NODE_DECL_SPCF[ @52  ]
lno@:   5  @52               int
lno@:   5  @67direct DECLARATOR[ @65  ]
lno@:   5  @65    FATHER_DECL[ @66  ]
lno@:   5  @66 NODE_DECL_FUNC[ @53 @59  ]
lno@:   5  @53       NODE_VAR variable: f
lno@:   5  @59 PARA_LIST_NODE[ @57 @63  ]
lno@:   5  @57      PARA_NODE[ @58 @56  ]
lno@:   5  @58 NODE_DECL_SPCF[ @54  ]
lno@:   5  @54               int
lno@:   5  @56direct DECLARATOR[ @55  ]
lno@:   5  @55       NODE_VAR variable: a
lno@:   5  @63      PARA_NODE[ @64 @62  ]
lno@:   5  @64 NODE_DECL_SPCF[ @60  ]
lno@:   5  @60               int
lno@:   5  @62direct DECLARATOR[ @61  ]
lno@:   5  @61       NODE_VAR variable: b
lno@:   7  @73      NODE_STMT[ @72  ]compound
lno@:   6  @72               [ @71  ]
lno@:   6  @71               [ @70  ]
lno@:   6  @70      NODE_EXPR[ @68 @69  ]+
lno@:   6  @68       NODE_VAR variable: a
lno@:   6  @69       NODE_VAR variable: b
lno@:   8  @89NODE_EXTERN_DECL[ @87  ]
lno@:   8  @87      NODE_STMT[ @88 @86  ]declaration
lno@:   8  @88 NODE_DECL_SPCF[ @77  ]
lno@:   8  @77               int
lno@:   8  @86 NODE_DECL_LIST[ @84  ]
lno@:   8  @84    FATHER_DECL[ @85  ]
lno@:   8  @85 NODE_DECL_VARS[ @83  ]
lno@:   8  @83direct DECLARATOR[ @82  ]
lno@:   8  @82               [ @80 @81  ]array ofarray of
lno@:   8  @80               [ @78 @79  ]array of
lno@:   8  @78       NODE_VAR variable: bb
lno@:   8  @79     NODE_CONST val: 10
lno@:   8  @81     NODE_CONST val: 5
lno@:   9  @112NODE_EXTERN_DECL[ @110  ]
lno@:   9  @110      NODE_STMT[ @111 @109  ]declaration
lno@:   9  @111 NODE_DECL_SPCF[ @90  ]
lno@:   9  @90               int
lno@:   9  @109 NODE_DECL_LIST[ @107  ]
lno@:   9  @107    FATHER_DECL[ @108  ]
lno@:   9  @108NODE_INIT_DECL_VARS[ @96 @106  ]
lno@:   9  @96direct DECLARATOR[ @95  ]
lno@:   9  @95               [ @91 @94  ]array of
lno@:   9  @91       NODE_VAR variable: name
lno@:   9  @94      NODE_EXPR[ @92 @93  ]
lno@:   9  @92     NODE_CONST val: 2
lno@:   9  @93     NODE_CONST val: 10
lno@:   9  @106               [ @98 @101 @103 @105  ][initializer]
lno@:   9  @98               [ @97  ][initializer]
lno@:   9  @97     NODE_CONST val: 2
lno@:   9  @101               [ @100  ][initializer]
lno@:   9  @100               [ @99  ][initializer]
lno@:   9  @99     NODE_CONST val: 3
lno@:   9  @103               [ @102  ][initializer]
lno@:   9  @102     NODE_CONST val: 4
lno@:   9  @105               [ @104  ][initializer]
lno@:   9  @104     NODE_CONST val: 5
lno@:  10  @125NODE_EXTERN_DECL[ @123  ]
lno@:  10  @123      NODE_STMT[ @124 @122  ]declaration
lno@:  10  @124 NODE_DECL_SPCF[ @113  ]
lno@:  10  @113               char
lno@:  10  @122 NODE_DECL_LIST[ @120  ]
lno@:  10  @120    FATHER_DECL[ @121  ]
lno@:  10  @121NODE_INIT_DECL_VARS[ @117 @119  ]
lno@:  10  @117   PT_DECL_NODE[ @116  ]
lno@:  10  @116direct DECLARATOR[ @114  ]
lno@:  10  @114       NODE_VAR variable: str
lno@:  10  @119               [ @118  ][initializer]
lno@:  10  @118     NODE_CONST : abcde
lno@:  11  @138NODE_EXTERN_DECL[ @136  ]
lno@:  11  @136      NODE_STMT[ @137 @135  ]declaration
lno@:  11  @137 NODE_DECL_SPCF[ @126  ]
lno@:  11  @126               char
lno@:  11  @135 NODE_DECL_LIST[ @133  ]
lno@:  11  @133    FATHER_DECL[ @134  ]
lno@:  11  @134NODE_INIT_DECL_VARS[ @130 @132  ]
lno@:  11  @130direct DECLARATOR[ @129  ]
lno@:  11  @129               [ @127 @128  ]array of
lno@:  11  @127       NODE_VAR variable: str
lno@:  11  @128     NODE_CONST val: 10
lno@:  11  @132               [ @131  ][initializer]
lno@:  11  @131     NODE_CONST : qwert
lno@:  12  @149NODE_EXTERN_DECL[ @147  ]
lno@:  12  @147      NODE_STMT[ @148 @146  ]declaration
lno@:  12  @148 NODE_DECL_SPCF[ @139  ]
lno@:  12  @139               int
lno@:  12  @146 NODE_DECL_LIST[ @144  ]
lno@:  12  @144    FATHER_DECL[ @145  ]
lno@:  12  @145 NODE_DECL_VARS[ @143  ]
lno@:  12  @143   PT_DECL_NODE[ @142  ]
lno@:  12  @142direct DECLARATOR[ @140  ]
lno@:  12  @140       NODE_VAR variable: pt
lno@:  32  @255NODE_EXTERN_DECL[ @253  ]
lno@:  32  @253NODE_EXTERN_FUNC_DECL[ @254 @158 @252  ]
lno@:  32  @254 NODE_DECL_SPCF[ @150  ]
lno@:  14  @150               int
lno@:  14  @158direct DECLARATOR[ @156  ]
lno@:  14  @156    FATHER_DECL[ @157  ]
lno@:  14  @157 NODE_DECL_FUNC[ @151 @155  ]
lno@:  14  @151       NODE_VAR variable: main
lno@:  14  @155 PARA_LIST_NODE[ @153  ]
lno@:  14  @153      PARA_NODE[ @154  ]
lno@:  14  @154 NODE_DECL_SPCF[ @152  ]
lno@:  14  @152               int
lno@:  32  @252      NODE_STMT[ @205  ]compound
lno@:  21  @205               [ @204 @215 @240 @251  ]
lno@:  21  @204      NODE_STMT[ @166 @202  ]select
lno@:  15  @166      NODE_EXPR[ @165  ]
lno@:  15  @165      NODE_EXPR[ @159 @164  ]=
lno@:  15  @159       NODE_VAR variable: a
lno@:  15  @164      NODE_EXPR[ @163  ]
lno@:  15  @163      NODE_EXPR[ @161 @162  ]
lno@:  15  @161       NODE_VAR variable: c
lno@:  15  @162     NODE_CONST val: 1
lno@:  20  @202      NODE_STMT[ @176  ]compound
lno@:  16  @176               [ @174 @187 @200  ]
lno@:  16  @174      NODE_STMT[ @175 @173  ]declaration
lno@:  16  @175 NODE_DECL_SPCF[ @167 @168  ]
lno@:  16  @167               unsigned
lno@:  16  @168               int
lno@:  16  @173 NODE_DECL_LIST[ @171  ]
lno@:  16  @171    FATHER_DECL[ @172  ]
lno@:  16  @172 NODE_DECL_VARS[ @170  ]
lno@:  16  @170direct DECLARATOR[ @169  ]
lno@:  16  @169       NODE_VAR variable: h
lno@:  18  @187      NODE_EXPR[ @186  ]
lno@:  18  @186      NODE_EXPR[ @177 @185  ]=
lno@:  18  @177       NODE_VAR variable: a
lno@:  18  @185      NODE_EXPR[ @181 @184  ]
lno@:  18  @181      NODE_EXPR[ @179 @180  ]+
lno@:  18  @179       NODE_VAR variable: b
lno@:  18  @180       NODE_VAR variable: c
lno@:  18  @184      NODE_EXPR[ @182 @183  ]
lno@:  18  @182     NODE_CONST val: 12
lno@:  18  @183     NODE_CONST val: 8
lno@:  19  @200      NODE_STMT[ @201 @199  ]declaration
lno@:  19  @201 NODE_DECL_SPCF[ @188  ]
lno@:  19  @188               int
lno@:  19  @199 NODE_DECL_LIST[ @197  ]
lno@:  19  @197    FATHER_DECL[ @198  ]
lno@:  19  @198NODE_INIT_DECL_VARS[ @190 @196  ]
lno@:  19  @190direct DECLARATOR[ @189  ]
lno@:  19  @189       NODE_VAR variable: jj
lno@:  19  @196               [ @195  ][initializer]
lno@:  19  @195      NODE_EXPR[ @193 @194  ]
lno@:  19  @193      NODE_EXPR[ @191 @192  ]+
lno@:  19  @191       NODE_VAR variable: b
lno@:  19  @192       NODE_VAR variable: c
lno@:  19  @194     NODE_CONST val: 1
lno@:  21  @215      NODE_EXPR[ @214  ]
lno@:  21  @214      NODE_EXPR[ @211 @213  ]=
lno@:  21  @211      NODE_EXPR[ @208 @210  ][]
lno@:  21  @208      NODE_EXPR[ @203 @207  ][]
lno@:  21  @203       NODE_VAR variable: b
lno@:  21  @207      NODE_EXPR[ @206  ]
lno@:  21  @206     NODE_CONST val: 0
lno@:  21  @210      NODE_EXPR[ @209  ]
lno@:  21  @209     NODE_CONST val: 1
lno@:  21  @213     NODE_CONST val: 1
lno@:  26  @240               [ @220 @224 @227 @239  ][iteration for]
lno@:  22  @220      NODE_EXPR[ @219  ]
lno@:  22  @219      NODE_EXPR[ @216 @218  ]=
lno@:  22  @216       NODE_VAR variable: i
lno@:  22  @218     NODE_CONST val: 0
lno@:  22  @224      NODE_EXPR[ @223  ]
lno@:  22  @223      NODE_EXPR[ @221 @222  ]
lno@:  22  @221       NODE_VAR variable: i
lno@:  22  @222     NODE_CONST val: 25
lno@:  22  @227      NODE_EXPR[ @226  ]
lno@:  22  @226      NODE_EXPR[ @225  ]
lno@:  22  @225       NODE_VAR variable: i
lno@:  26  @239      NODE_STMT[ @237  ]compound
lno@:  24  @237               [ @236 @238  ]
lno@:  24  @236      NODE_EXPR[ @235  ]
lno@:  24  @235      NODE_EXPR[ @228 @234  ]=
lno@:  24  @228       NODE_VAR variable: a
lno@:  24  @234      NODE_EXPR[ @230 @232  ]
lno@:  24  @230       NODE_VAR variable: f
lno@:  24  @232               [ @231 @233  ]
lno@:  24  @231       NODE_VAR variable: i
lno@:  24  @233     NODE_CONST val: 1
lno@:  25  @238               [CONTINUE]
lno@:  31  @251               [ @242 @250  ][iteration while]
lno@:  28  @242      NODE_EXPR[ @241  ]
lno@:  28  @241       NODE_VAR variable: i
lno@:  31  @250      NODE_STMT[ @248  ]compound
lno@:  29  @248               [ @247 @249  ]
lno@:  29  @247      NODE_EXPR[ @246  ]
lno@:  29  @246      NODE_EXPR[ @243 @245  ]=
lno@:  29  @243       NODE_VAR variable: a
lno@:  29  @245     NODE_CONST val: 0
lno@:  30  @249               [BREAK]
setting up type system
start domain dump
born_son_domain NODE_EXTERN_FUNC_DECL
born_son_domain STMT_COMPOUND
born_son_domain NODE_EXTERN_FUNC_DECL
born_son_domain STMT_COMPOUND
born_son_domain STMT_COMPOUND
born_son_domain STMT_COMPOUND
born_son_domain STMT_COMPOUND
basic size of type is: 4
16
NODE_INIT_DECL_VARS
a return type set to type @0x6164e0
domain: 0, added element: a pos: 1
decl node's size of type is: 4
basic size of type is: 4
28
NODE_INIT_DECL_VARS
b return type set to type @0x6164e0
domain: 0, added element: b pos: 2
decl node's size of type is: 4
35
NODE_INIT_DECL_VARS
c return type set to type @0x6164e0
domain: 0, added element: c pos: 2
decl node's size of type is: 4
basic size of type is: 4
46
NODE_INIT_DECL_VARS
c return type set to type @0x16b5430
domain: 0, added element: c pos: 3
decl node's size of type is: 4
basic size of type is: 4
84
NODE_DECL_VARS
got array len5of size: 4
got array len10of size: 20
bb return type set to type @0x16b57f0
decl node's size of type is: 200
basic size of type is: 4
107
NODE_INIT_DECL_VARS
got array len0of size: 4
name return type set to type @0x16b5860
decl node's size of type is: 0
basic size of type is: 1
120
NODE_INIT_DECL_VARS
domain: 0, added element: str pos: 10
decl node's size of type is: 4
basic size of type is: 1
133
NODE_INIT_DECL_VARS
got array len10of size: 1
str return type set to type @0x16b56b0
decl node's size of type is: 10
basic size of type is: 4
144
NODE_DECL_VARS
pointer
domain: 0, added element: pt pos: 12
decl node's size of type is: 4
basic size of type is: 4
171
NODE_DECL_VARS
h return type set to type @0x6164f0
domain: 5, added element: h pos: 16
decl node's size of type is: 4
basic size of type is: 4
197
NODE_INIT_DECL_VARS
jj return type set to type @0x6164e0
domain: 5, added element: jj pos: 19
decl node's size of type is: 4
f return type set to type @0x6164e0
domain: 1, added element: a pos: 5
para size: 4
domain: 1, added element: b pos: 5
para size: 4
f0x16b5500 func set
domain: 0, added element: f pos: 7
main return type set to type @0x6164e0
para size: 4
main0x16b5b60 func set
domain: 0, added element: main pos: 32
